%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: AB&G Daily Local Ad 05 cropped.pdf
%%Creator: Adobe Acrobat 9.2.0
%%For: Jack
%%CreationDate: 10/20/09, 12:15 PM
%%BoundingBox: 0 0 133 145
%%HiResBoundingBox: 0 0 132.0002 144.0002
%%CropBox: 0 0 132.0002 144.0002
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 36216 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:56:37        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="Adobe PDF library 6.66"
   xmp:CreateDate="2005-07-28T18:25:03-04:00"
   xmp:ModifyDate="2009-10-20T12:15:33-04:00"
   xmp:CreatorTool="Illustrator"
   xmp:MetadataDate="2009-10-20T12:15:33-04:00"
   xmpMM:DocumentID="uuid:1ca09140-0030-11da-a7e8-000a95b0046a"
   xmpMM:InstanceID="uuid:5964469d-2936-a347-9790-57a4a784ccec"
   dc:format="application/pdf">
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:format="JPEG"
      xmpGImg:width="236"
      xmpGImg:height="256"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADsAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A864pdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVbVWdgiAszEBVAqST0AGKtujo5R1KupoysKEH3BxVbi&#xA;rsVdirsVdirsVev/APrrX/gz/wDYtih5Bil2KuxVl/5ZeT9M8za1efpm5ltNC0awn1XVpoADMbe3&#xA;4gpFyBXm7OAK4qzax/KTQPPHlS/1T8t7W9a6t9TjgSHVp4Ek+rizaWZQE+Bj63Hh3p19lDFrb8kf&#xA;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"/>
    </rdf:Alt>
   </xmp:Thumbnails>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -144 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
1.52587e-05 0 mo
1.52587e-05 144 li
132 144 li
132 0 li
cp
clp
[1 0 0 1 -250.531 0 ]ct
set_def_flat
382.687 144.028 mo
250.711 144.028 li
250.711 .0275269 li
382.687 .0275269 li
382.687 144.028 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
270.045 11.4728 mo
269.89 11.5764 269.521 11.7043 269.055 11.7043 cv
267.712 11.7043 267.021 10.5363 267.021 8.99237 cv
267.021 7.15253 267.966 6.1369 269.141 6.1369 cv
269.596 6.1369 269.942 6.26483 270.097 6.37616 cv
269.913 7.33612 li
269.74 7.2326 269.492 7.1369 269.176 7.1369 cv
268.484 7.1369 267.943 7.72089 267.943 8.92889 cv
267.943 10.008 268.404 10.6887 269.182 10.6887 cv
269.452 10.6887 269.74 10.6164 269.918 10.5129 cv
270.045 11.4728 li
cp
0 0 0 0 cmyk
f
270.582 5.93671 mo
271.457 5.93671 li
271.457 8.17596 li
271.468 8.17596 li
271.561 8.00018 271.676 7.86444 271.814 7.76874 cv
271.946 7.67206 272.108 7.61639 272.269 7.61639 cv
272.828 7.61639 273.254 8.15253 273.254 9.33612 cv
273.254 11.6164 li
272.378 11.6164 li
272.378 9.46405 li
272.378 8.95233 272.252 8.60077 271.923 8.60077 cv
271.693 8.60077 271.549 8.80878 271.486 9.03241 cv
271.462 9.10468 271.457 9.20819 271.457 9.29608 cv
271.457 11.6164 li
270.582 11.6164 li
270.582 5.93671 li
cp
f
275.662 9.20819 mo
275.662 8.9201 275.57 8.4162 275.172 8.4162 cv
274.798 8.4162 274.648 8.88885 274.625 9.20819 cv
275.662 9.20819 li
cp
274.631 10.0402 mo
274.66 10.5519 275.017 10.7922 275.426 10.7922 cv
275.725 10.7922 275.967 10.7365 276.203 10.6242 cv
276.318 11.4484 li
276.03 11.6164 275.679 11.6965 275.299 11.6965 cv
274.343 11.6965 273.795 10.9279 273.795 9.69647 cv
273.795 8.70428 274.245 7.60858 275.218 7.60858 cv
276.128 7.60858 276.474 8.59198 276.474 9.56073 cv
276.474 9.76874 276.457 9.95233 276.445 10.048 cv
274.631 10.0402 li
cp
f
276.992 10.5607 mo
277.153 10.6965 277.487 10.8488 277.747 10.8488 cv
278.012 10.8488 278.121 10.7287 278.121 10.5285 cv
278.121 10.3205 278.035 10.2248 277.712 10.0724 cv
277.125 9.80878 276.9 9.36053 276.906 8.90448 cv
276.906 8.16815 277.355 7.61639 278.052 7.61639 cv
278.38 7.61639 278.668 7.7287 278.841 7.84882 cv
278.691 8.68085 li
278.564 8.59198 278.317 8.46405 278.081 8.46405 cv
277.868 8.46405 277.747 8.58417 277.747 8.77655 cv
277.747 8.96796 277.856 9.06464 278.202 9.2326 cv
278.737 9.48065 278.956 9.86444 278.962 10.4328 cv
278.962 11.1682 278.553 11.7043 277.747 11.7043 cv
277.378 11.7043 277.05 11.5842 276.836 11.424 cv
276.992 10.5607 li
cp
f
280.477 6.64081 mo
280.477 7.70428 li
281.105 7.70428 li
281.105 8.60077 li
280.477 8.60077 li
280.477 10.0246 li
280.477 10.4963 280.563 10.7121 280.823 10.7121 cv
280.943 10.7121 281.001 10.7043 281.082 10.6808 cv
281.087 11.6008 li
280.978 11.6564 280.765 11.7043 280.523 11.7043 cv
280.241 11.7043 280.005 11.5685 279.861 11.3683 cv
279.699 11.1359 279.619 10.7599 279.619 10.2082 cv
279.619 8.60077 li
279.245 8.60077 li
279.245 7.70428 li
279.619 7.70428 li
279.619 6.96796 li
280.477 6.64081 li
cp
f
283.288 9.20819 mo
283.288 8.9201 283.196 8.4162 282.799 8.4162 cv
282.424 8.4162 282.274 8.88885 282.251 9.20819 cv
283.288 9.20819 li
cp
282.257 10.0402 mo
282.286 10.5519 282.643 10.7922 283.052 10.7922 cv
283.352 10.7922 283.594 10.7365 283.83 10.6242 cv
283.945 11.4484 li
283.657 11.6164 283.306 11.6965 282.925 11.6965 cv
281.969 11.6965 281.422 10.9279 281.422 9.69647 cv
281.422 8.70428 281.871 7.60858 282.845 7.60858 cv
283.755 7.60858 284.101 8.59198 284.101 9.56073 cv
284.101 9.76874 284.083 9.95233 284.072 10.048 cv
282.257 10.0402 li
cp
f
284.63 8.99237 mo
284.63 8.4162 284.625 8.04022 284.607 7.70428 cv
285.356 7.70428 li
285.391 8.4328 li
285.414 8.4328 li
285.558 7.85663 285.898 7.61639 286.174 7.61639 cv
286.255 7.61639 286.295 7.62421 286.358 7.64081 cv
286.358 8.78436 li
286.284 8.76874 286.214 8.75214 286.117 8.75214 cv
285.794 8.75214 285.575 8.98456 285.518 9.36835 cv
285.506 9.44843 285.5 9.53632 285.5 9.64081 cv
285.5 11.6164 li
284.625 11.6164 li
284.63 8.99237 li
cp
f
288.035 10.3683 mo
288.265 10.5363 288.633 10.7043 289.008 10.7043 cv
289.411 10.7043 289.624 10.4728 289.624 10.1125 cv
289.624 9.78436 289.44 9.58417 288.973 9.36053 cv
288.328 9.04022 287.902 8.54413 287.902 7.75214 cv
287.902 6.83221 288.46 6.1369 289.371 6.1369 cv
289.814 6.1369 290.131 6.25604 290.361 6.40839 cv
290.166 7.38397 li
290.016 7.28046 289.733 7.12811 289.359 7.12811 cv
288.979 7.12811 288.795 7.37616 288.795 7.64862 cv
288.795 7.99237 289.008 8.14471 289.515 8.4162 cv
290.2 8.76874 290.517 9.26483 290.517 10.0324 cv
290.517 10.9367 290.021 11.7043 288.956 11.7043 cv
288.513 11.7043 288.075 11.5363 287.856 11.3683 cv
288.035 10.3683 li
cp
f
291.952 9.93671 mo
291.952 10.0324 291.957 10.1125 291.969 10.1926 cv
292.026 10.5207 292.228 10.7687 292.481 10.7687 cv
292.861 10.7687 293.086 10.3283 293.086 9.66425 cv
293.086 9.04022 292.885 8.56854 292.493 8.56854 cv
292.245 8.56854 292.026 8.8244 291.969 9.18475 cv
291.957 9.24823 291.952 9.32831 291.952 9.40057 cv
291.952 9.93671 li
cp
291.076 9.01678 mo
291.076 8.50409 291.064 8.07245 291.053 7.70428 cv
291.813 7.70428 li
291.854 8.24823 li
291.865 8.24823 li
292.072 7.84003 292.395 7.61639 292.804 7.61639 cv
293.42 7.61639 293.973 8.36053 293.973 9.60858 cv
293.973 11.0324 293.322 11.7043 292.694 11.7043 cv
292.354 11.7043 292.09 11.5129 291.963 11.256 cv
291.952 11.256 li
291.952 13.2004 li
291.076 13.2004 li
291.076 9.01678 li
cp
f
294.526 8.99237 mo
294.526 8.4162 294.521 8.04022 294.503 7.70428 cv
295.252 7.70428 li
295.286 8.4328 li
295.31 8.4328 li
295.454 7.85663 295.793 7.61639 296.07 7.61639 cv
296.15 7.61639 296.191 7.62421 296.254 7.64081 cv
296.254 8.78436 li
296.179 8.76874 296.11 8.75214 296.012 8.75214 cv
295.689 8.75214 295.471 8.98456 295.413 9.36835 cv
295.401 9.44843 295.396 9.53632 295.396 9.64081 cv
295.396 11.6164 li
294.521 11.6164 li
294.526 8.99237 li
cp
f
296.698 11.6164 mo
296.698 7.70428 li
297.574 7.70428 li
297.574 11.6164 li
296.698 11.6164 li
cp
297.13 7.19257 mo
296.836 7.19257 296.646 6.90448 296.646 6.54413 cv
296.646 6.17694 296.842 5.89667 297.142 5.89667 cv
297.441 5.89667 297.625 6.17694 297.631 6.54413 cv
297.631 6.90448 297.441 7.19257 297.136 7.19257 cv
297.13 7.19257 li
cp
f
298.276 8.95233 mo
298.276 8.46405 298.265 8.05682 298.253 7.70428 cv
299.014 7.70428 li
299.054 8.24823 li
299.071 8.24823 li
299.186 7.99237 299.468 7.61639 299.941 7.61639 cv
300.517 7.61639 300.949 8.15253 300.949 9.30487 cv
300.949 11.6164 li
300.073 11.6164 li
300.073 9.44843 li
300.073 8.94452 299.947 8.60077 299.63 8.60077 cv
299.388 8.60077 299.244 8.83221 299.181 9.05682 cv
299.157 9.13593 299.152 9.24823 299.152 9.36053 cv
299.152 11.6164 li
298.276 11.6164 li
298.276 8.95233 li
cp
f
303.443 9.29608 mo
303.443 9.22479 303.437 9.14471 303.426 9.07245 cv
303.362 8.75214 303.195 8.53632 302.954 8.53632 cv
302.631 8.53632 302.377 8.93671 302.377 9.64862 cv
302.377 10.2326 302.585 10.6887 302.948 10.6887 cv
303.178 10.6887 303.356 10.4807 303.414 10.2004 cv
303.437 10.1047 303.443 9.97675 303.443 9.87225 cv
303.443 9.29608 li
cp
304.318 11.048 mo
304.318 11.8 304.209 12.4162 303.887 12.8088 cv
303.581 13.176 303.161 13.2883 302.746 13.2883 cv
302.372 13.2883 301.986 13.1848 301.732 12.9924 cv
301.905 12.0646 li
302.083 12.2082 302.389 12.3605 302.723 12.3605 cv
303.138 12.3605 303.455 12.0568 303.455 11.3283 cv
303.455 11.0803 li
303.443 11.0803 li
303.276 11.4006 303.005 11.5842 302.683 11.5842 cv
301.986 11.5842 301.49 10.8 301.49 9.68085 cv
301.49 8.4162 302.072 7.61639 302.769 7.61639 cv
303.155 7.61639 303.397 7.84882 303.541 8.16815 cv
303.552 8.16815 li
303.581 7.70428 li
304.341 7.70428 li
304.33 7.96014 304.318 8.28827 304.318 8.87225 cv
304.318 11.048 li
cp
f
305.015 10.5607 mo
305.176 10.6965 305.51 10.8488 305.77 10.8488 cv
306.035 10.8488 306.144 10.7287 306.144 10.5285 cv
306.144 10.3205 306.058 10.2248 305.735 10.0724 cv
305.147 9.80878 304.923 9.36053 304.929 8.90448 cv
304.929 8.16815 305.378 7.61639 306.075 7.61639 cv
306.403 7.61639 306.691 7.7287 306.864 7.84882 cv
306.714 8.68085 li
306.587 8.59198 306.34 8.46405 306.104 8.46405 cv
305.891 8.46405 305.77 8.58417 305.77 8.77655 cv
305.77 8.96796 305.879 9.06464 306.225 9.2326 cv
306.76 9.48065 306.979 9.86444 306.985 10.4328 cv
306.985 11.1682 306.576 11.7043 305.77 11.7043 cv
305.401 11.7043 305.073 11.5842 304.859 11.424 cv
305.015 10.5607 li
cp
f
308.719 6.22479 mo
309.594 6.22479 li
309.594 10.592 li
311.139 10.592 li
311.139 11.6164 li
308.719 11.6164 li
308.719 6.22479 li
cp
f
312.891 10.8322 mo
313.236 10.8322 313.449 10.3605 313.449 9.65643 cv
313.449 9.08026 313.287 8.48846 312.891 8.48846 cv
312.476 8.48846 312.314 9.08026 312.314 9.66425 cv
312.314 10.3283 312.516 10.8322 312.885 10.8322 cv
312.891 10.8322 li
cp
312.873 11.7043 mo
312.049 11.7043 311.416 10.9523 311.416 9.68866 cv
311.416 8.42401 312.015 7.61639 312.925 7.61639 cv
313.783 7.61639 314.359 8.44061 314.359 9.62421 cv
314.359 11.048 313.627 11.7043 312.879 11.7043 cv
312.873 11.7043 li
cp
f
317.031 11.5207 mo
316.875 11.6242 316.582 11.7043 316.248 11.7043 cv
315.338 11.7043 314.756 10.9279 314.756 9.69647 cv
314.756 8.55194 315.32 7.61639 316.369 7.61639 cv
316.6 7.61639 316.853 7.67206 317.037 7.76874 cv
316.898 8.67206 li
316.795 8.60858 316.64 8.55194 316.409 8.55194 cv
315.948 8.55194 315.648 9.008 315.654 9.64862 cv
315.654 10.3683 316 10.7521 316.426 10.7521 cv
316.634 10.7521 316.795 10.7043 316.928 10.6242 cv
317.031 11.5207 li
cp
f
319.035 9.76874 mo
318.574 9.76874 318.217 9.9201 318.217 10.384 cv
318.217 10.6965 318.367 10.8488 318.563 10.8488 cv
318.775 10.8488 318.96 10.6486 319.018 10.4006 cv
319.029 10.3361 319.035 10.2648 319.035 10.1926 cv
319.035 9.76874 li
cp
319.882 10.6721 mo
319.882 11.0402 319.893 11.4006 319.928 11.6164 cv
319.139 11.6164 li
319.087 11.2248 li
319.069 11.2248 li
318.885 11.5363 318.598 11.7043 318.264 11.7043 cv
317.693 11.7043 317.354 11.1281 317.354 10.5041 cv
317.354 9.48846 318.01 9.008 319.006 9.008 cv
319.006 8.96014 li
319.006 8.75214 318.926 8.45624 318.494 8.45624 cv
318.205 8.45624 317.9 8.59198 317.716 8.74432 cv
317.555 7.96796 li
317.75 7.81659 318.137 7.61639 318.648 7.61639 cv
319.588 7.61639 319.882 8.38397 319.882 9.30487 cv
319.882 10.6721 li
cp
f
321.513 6.64081 mo
321.513 7.70428 li
322.141 7.70428 li
322.141 8.60077 li
321.513 8.60077 li
321.513 10.0246 li
321.513 10.4963 321.6 10.7121 321.858 10.7121 cv
321.979 10.7121 322.037 10.7043 322.117 10.6808 cv
322.123 11.6008 li
322.014 11.6564 321.801 11.7043 321.559 11.7043 cv
321.276 11.7043 321.041 11.5685 320.896 11.3683 cv
320.734 11.1359 320.654 10.7599 320.654 10.2082 cv
320.654 8.60077 li
320.28 8.60077 li
320.28 7.70428 li
320.654 7.70428 li
320.654 6.96796 li
321.513 6.64081 li
cp
f
322.648 11.6164 mo
322.648 7.70428 li
323.523 7.70428 li
323.523 11.6164 li
322.648 11.6164 li
cp
323.08 7.19257 mo
322.786 7.19257 322.596 6.90448 322.596 6.54413 cv
322.596 6.17694 322.791 5.89667 323.092 5.89667 cv
323.391 5.89667 323.575 6.17694 323.581 6.54413 cv
323.581 6.90448 323.391 7.19257 323.086 7.19257 cv
323.08 7.19257 li
cp
f
325.539 10.8322 mo
325.885 10.8322 326.098 10.3605 326.098 9.65643 cv
326.098 9.08026 325.937 8.48846 325.539 8.48846 cv
325.125 8.48846 324.963 9.08026 324.963 9.66425 cv
324.963 10.3283 325.164 10.8322 325.533 10.8322 cv
325.539 10.8322 li
cp
325.521 11.7043 mo
324.698 11.7043 324.064 10.9523 324.064 9.68866 cv
324.064 8.42401 324.664 7.61639 325.574 7.61639 cv
326.432 7.61639 327.008 8.44061 327.008 9.62421 cv
327.008 11.048 326.276 11.7043 325.527 11.7043 cv
325.521 11.7043 li
cp
f
327.549 8.95233 mo
327.549 8.46405 327.537 8.05682 327.525 7.70428 cv
328.286 7.70428 li
328.326 8.24823 li
328.344 8.24823 li
328.459 7.99237 328.741 7.61639 329.214 7.61639 cv
329.789 7.61639 330.222 8.15253 330.222 9.30487 cv
330.222 11.6164 li
329.346 11.6164 li
329.346 9.44843 li
329.346 8.94452 329.22 8.60077 328.902 8.60077 cv
328.66 8.60077 328.517 8.83221 328.453 9.05682 cv
328.43 9.13593 328.425 9.24823 328.425 9.36053 cv
328.425 11.6164 li
327.549 11.6164 li
327.549 8.95233 li
cp
f
333.357 11.6164 mo
331.802 4.87616 li
333.004 4.87616 li
333.594 7.72675 li
333.76 8.53632 333.911 9.29608 334.026 10.1359 cv
334.048 10.1359 li
334.17 9.32635 334.322 8.52655 334.487 7.75604 cv
335.106 4.87616 li
336.273 4.87616 li
334.639 11.6164 li
333.357 11.6164 li
cp
f
337.986 10.6359 mo
338.419 10.6359 338.686 10.0461 338.686 9.1662 cv
338.686 8.44647 338.484 7.70624 337.986 7.70624 cv
337.469 7.70624 337.268 8.44647 337.268 9.17596 cv
337.268 10.006 337.52 10.6359 337.98 10.6359 cv
337.986 10.6359 li
cp
337.965 11.7267 mo
336.936 11.7267 336.145 10.7863 336.145 9.20624 cv
336.145 7.62616 336.893 6.61639 338.03 6.61639 cv
339.104 6.61639 339.823 7.64667 339.823 9.12616 cv
339.823 10.9064 338.908 11.7267 337.973 11.7267 cv
337.965 11.7267 li
cp
f
341.724 5.39667 mo
341.724 6.72675 li
342.509 6.72675 li
342.509 7.84686 li
341.724 7.84686 li
341.724 9.62616 li
341.724 10.216 341.832 10.4865 342.156 10.4865 cv
342.307 10.4865 342.379 10.4767 342.479 10.4465 cv
342.486 11.5969 li
342.35 11.6662 342.084 11.7267 341.781 11.7267 cv
341.429 11.7267 341.133 11.5568 340.953 11.3068 cv
340.752 11.0168 340.65 10.5461 340.65 9.85663 cv
340.65 7.84686 li
340.184 7.84686 li
340.184 6.72675 li
340.65 6.72675 li
340.65 5.80682 li
341.724 5.39667 li
cp
f
345.238 8.60663 mo
345.238 8.24628 345.123 7.61639 344.627 7.61639 cv
344.158 7.61639 343.971 8.20624 343.942 8.60663 cv
345.238 8.60663 li
cp
343.949 9.64667 mo
343.985 10.2863 344.432 10.5861 344.943 10.5861 cv
345.317 10.5861 345.62 10.5168 345.915 10.3762 cv
346.059 11.4064 li
345.699 11.6164 345.26 11.716 344.785 11.716 cv
343.59 11.716 342.906 10.756 342.906 9.216 cv
342.906 7.97675 343.467 6.60663 344.684 6.60663 cv
345.822 6.60663 346.254 7.83612 346.254 9.04608 cv
346.254 9.30682 346.232 9.53632 346.218 9.65643 cv
343.949 9.64667 li
cp
f
349.227 8.80682 mo
349.227 8.716 349.227 8.61639 349.213 8.52655 cv
349.147 8.11639 348.91 7.78632 348.572 7.78632 cv
348.067 7.78632 347.815 8.40643 347.815 9.17596 cv
347.815 9.99628 348.111 10.5168 348.564 10.5168 cv
348.881 10.5168 349.141 10.216 349.205 9.78632 cv
349.22 9.68671 349.227 9.56659 349.227 9.44647 cv
349.227 8.80682 li
cp
350.321 4.51678 mo
350.321 10.1564 li
350.321 10.716 350.336 11.2863 350.35 11.6164 cv
349.378 11.6164 li
349.335 10.9064 li
349.313 10.9064 li
349.098 11.4465 348.665 11.7267 348.211 11.7267 cv
347.377 11.7267 346.707 10.7365 346.707 9.216 cv
346.699 7.57635 347.441 6.61639 348.283 6.61639 cv
348.723 6.61639 349.055 6.83612 349.213 7.1662 cv
349.227 7.1662 li
349.227 4.51678 li
350.321 4.51678 li
cp
f
353.777 10.5363 mo
353.885 10.5666 354.015 10.5666 354.202 10.5666 cv
354.699 10.5666 355.139 10.2961 355.139 9.58612 cv
355.139 8.90643 354.699 8.63593 354.152 8.63593 cv
353.777 8.63593 li
353.777 10.5363 li
cp
353.777 7.54608 mo
354.137 7.54608 li
354.721 7.54608 355.023 7.216 355.023 6.716 cv
355.023 6.20624 354.742 5.93671 354.245 5.93671 cv
354 5.93671 353.863 5.95624 353.777 5.98651 cv
353.777 7.54608 li
cp
352.689 4.97675 mo
352.979 4.89667 353.555 4.82635 354.108 4.82635 cv
354.777 4.82635 355.188 4.9162 355.541 5.20624 cv
355.88 5.45624 356.117 5.9162 356.117 6.53632 cv
356.117 7.12616 355.865 7.67596 355.325 7.966 cv
355.325 7.98651 li
355.88 8.18671 356.29 8.77655 356.29 9.64667 cv
356.29 10.2668 356.088 10.7463 355.786 11.0764 cv
355.434 11.466 354.843 11.6867 353.878 11.6867 cv
353.338 11.6867 352.936 11.6359 352.689 11.5861 cv
352.689 4.97675 li
cp
f
359.184 8.60663 mo
359.184 8.24628 359.068 7.61639 358.571 7.61639 cv
358.104 7.61639 357.916 8.20624 357.887 8.60663 cv
359.184 8.60663 li
cp
357.895 9.64667 mo
357.93 10.2863 358.377 10.5861 358.889 10.5861 cv
359.262 10.5861 359.564 10.5168 359.859 10.3762 cv
360.004 11.4064 li
359.645 11.6164 359.205 11.716 358.729 11.716 cv
357.534 11.716 356.851 10.756 356.851 9.216 cv
356.851 7.97675 357.412 6.60663 358.629 6.60663 cv
359.767 6.60663 360.198 7.83612 360.198 9.04608 cv
360.198 9.30682 360.177 9.53632 360.162 9.65643 cv
357.895 9.64667 li
cp
f
360.847 10.2961 mo
361.049 10.466 361.466 10.6564 361.789 10.6564 cv
362.121 10.6564 362.258 10.506 362.258 10.256 cv
362.258 9.99628 362.15 9.87616 361.746 9.68671 cv
361.012 9.35663 360.731 8.79608 360.738 8.22675 cv
360.738 7.30682 361.301 6.61639 362.172 6.61639 cv
362.582 6.61639 362.941 6.75604 363.158 6.90643 cv
362.971 7.94647 li
362.813 7.83612 362.502 7.67596 362.207 7.67596 cv
361.941 7.67596 361.789 7.82635 361.789 8.06659 cv
361.789 8.30682 361.927 8.42596 362.358 8.63593 cv
363.028 8.94647 363.302 9.42596 363.309 10.1359 cv
363.309 11.0568 362.798 11.7267 361.789 11.7267 cv
361.329 11.7267 360.918 11.5764 360.652 11.3762 cv
360.847 10.2961 li
cp
f
365.202 5.39667 mo
365.202 6.72675 li
365.987 6.72675 li
365.987 7.84686 li
365.202 7.84686 li
365.202 9.62616 li
365.202 10.216 365.311 10.4865 365.635 10.4865 cv
365.785 10.4865 365.857 10.4767 365.958 10.4465 cv
365.965 11.5969 li
365.828 11.6662 365.563 11.7267 365.26 11.7267 cv
364.907 11.7267 364.611 11.5568 364.432 11.3068 cv
364.23 11.0168 364.129 10.5461 364.129 9.85663 cv
364.129 7.84686 li
363.662 7.84686 li
363.662 6.72675 li
364.129 6.72675 li
364.129 5.80682 li
365.202 5.39667 li
cp
f
254.797 20.0568 mo
255.085 20.2668 255.546 20.4767 256.014 20.4767 cv
256.518 20.4767 256.785 20.1867 256.785 19.7365 cv
256.785 19.3264 256.554 19.0764 255.971 18.7961 cv
255.165 18.3967 254.632 17.7766 254.632 16.7863 cv
254.632 15.6359 255.33 14.7668 256.468 14.7668 cv
257.022 14.7668 257.418 14.9162 257.706 15.1066 cv
257.461 16.3264 li
257.274 16.1965 256.921 16.006 256.453 16.006 cv
255.978 16.006 255.748 16.3166 255.748 16.6564 cv
255.748 17.0861 256.014 17.2766 256.648 17.6164 cv
257.504 18.0568 257.9 18.676 257.9 19.6359 cv
257.9 20.7668 257.281 21.7267 255.949 21.7267 cv
255.395 21.7267 254.848 21.5168 254.574 21.3068 cv
254.797 20.0568 li
cp
f
261.939 20.0461 mo
261.939 20.6867 261.954 21.2062 261.968 21.6164 cv
261.018 21.6164 li
260.968 20.926 li
260.946 20.926 li
260.809 21.2267 260.478 21.7267 259.844 21.7267 cv
259.125 21.7267 258.606 21.1066 258.606 19.5969 cv
258.606 16.7267 li
259.7 16.7267 li
259.7 19.3566 li
259.7 20.0666 259.866 20.4963 260.255 20.4963 cv
260.557 20.4963 260.737 20.2062 260.802 19.966 cv
260.831 19.8762 260.845 19.7668 260.845 19.6359 cv
260.845 16.7267 li
261.939 16.7267 li
261.939 20.0461 li
cp
f
262.817 18.2863 mo
262.817 17.676 262.803 17.1662 262.789 16.7267 cv
263.739 16.7267 li
263.79 17.4064 li
263.811 17.4064 li
263.955 17.0861 264.308 16.6164 264.898 16.6164 cv
265.618 16.6164 266.158 17.2863 266.158 18.7267 cv
266.158 21.6164 li
265.064 21.6164 li
265.064 18.9064 li
265.064 18.2766 264.906 17.8469 264.51 17.8469 cv
264.207 17.8469 264.027 18.1359 263.948 18.4162 cv
263.919 18.5168 263.912 18.6564 263.912 18.7961 cv
263.912 21.6164 li
262.817 21.6164 li
262.817 18.2863 li
cp
f
269.355 18.8068 mo
269.355 18.716 269.355 18.6164 269.341 18.5266 cv
269.276 18.1164 269.039 17.7863 268.7 17.7863 cv
268.196 17.7863 267.944 18.4064 267.944 19.176 cv
267.944 19.9963 268.239 20.5168 268.693 20.5168 cv
269.01 20.5168 269.269 20.216 269.333 19.7863 cv
269.348 19.6867 269.355 19.5666 269.355 19.4465 cv
269.355 18.8068 li
cp
270.45 14.5168 mo
270.45 20.1564 li
270.45 20.716 270.464 21.2863 270.479 21.6164 cv
269.506 21.6164 li
269.463 20.9064 li
269.441 20.9064 li
269.226 21.4465 268.793 21.7267 268.34 21.7267 cv
267.505 21.7267 266.835 20.7365 266.835 19.216 cv
266.828 17.5764 267.57 16.6164 268.412 16.6164 cv
268.851 16.6164 269.183 16.8361 269.341 17.1662 cv
269.355 17.1662 li
269.355 14.5168 li
270.45 14.5168 li
cp
f
273.2 19.3068 mo
272.625 19.3068 272.178 19.4963 272.178 20.0764 cv
272.178 20.466 272.365 20.6564 272.61 20.6564 cv
272.876 20.6564 273.107 20.4064 273.179 20.0969 cv
273.193 20.0168 273.2 19.926 273.2 19.8361 cv
273.2 19.3068 li
cp
274.259 20.4367 mo
274.259 20.8967 274.273 21.3469 274.316 21.6164 cv
273.33 21.6164 li
273.265 21.1262 li
273.244 21.1262 li
273.013 21.5168 272.653 21.7267 272.235 21.7267 cv
271.523 21.7267 271.098 21.006 271.098 20.2267 cv
271.098 18.9562 271.919 18.3566 273.165 18.3566 cv
273.165 18.2961 li
273.165 18.0363 273.063 17.6662 272.523 17.6662 cv
272.164 17.6662 271.782 17.8361 271.552 18.0266 cv
271.35 17.0568 li
271.595 16.8664 272.077 16.6164 272.718 16.6164 cv
273.892 16.6164 274.259 17.5764 274.259 18.7267 cv
274.259 20.4367 li
cp
f
275.815 16.7267 mo
276.341 19.1262 li
276.398 19.4162 276.47 19.7766 276.514 20.0363 cv
276.535 20.0363 li
276.585 19.7766 276.643 19.4064 276.693 19.1262 cv
277.125 16.7267 li
278.299 16.7267 li
277.479 19.9465 li
276.975 21.8859 276.636 22.6564 276.24 23.1467 cv
275.866 23.6066 275.462 23.7766 275.182 23.8166 cv
274.951 22.5363 li
275.088 22.4963 275.261 22.4064 275.426 22.2766 cv
275.592 22.1564 275.779 21.9064 275.88 21.6662 cv
275.916 21.5861 275.938 21.5168 275.938 21.4465 cv
275.938 21.3967 275.93 21.3166 275.895 21.1965 cv
274.598 16.7267 li
275.815 16.7267 li
cp
f
281.337 20.5363 mo
281.445 20.5666 281.575 20.5666 281.762 20.5666 cv
282.259 20.5666 282.698 20.2961 282.698 19.5861 cv
282.698 18.9064 282.259 18.6359 281.712 18.6359 cv
281.337 18.6359 li
281.337 20.5363 li
cp
281.337 17.5461 mo
281.697 17.5461 li
282.28 17.5461 282.583 17.216 282.583 16.716 cv
282.583 16.2062 282.302 15.9367 281.805 15.9367 cv
281.561 15.9367 281.424 15.9562 281.337 15.9865 cv
281.337 17.5461 li
cp
280.25 14.9767 mo
280.538 14.8967 281.114 14.8264 281.668 14.8264 cv
282.338 14.8264 282.749 14.9162 283.101 15.2062 cv
283.439 15.4562 283.677 15.9162 283.677 16.5363 cv
283.677 17.1262 283.425 17.676 282.885 17.966 cv
282.885 17.9865 li
283.439 18.1867 283.85 18.7766 283.85 19.6467 cv
283.85 20.2668 283.648 20.7463 283.346 21.0764 cv
282.993 21.466 282.403 21.6867 281.438 21.6867 cv
280.898 21.6867 280.495 21.6359 280.25 21.5861 cv
280.25 14.9767 li
cp
f
284.57 18.3361 mo
284.57 17.6164 284.563 17.1467 284.542 16.7267 cv
285.478 16.7267 li
285.521 17.6359 li
285.55 17.6359 li
285.729 16.9162 286.154 16.6164 286.5 16.6164 cv
286.601 16.6164 286.651 16.6262 286.73 16.6467 cv
286.73 18.0764 li
286.637 18.0568 286.55 18.0363 286.428 18.0363 cv
286.025 18.0363 285.751 18.3264 285.679 18.8068 cv
285.665 18.9064 285.658 19.0168 285.658 19.1467 cv
285.658 21.6164 li
284.563 21.6164 li
284.57 18.3361 li
cp
f
290.597 20.0461 mo
290.597 20.6867 290.611 21.2062 290.625 21.6164 cv
289.675 21.6164 li
289.625 20.926 li
289.603 20.926 li
289.466 21.2267 289.135 21.7267 288.501 21.7267 cv
287.782 21.7267 287.263 21.1066 287.263 19.5969 cv
287.263 16.7267 li
288.357 16.7267 li
288.357 19.3566 li
288.357 20.0666 288.523 20.4963 288.912 20.4963 cv
289.214 20.4963 289.395 20.2062 289.459 19.966 cv
289.488 19.8762 289.502 19.7668 289.502 19.6359 cv
289.502 16.7267 li
290.597 16.7267 li
290.597 20.0461 li
cp
f
291.475 18.2863 mo
291.475 17.676 291.461 17.1662 291.446 16.7267 cv
292.397 16.7267 li
292.447 17.4064 li
292.469 17.4064 li
292.613 17.0861 292.966 16.6164 293.556 16.6164 cv
294.276 16.6164 294.816 17.2863 294.816 18.7267 cv
294.816 21.6164 li
293.722 21.6164 li
293.722 18.9064 li
293.722 18.2766 293.563 17.8469 293.167 17.8469 cv
292.865 17.8469 292.685 18.1359 292.606 18.4162 cv
292.577 18.5168 292.57 18.6564 292.57 18.7961 cv
292.57 21.6164 li
291.475 21.6164 li
291.475 18.2863 li
cp
f
298.337 21.4963 mo
298.143 21.6262 297.775 21.7267 297.358 21.7267 cv
296.22 21.7267 295.493 20.756 295.493 19.216 cv
295.493 17.7863 296.199 16.6164 297.509 16.6164 cv
297.797 16.6164 298.114 16.6867 298.344 16.8068 cv
298.171 17.9367 li
298.042 17.8566 297.847 17.7863 297.56 17.7863 cv
296.983 17.7863 296.609 18.3566 296.616 19.1564 cv
296.616 20.0568 297.048 20.5363 297.581 20.5363 cv
297.84 20.5363 298.042 20.4767 298.208 20.3762 cv
298.337 21.4963 li
cp
f
298.941 14.5168 mo
300.036 14.5168 li
300.036 17.3166 li
300.05 17.3166 li
300.166 17.0969 300.31 16.926 300.482 16.8068 cv
300.648 16.6867 300.85 16.6164 301.051 16.6164 cv
301.75 16.6164 302.282 17.2863 302.282 18.7668 cv
302.282 21.6164 li
301.188 21.6164 li
301.188 18.926 li
301.188 18.2863 301.03 17.8469 300.619 17.8469 cv
300.331 17.8469 300.151 18.1066 300.072 18.3859 cv
300.043 18.4767 300.036 18.6066 300.036 18.716 cv
300.036 21.6164 li
298.941 21.6164 li
298.941 14.5168 li
cp
f
305.738 20.5363 mo
305.846 20.5666 305.976 20.5666 306.163 20.5666 cv
306.66 20.5666 307.1 20.2961 307.1 19.5861 cv
307.1 18.9064 306.66 18.6359 306.113 18.6359 cv
305.738 18.6359 li
305.738 20.5363 li
cp
305.738 17.5461 mo
306.098 17.5461 li
306.681 17.5461 306.984 17.216 306.984 16.716 cv
306.984 16.2062 306.703 15.9367 306.206 15.9367 cv
305.961 15.9367 305.825 15.9562 305.738 15.9865 cv
305.738 17.5461 li
cp
304.651 14.9767 mo
304.939 14.8967 305.515 14.8264 306.069 14.8264 cv
306.739 14.8264 307.149 14.9162 307.502 15.2062 cv
307.841 15.4562 308.078 15.9162 308.078 16.5363 cv
308.078 17.1262 307.826 17.676 307.286 17.966 cv
307.286 17.9865 li
307.841 18.1867 308.251 18.7766 308.251 19.6467 cv
308.251 20.2668 308.049 20.7463 307.747 21.0764 cv
307.395 21.466 306.804 21.6867 305.839 21.6867 cv
305.299 21.6867 304.896 21.6359 304.651 21.5861 cv
304.651 14.9767 li
cp
f
312.283 20.0461 mo
312.283 20.6867 312.298 21.2062 312.313 21.6164 cv
311.361 21.6164 li
311.312 20.926 li
311.289 20.926 li
311.152 21.2267 310.822 21.7267 310.188 21.7267 cv
309.469 21.7267 308.949 21.1066 308.949 19.5969 cv
308.949 16.7267 li
310.044 16.7267 li
310.044 19.3566 li
310.044 20.0666 310.209 20.4963 310.599 20.4963 cv
310.9 20.4963 311.081 20.2062 311.146 19.966 cv
311.174 19.8762 311.189 19.7668 311.189 19.6359 cv
311.189 16.7267 li
312.283 16.7267 li
312.283 20.0461 li
cp
f
313.291 21.6164 mo
313.291 17.8469 li
312.822 17.8469 li
312.822 16.7267 li
313.291 16.7267 li
313.291 16.5363 li
313.291 15.9465 313.42 15.2961 313.73 14.8967 cv
314.011 14.5363 314.385 14.4064 314.709 14.4064 cv
314.947 14.4064 315.135 14.4562 315.285 14.506 cv
315.242 15.676 li
315.148 15.6359 315.033 15.6066 314.889 15.6066 cv
314.529 15.6066 314.378 15.9963 314.378 16.4767 cv
314.378 16.7267 li
315.084 16.7267 li
315.084 17.8469 li
314.385 17.8469 li
314.385 21.6164 li
313.291 21.6164 li
cp
f
315.746 21.6164 mo
315.746 17.8469 li
315.277 17.8469 li
315.277 16.7267 li
315.746 16.7267 li
315.746 16.5363 li
315.746 15.9465 315.875 15.2961 316.186 14.8967 cv
316.466 14.5363 316.84 14.4064 317.164 14.4064 cv
317.402 14.4064 317.59 14.4562 317.74 14.506 cv
317.697 15.676 li
317.604 15.6359 317.488 15.6066 317.344 15.6066 cv
316.984 15.6066 316.833 15.9963 316.833 16.4767 cv
316.833 16.7267 li
317.539 16.7267 li
317.539 17.8469 li
316.84 17.8469 li
316.84 21.6164 li
315.746 21.6164 li
cp
f
320.146 18.6066 mo
320.146 18.2463 320.031 17.6164 319.535 17.6164 cv
319.066 17.6164 318.879 18.2062 318.851 18.6066 cv
320.146 18.6066 li
cp
318.857 19.6467 mo
318.894 20.2863 319.34 20.5861 319.852 20.5861 cv
320.226 20.5861 320.528 20.5168 320.823 20.3762 cv
320.967 21.4064 li
320.607 21.6164 320.168 21.716 319.693 21.716 cv
318.498 21.716 317.814 20.756 317.814 19.216 cv
317.814 17.9767 318.375 16.6066 319.592 16.6066 cv
320.73 16.6066 321.162 17.8361 321.162 19.0461 cv
321.162 19.3068 321.141 19.5363 321.126 19.6564 cv
318.857 19.6467 li
cp
f
323.041 15.3967 mo
323.041 16.7267 li
323.826 16.7267 li
323.826 17.8469 li
323.041 17.8469 li
323.041 19.6262 li
323.041 20.216 323.148 20.4865 323.473 20.4865 cv
323.625 20.4865 323.696 20.4767 323.797 20.4465 cv
323.805 21.5969 li
323.668 21.6662 323.401 21.7267 323.099 21.7267 cv
322.746 21.7267 322.451 21.5568 322.271 21.3068 cv
322.069 21.0168 321.969 20.5461 321.969 19.8566 cv
321.969 17.8469 li
321.5 17.8469 li
321.5 16.7267 li
321.969 16.7267 li
321.969 15.8068 li
323.041 15.3967 li
cp
f
325.971 20.1262 mo
326.166 20.2766 326.612 20.5266 327.059 20.5266 cv
327.627 20.5266 327.916 20.1467 327.916 19.6662 cv
327.916 19.0168 327.455 18.7267 326.979 18.7267 cv
326.533 18.7267 li
326.533 17.6359 li
326.958 17.6359 li
327.325 17.6359 327.785 17.4367 327.785 16.8859 cv
327.785 16.4963 327.563 16.2062 327.095 16.2062 cv
326.713 16.2062 326.31 16.4367 326.123 16.5969 cv
325.899 15.4963 li
326.18 15.2463 326.734 15.006 327.347 15.006 cv
328.34 15.006 328.895 15.7365 328.895 16.6262 cv
328.895 17.3166 328.613 17.8664 328.037 18.1359 cv
328.037 18.1564 li
328.6 18.2961 329.053 18.8859 329.053 19.7463 cv
329.053 20.8859 328.326 21.7267 327.138 21.7267 cv
326.533 21.7267 326.021 21.506 325.748 21.2766 cv
325.971 20.1262 li
cp
f
332.523 21.6164 mo
332.523 18.8566 li
330.99 14.8762 li
332.25 14.8762 li
332.739 16.4963 li
332.891 16.9865 332.998 17.3469 333.113 17.7863 cv
333.128 17.7863 li
333.236 17.3664 333.352 16.9767 333.495 16.4963 cv
333.984 14.8762 li
335.216 14.8762 li
333.617 18.8068 li
333.617 21.6164 li
332.523 21.6164 li
cp
f
337.06 18.6066 mo
337.06 18.2463 336.944 17.6164 336.447 17.6164 cv
335.979 17.6164 335.793 18.2062 335.764 18.6066 cv
337.06 18.6066 li
cp
335.771 19.6467 mo
335.807 20.2863 336.254 20.5861 336.765 20.5861 cv
337.139 20.5861 337.441 20.5168 337.736 20.3762 cv
337.881 21.4064 li
337.521 21.6164 337.081 21.716 336.605 21.716 cv
335.41 21.716 334.727 20.756 334.727 19.216 cv
334.727 17.9767 335.289 16.6066 336.506 16.6066 cv
337.643 16.6066 338.074 17.8361 338.074 19.0461 cv
338.074 19.3068 338.053 19.5363 338.039 19.6564 cv
335.771 19.6467 li
cp
f
340.602 19.3068 mo
340.026 19.3068 339.58 19.4963 339.58 20.0764 cv
339.58 20.466 339.768 20.6564 340.012 20.6564 cv
340.278 20.6564 340.509 20.4064 340.58 20.0969 cv
340.596 20.0168 340.602 19.926 340.602 19.8361 cv
340.602 19.3068 li
cp
341.66 20.4367 mo
341.66 20.8967 341.675 21.3469 341.719 21.6164 cv
340.732 21.6164 li
340.667 21.1262 li
340.646 21.1262 li
340.415 21.5168 340.055 21.7267 339.637 21.7267 cv
338.925 21.7267 338.5 21.006 338.5 20.2267 cv
338.5 18.9562 339.32 18.3566 340.566 18.3566 cv
340.566 18.2961 li
340.566 18.0363 340.465 17.6662 339.926 17.6662 cv
339.565 17.6662 339.184 17.8361 338.953 18.0266 cv
338.752 17.0568 li
338.996 16.8664 339.479 16.6164 340.119 16.6164 cv
341.293 16.6164 341.66 17.5764 341.66 18.7267 cv
341.66 20.4367 li
cp
f
342.539 18.3361 mo
342.539 17.6164 342.531 17.1467 342.51 16.7267 cv
343.446 16.7267 li
343.49 17.6359 li
343.519 17.6359 li
343.698 16.9162 344.123 16.6164 344.469 16.6164 cv
344.569 16.6164 344.62 16.6262 344.699 16.6467 cv
344.699 18.0764 li
344.605 18.0568 344.52 18.0363 344.396 18.0363 cv
343.994 18.0363 343.72 18.3264 343.648 18.8068 cv
343.634 18.9064 343.627 19.0168 343.627 19.1467 cv
343.627 21.6164 li
342.531 21.6164 li
342.539 18.3361 li
cp
f
345.261 20.2961 mo
345.463 20.466 345.88 20.6564 346.203 20.6564 cv
346.535 20.6564 346.672 20.506 346.672 20.256 cv
346.672 19.9963 346.564 19.8762 346.16 19.6867 cv
345.426 19.3566 345.146 18.7961 345.152 18.2267 cv
345.152 17.3068 345.715 16.6164 346.586 16.6164 cv
346.996 16.6164 347.355 16.756 347.572 16.9064 cv
347.385 17.9465 li
347.227 17.8361 346.916 17.676 346.621 17.676 cv
346.355 17.676 346.203 17.8264 346.203 18.0666 cv
346.203 18.3068 346.341 18.426 346.772 18.6359 cv
347.442 18.9465 347.716 19.426 347.723 20.1359 cv
347.723 21.0568 347.212 21.7267 346.203 21.7267 cv
345.743 21.7267 345.332 21.5764 345.066 21.3762 cv
345.261 20.2961 li
cp
f
349.847 21.6164 mo
349.847 16.7267 li
350.941 16.7267 li
350.941 21.6164 li
349.847 21.6164 li
cp
350.387 16.0861 mo
350.02 16.0861 349.782 15.7267 349.782 15.2766 cv
349.782 14.8166 350.027 14.466 350.401 14.466 cv
350.775 14.466 351.006 14.8166 351.014 15.2766 cv
351.014 15.7267 350.775 16.0861 350.395 16.0861 cv
350.387 16.0861 li
cp
f
351.819 18.2863 mo
351.819 17.676 351.805 17.1662 351.791 16.7267 cv
352.741 16.7267 li
352.791 17.4064 li
352.813 17.4064 li
352.957 17.0861 353.311 16.6164 353.9 16.6164 cv
354.62 16.6164 355.16 17.2863 355.16 18.7267 cv
355.16 21.6164 li
354.066 21.6164 li
354.066 18.9064 li
354.066 18.2766 353.908 17.8469 353.512 17.8469 cv
353.209 17.8469 353.029 18.1359 352.95 18.4162 cv
352.922 18.5168 352.914 18.6564 352.914 18.7961 cv
352.914 21.6164 li
351.819 21.6164 li
351.819 18.2863 li
cp
f
359.365 19.3068 mo
358.789 19.3068 358.342 19.4963 358.342 20.0764 cv
358.342 20.466 358.529 20.6564 358.774 20.6564 cv
359.041 20.6564 359.271 20.4064 359.344 20.0969 cv
359.357 20.0168 359.365 19.926 359.365 19.8361 cv
359.365 19.3068 li
cp
360.424 20.4367 mo
360.424 20.8967 360.438 21.3469 360.48 21.6164 cv
359.494 21.6164 li
359.43 21.1262 li
359.408 21.1262 li
359.178 21.5168 358.818 21.7267 358.4 21.7267 cv
357.688 21.7267 357.263 21.006 357.263 20.2267 cv
357.263 18.9562 358.084 18.3566 359.329 18.3566 cv
359.329 18.2961 li
359.329 18.0363 359.229 17.6662 358.688 17.6662 cv
358.328 17.6662 357.946 17.8361 357.717 18.0266 cv
357.515 17.0568 li
357.76 16.8664 358.242 16.6164 358.883 16.6164 cv
360.057 16.6164 360.424 17.5764 360.424 18.7267 cv
360.424 20.4367 li
cp
f
363.872 17.8664 mo
364.305 17.8664 li
364.852 17.8664 365.176 17.4865 365.176 16.8967 cv
365.176 16.2863 364.873 15.966 364.369 15.966 cv
364.103 15.966 363.951 15.9865 363.872 16.0168 cv
363.872 17.8664 li
cp
362.785 14.9767 mo
363.138 14.8859 363.656 14.8264 364.246 14.8264 cv
364.967 14.8264 365.471 14.9767 365.816 15.3664 cv
366.111 15.6867 366.27 16.1564 366.27 16.7766 cv
366.27 17.6262 365.83 18.216 365.412 18.426 cv
365.412 18.4562 li
365.751 18.6467 365.938 19.0861 366.061 19.7062 cv
366.212 20.4767 366.355 21.3566 366.449 21.6164 cv
365.326 21.6164 li
365.254 21.426 365.132 20.8762 364.995 20.0461 cv
364.858 19.1965 364.649 18.9767 364.195 18.966 cv
363.872 18.966 li
363.872 21.6164 li
362.785 21.6164 li
362.785 14.9767 li
cp
f
368.66 20.6359 mo
369.092 20.6359 369.358 20.0461 369.358 19.1662 cv
369.358 18.4465 369.156 17.7062 368.66 17.7062 cv
368.142 17.7062 367.939 18.4465 367.939 19.176 cv
367.939 20.006 368.191 20.6359 368.652 20.6359 cv
368.66 20.6359 li
cp
368.639 21.7267 mo
367.609 21.7267 366.816 20.7863 366.816 19.2062 cv
366.816 17.6262 367.565 16.6164 368.703 16.6164 cv
369.775 16.6164 370.496 17.6467 370.496 19.1262 cv
370.496 20.9064 369.582 21.7267 368.646 21.7267 cv
368.639 21.7267 li
cp
f
371.865 16.7267 mo
372.154 18.7365 li
372.219 19.2365 372.291 19.7766 372.348 20.3361 cv
372.369 20.3361 li
372.435 19.7863 372.543 19.2267 372.621 18.7463 cv
372.996 16.7267 li
373.859 16.7267 li
374.213 18.676 li
374.313 19.2365 374.407 19.7766 374.473 20.3361 cv
374.486 20.3361 li
374.537 19.7863 374.609 19.2267 374.695 18.6662 cv
374.99 16.7267 li
376.063 16.7267 li
374.983 21.6164 li
373.961 21.6164 li
373.629 19.9064 li
373.536 19.426 373.471 18.9865 373.399 18.3762 cv
373.385 18.3762 li
373.32 18.9865 373.248 19.4465 373.162 19.8967 cv
372.809 21.6164 li
371.779 21.6164 li
370.75 16.7267 li
371.865 16.7267 li
cp
f
376.689 19.4064 mo
376.531 14.8762 li
377.668 14.8762 li
377.51 19.4064 li
376.689 19.4064 li
cp
377.092 21.7267 mo
376.711 21.7267 376.451 21.3361 376.451 20.8166 cv
376.451 20.2766 376.718 19.9064 377.1 19.9064 cv
377.48 19.9064 377.733 20.2766 377.74 20.8166 cv
377.74 21.3361 377.488 21.7267 377.1 21.7267 cv
377.092 21.7267 li
cp
f
264.234 85.0793 mo
263.824 85.6789 262.824 86.6584 262.515 86.7287 cv
262.484 86.9084 262.004 87.1086 261.784 87.1789 cv
261.674 87.2287 261.265 87.3088 261.165 87.3088 cv
260.875 87.3088 260.584 87.2492 260.384 87.1193 cv
260.125 86.9992 259.864 86.5392 259.864 86.299 cv
259.834 86.1789 259.784 86.0285 259.804 85.9289 cv
259.964 84.9084 li
259.975 84.8391 259.995 84.759 260.024 84.6789 cv
260.094 84.4387 260.174 84.1789 260.254 83.9387 cv
260.274 83.8293 260.324 83.6486 260.415 83.6086 cv
260.404 83.4992 260.424 83.3586 260.484 83.2785 cv
260.604 83.0392 260.734 82.7785 260.824 82.5392 cv
261.064 82.0685 261.254 81.6584 261.554 81.2189 cv
261.674 81.0588 261.955 80.8693 262.154 80.8693 cv
262.375 80.8693 262.475 80.9191 262.654 81.0793 cv
262.875 81.009 263.524 81.5685 263.464 82.0392 cv
263.424 82.2385 263.354 82.9191 263.004 82.9191 cv
262.834 82.9191 262.714 82.8293 262.734 82.6789 cv
262.774 82.4787 262.935 82.2687 262.964 82.0988 cv
263.004 81.7785 262.714 81.4387 262.324 81.4387 cv
261.955 81.4387 261.784 82.0285 261.625 82.2492 cv
261.564 82.3693 261.475 82.4787 261.404 82.6193 cv
261.185 82.9289 261.125 83.2785 260.964 83.6086 cv
260.824 83.8586 260.714 84.1193 260.665 84.3791 cv
260.634 84.4592 260.634 84.5285 260.625 84.5793 cv
260.604 84.6691 260.515 84.7687 260.495 84.8488 cv
260.495 84.8488 260.484 85.3488 260.364 85.4387 cv
260.435 85.5685 260.364 85.9289 260.364 85.9289 cv
260.364 86.3088 260.554 86.9191 261.104 86.9191 cv
261.424 86.9191 261.895 86.6789 262.134 86.4787 cv
262.504 86.2287 263.354 85.509 263.515 85.1389 cv
263.564 85.0187 263.524 84.8693 263.674 84.7687 cv
263.725 84.7385 263.864 84.7189 263.935 84.7189 cv
264.034 84.7189 264.364 84.7785 264.334 84.8791 cv
264.334 84.9289 264.254 85.0588 264.234 85.0793 cv
cp
f
.25 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
264.234 85.0793 mo
263.824 85.6789 262.824 86.6584 262.515 86.7287 cv
262.484 86.9084 262.004 87.1086 261.784 87.1789 cv
261.674 87.2287 261.265 87.3088 261.165 87.3088 cv
260.875 87.3088 260.584 87.2492 260.384 87.1193 cv
260.125 86.9992 259.864 86.5392 259.864 86.299 cv
259.834 86.1789 259.784 86.0285 259.804 85.9289 cv
259.964 84.9084 li
259.975 84.8391 259.995 84.759 260.024 84.6789 cv
260.094 84.4387 260.174 84.1789 260.254 83.9387 cv
260.274 83.8293 260.324 83.6486 260.415 83.6086 cv
260.404 83.4992 260.424 83.3586 260.484 83.2785 cv
260.604 83.0392 260.734 82.7785 260.824 82.5392 cv
261.064 82.0685 261.254 81.6584 261.554 81.2189 cv
261.674 81.0588 261.955 80.8693 262.154 80.8693 cv
262.375 80.8693 262.475 80.9191 262.654 81.0793 cv
262.875 81.009 263.524 81.5685 263.464 82.0392 cv
263.424 82.2385 263.354 82.9191 263.004 82.9191 cv
262.834 82.9191 262.714 82.8293 262.734 82.6789 cv
262.774 82.4787 262.935 82.2687 262.964 82.0988 cv
263.004 81.7785 262.714 81.4387 262.324 81.4387 cv
261.955 81.4387 261.784 82.0285 261.625 82.2492 cv
261.564 82.3693 261.475 82.4787 261.404 82.6193 cv
261.185 82.9289 261.125 83.2785 260.964 83.6086 cv
260.824 83.8586 260.714 84.1193 260.665 84.3791 cv
260.634 84.4592 260.634 84.5285 260.625 84.5793 cv
260.604 84.6691 260.515 84.7687 260.495 84.8488 cv
260.495 84.8488 260.484 85.3488 260.364 85.4387 cv
260.435 85.5685 260.364 85.9289 260.364 85.9289 cv
260.364 86.3088 260.554 86.9191 261.104 86.9191 cv
261.424 86.9191 261.895 86.6789 262.134 86.4787 cv
262.504 86.2287 263.354 85.509 263.515 85.1389 cv
263.564 85.0187 263.524 84.8693 263.674 84.7687 cv
263.725 84.7385 263.864 84.7189 263.935 84.7189 cv
264.034 84.7189 264.364 84.7785 264.334 84.8791 cv
264.334 84.9289 264.254 85.0588 264.234 85.0793 cv
cp
@
267.185 83.6193 mo
267.154 83.5685 266.995 83.5285 266.915 83.5285 cv
266.625 83.5285 266.415 83.799 266.334 83.9387 cv
266.375 84.1584 266.395 84.6789 266.884 84.6789 cv
266.955 84.6789 267.064 84.6789 267.134 84.6291 cv
267.225 84.5588 267.284 84.3185 267.314 84.1389 cv
267.354 83.8488 267.274 83.7092 267.185 83.6193 cv
cp
266.254 85.0793 mo
266.004 84.9787 265.774 84.6691 265.774 84.2385 cv
265.674 84.1984 li
265.464 84.4484 265.384 84.7385 265.334 85.0285 cv
265.324 85.1389 265.324 85.3088 265.334 85.4084 cv
265.395 85.6584 265.614 85.6984 265.804 85.8293 cv
265.824 85.8586 265.984 85.9484 266.034 85.9387 cv
266.084 85.9387 266.125 85.9289 266.185 85.9191 cv
266.574 85.6486 266.725 85.4992 266.895 85.299 cv
266.634 85.299 266.384 85.2385 266.254 85.0793 cv
cp
268.174 85.1789 mo
267.995 85.299 267.734 85.3391 267.524 85.3391 cv
267.455 85.5285 267.334 85.6984 267.154 85.9084 cv
267.074 85.9787 266.364 86.509 266.274 86.5187 cv
266.205 86.5187 266.134 86.549 266.074 86.5392 cv
265.734 86.5392 265.484 86.3293 265.324 86.1389 cv
265.165 86.0793 264.984 86.009 264.864 85.8791 cv
264.754 85.7492 264.705 85.5685 264.725 85.3986 cv
264.774 85.0392 264.814 84.6486 264.924 84.2785 cv
265.015 83.9387 265.524 83.2092 265.975 83.1086 cv
266.015 83.0988 266.174 83.0588 266.205 83.0588 cv
266.314 83.0588 266.424 83.1291 266.515 83.1291 cv
266.784 83.1086 267.455 83.0285 267.654 83.3586 cv
267.714 83.4992 267.714 83.7189 267.774 83.8693 cv
267.824 83.9992 267.964 84.1291 267.935 84.2687 cv
267.955 84.299 267.924 84.3391 267.904 84.3586 cv
267.834 84.4387 267.804 84.6086 267.754 84.759 cv
268.084 84.7785 268.455 84.5588 268.604 84.5392 cv
268.754 84.3986 268.895 84.259 269.015 84.0793 cv
269.084 83.8986 269.205 83.8391 269.384 83.8391 cv
269.564 83.8391 269.584 83.9592 269.554 84.1086 cv
269.404 84.7687 268.364 85.2492 268.174 85.1789 cv
cp
f
267.185 83.6193 mo
267.154 83.5685 266.995 83.5285 266.915 83.5285 cv
266.625 83.5285 266.415 83.799 266.334 83.9387 cv
266.375 84.1584 266.395 84.6789 266.884 84.6789 cv
266.955 84.6789 267.064 84.6789 267.134 84.6291 cv
267.225 84.5588 267.284 84.3185 267.314 84.1389 cv
267.354 83.8488 267.274 83.7092 267.185 83.6193 cv
cp
266.254 85.0793 mo
266.004 84.9787 265.774 84.6691 265.774 84.2385 cv
265.674 84.1984 li
265.464 84.4484 265.384 84.7385 265.334 85.0285 cv
265.324 85.1389 265.324 85.3088 265.334 85.4084 cv
265.395 85.6584 265.614 85.6984 265.804 85.8293 cv
265.824 85.8586 265.984 85.9484 266.034 85.9387 cv
266.084 85.9387 266.125 85.9289 266.185 85.9191 cv
266.574 85.6486 266.725 85.4992 266.895 85.299 cv
266.634 85.299 266.384 85.2385 266.254 85.0793 cv
cp
268.174 85.1789 mo
267.995 85.299 267.734 85.3391 267.524 85.3391 cv
267.455 85.5285 267.334 85.6984 267.154 85.9084 cv
267.074 85.9787 266.364 86.509 266.274 86.5187 cv
266.205 86.5187 266.134 86.549 266.074 86.5392 cv
265.734 86.5392 265.484 86.3293 265.324 86.1389 cv
265.165 86.0793 264.984 86.009 264.864 85.8791 cv
264.754 85.7492 264.705 85.5685 264.725 85.3986 cv
264.774 85.0392 264.814 84.6486 264.924 84.2785 cv
265.015 83.9387 265.524 83.2092 265.975 83.1086 cv
266.015 83.0988 266.174 83.0588 266.205 83.0588 cv
266.314 83.0588 266.424 83.1291 266.515 83.1291 cv
266.784 83.1086 267.455 83.0285 267.654 83.3586 cv
267.714 83.4992 267.714 83.7189 267.774 83.8693 cv
267.824 83.9992 267.964 84.1291 267.935 84.2687 cv
267.955 84.299 267.924 84.3391 267.904 84.3586 cv
267.834 84.4387 267.804 84.6086 267.754 84.759 cv
268.084 84.7785 268.455 84.5588 268.604 84.5392 cv
268.754 84.3986 268.895 84.259 269.015 84.0793 cv
269.084 83.8986 269.205 83.8391 269.384 83.8391 cv
269.564 83.8391 269.584 83.9592 269.554 84.1086 cv
269.404 84.7687 268.364 85.2492 268.174 85.1789 cv
cp
@
274.875 84.509 mo
274.824 84.5685 274.824 84.6389 274.784 84.7092 cv
274.684 84.8791 273.664 86.049 273.474 86.0988 cv
273.404 86.299 272.875 86.6389 272.714 86.6584 cv
272.674 86.6691 272.524 86.7092 272.494 86.7189 cv
272.274 86.7092 272.164 86.3391 272.114 86.1691 cv
272.104 86.0988 272.064 85.8986 272.074 85.7687 cv
272.084 85.6984 272.084 85.5588 272.164 85.4191 cv
272.094 85.2492 272.084 85.1193 272.104 84.9592 cv
272.145 84.6691 li
272.194 84.3791 272.134 84.0187 272.094 83.7287 cv
272.074 83.6789 272.014 83.6584 271.964 83.6584 cv
271.884 83.6584 271.784 83.7385 271.714 83.799 cv
271.224 84.1789 271.094 84.5588 270.895 84.7785 cv
270.904 84.9689 270.824 85.1389 270.724 85.3586 cv
270.534 85.7785 270.384 86.2092 270.224 86.6389 cv
270.194 86.7385 270.044 86.8293 269.924 86.8293 cv
269.764 86.8293 269.674 86.7287 269.694 86.5793 cv
269.694 86.5392 269.734 86.4787 269.744 86.4387 cv
269.794 86.1291 269.824 85.6486 269.944 85.4689 cv
269.864 85.3088 269.895 85.1486 269.914 85.009 cv
269.964 84.6984 li
269.984 84.5285 270.004 84.1691 269.994 83.9787 cv
269.984 83.8791 269.914 83.7092 269.764 83.7092 cv
269.594 83.7092 269.294 84.5392 269.114 84.5392 cv
268.994 84.5392 268.834 84.4191 268.844 84.3185 cv
268.875 84.1789 269.044 83.6086 269.274 83.4787 cv
269.304 83.3088 269.574 83.0793 269.744 83.0793 cv
269.804 83.0793 269.924 83.1193 269.974 83.1291 cv
270.494 83.3391 270.334 83.8488 270.564 84.1086 cv
270.564 84.1291 270.604 84.1389 270.625 84.1389 cv
270.764 84.1389 271.314 83.2492 272.044 83.2385 cv
272.084 83.2385 272.114 83.2492 272.145 83.259 cv
272.694 83.3791 272.584 83.4387 272.714 83.8088 cv
272.744 83.8986 272.794 83.9689 272.784 84.0793 cv
272.764 84.2785 272.694 84.4787 272.664 84.6789 cv
272.645 84.7687 272.704 85.8586 272.724 85.9592 cv
272.724 85.9992 272.764 86.0285 272.814 86.0285 cv
273.034 86.0285 273.714 85.2092 273.875 85.1486 cv
273.924 84.9289 274.395 84.3293 274.424 84.259 cv
274.484 84.1291 274.574 83.8693 274.764 83.8088 cv
274.824 83.7785 274.914 83.7687 274.974 83.759 cv
275.104 83.759 275.234 83.8293 275.214 83.9592 cv
275.204 83.9992 274.904 84.4289 274.875 84.509 cv
cp
f
274.875 84.509 mo
274.824 84.5685 274.824 84.6389 274.784 84.7092 cv
274.684 84.8791 273.664 86.049 273.474 86.0988 cv
273.404 86.299 272.875 86.6389 272.714 86.6584 cv
272.674 86.6691 272.524 86.7092 272.494 86.7189 cv
272.274 86.7092 272.164 86.3391 272.114 86.1691 cv
272.104 86.0988 272.064 85.8986 272.074 85.7687 cv
272.084 85.6984 272.084 85.5588 272.164 85.4191 cv
272.094 85.2492 272.084 85.1193 272.104 84.9592 cv
272.145 84.6691 li
272.194 84.3791 272.134 84.0187 272.094 83.7287 cv
272.074 83.6789 272.014 83.6584 271.964 83.6584 cv
271.884 83.6584 271.784 83.7385 271.714 83.799 cv
271.224 84.1789 271.094 84.5588 270.895 84.7785 cv
270.904 84.9689 270.824 85.1389 270.724 85.3586 cv
270.534 85.7785 270.384 86.2092 270.224 86.6389 cv
270.194 86.7385 270.044 86.8293 269.924 86.8293 cv
269.764 86.8293 269.674 86.7287 269.694 86.5793 cv
269.694 86.5392 269.734 86.4787 269.744 86.4387 cv
269.794 86.1291 269.824 85.6486 269.944 85.4689 cv
269.864 85.3088 269.895 85.1486 269.914 85.009 cv
269.964 84.6984 li
269.984 84.5285 270.004 84.1691 269.994 83.9787 cv
269.984 83.8791 269.914 83.7092 269.764 83.7092 cv
269.594 83.7092 269.294 84.5392 269.114 84.5392 cv
268.994 84.5392 268.834 84.4191 268.844 84.3185 cv
268.875 84.1789 269.044 83.6086 269.274 83.4787 cv
269.304 83.3088 269.574 83.0793 269.744 83.0793 cv
269.804 83.0793 269.924 83.1193 269.974 83.1291 cv
270.494 83.3391 270.334 83.8488 270.564 84.1086 cv
270.564 84.1291 270.604 84.1389 270.625 84.1389 cv
270.764 84.1389 271.314 83.2492 272.044 83.2385 cv
272.084 83.2385 272.114 83.2492 272.145 83.259 cv
272.694 83.3791 272.584 83.4387 272.714 83.8088 cv
272.744 83.8986 272.794 83.9689 272.784 84.0793 cv
272.764 84.2785 272.694 84.4787 272.664 84.6789 cv
272.645 84.7687 272.704 85.8586 272.724 85.9592 cv
272.724 85.9992 272.764 86.0285 272.814 86.0285 cv
273.034 86.0285 273.714 85.2092 273.875 85.1486 cv
273.924 84.9289 274.395 84.3293 274.424 84.259 cv
274.484 84.1291 274.574 83.8693 274.764 83.8088 cv
274.824 83.7785 274.914 83.7687 274.974 83.759 cv
275.104 83.759 275.234 83.8293 275.214 83.9592 cv
275.204 83.9992 274.904 84.4289 274.875 84.509 cv
cp
@
277.915 84.1193 mo
277.895 84.1789 277.844 84.2385 277.814 84.2785 cv
277.645 84.5793 277.364 84.8791 277.044 85.1584 cv
276.844 85.3391 276.614 85.549 276.424 85.6486 cv
276.314 85.8586 276.004 86.1584 275.734 86.3586 cv
275.685 86.4084 275.594 86.4191 275.515 86.4191 cv
275.304 86.4191 275.084 86.2492 275.044 86.0685 cv
275.024 85.9191 275.104 84.5285 275.154 84.3488 cv
275.134 84.3185 275.104 84.2492 275.044 84.2492 cv
275.044 84.2492 274.884 84.4289 274.804 84.509 cv
274.754 84.5392 274.705 84.5588 274.654 84.5588 cv
274.544 84.5588 274.455 84.509 274.464 84.4289 cv
274.484 84.3693 274.544 84.2287 274.584 84.1691 cv
274.924 83.5988 275.114 83.1691 275.134 83.0187 cv
275.145 82.9387 275.114 82.8586 275.024 82.8185 cv
274.964 82.7687 274.915 82.7785 274.834 82.7785 cv
274.654 82.7785 274.524 82.8693 274.395 82.8693 cv
274.314 82.8693 274.225 82.7687 274.234 82.7092 cv
274.284 82.3488 274.924 82.4289 275.054 82.3586 cv
275.234 82.2785 275.205 81.9387 275.364 81.799 cv
275.415 81.509 275.614 81.0988 276.064 81.0988 cv
276.225 81.0988 276.424 81.2092 276.404 81.3391 cv
276.364 81.5392 276.344 81.7189 276.254 81.9084 cv
276.284 82.009 276.265 82.1584 276.324 82.2092 cv
276.424 82.259 276.685 82.2287 276.794 82.2189 cv
276.935 82.2189 277.054 82.259 277.015 82.4084 cv
276.984 82.6584 276.314 82.7287 276.114 82.799 cv
276.004 82.8293 275.734 83.4387 275.725 83.5588 cv
275.714 83.6291 275.734 83.6789 275.734 83.7492 cv
275.694 84.0285 275.685 84.3088 275.654 84.5793 cv
275.634 84.8088 275.685 85.0685 275.564 85.2492 cv
275.604 85.3488 275.604 85.6789 275.734 85.6789 cv
275.824 85.6789 276.125 85.5187 276.194 85.4387 cv
276.404 85.2385 276.524 85.0392 276.705 84.9387 cv
276.824 84.7287 277.034 84.5988 277.265 84.3088 cv
277.515 84.009 277.564 83.9191 277.725 83.5793 cv
277.754 83.509 277.895 83.4992 277.964 83.4992 cv
278.125 83.4992 278.205 83.509 278.185 83.6691 cv
278.154 83.799 277.964 83.9992 277.915 84.1193 cv
cp
f
277.915 84.1193 mo
277.895 84.1789 277.844 84.2385 277.814 84.2785 cv
277.645 84.5793 277.364 84.8791 277.044 85.1584 cv
276.844 85.3391 276.614 85.549 276.424 85.6486 cv
276.314 85.8586 276.004 86.1584 275.734 86.3586 cv
275.685 86.4084 275.594 86.4191 275.515 86.4191 cv
275.304 86.4191 275.084 86.2492 275.044 86.0685 cv
275.024 85.9191 275.104 84.5285 275.154 84.3488 cv
275.134 84.3185 275.104 84.2492 275.044 84.2492 cv
275.044 84.2492 274.884 84.4289 274.804 84.509 cv
274.754 84.5392 274.705 84.5588 274.654 84.5588 cv
274.544 84.5588 274.455 84.509 274.464 84.4289 cv
274.484 84.3693 274.544 84.2287 274.584 84.1691 cv
274.924 83.5988 275.114 83.1691 275.134 83.0187 cv
275.145 82.9387 275.114 82.8586 275.024 82.8185 cv
274.964 82.7687 274.915 82.7785 274.834 82.7785 cv
274.654 82.7785 274.524 82.8693 274.395 82.8693 cv
274.314 82.8693 274.225 82.7687 274.234 82.7092 cv
274.284 82.3488 274.924 82.4289 275.054 82.3586 cv
275.234 82.2785 275.205 81.9387 275.364 81.799 cv
275.415 81.509 275.614 81.0988 276.064 81.0988 cv
276.225 81.0988 276.424 81.2092 276.404 81.3391 cv
276.364 81.5392 276.344 81.7189 276.254 81.9084 cv
276.284 82.009 276.265 82.1584 276.324 82.2092 cv
276.424 82.259 276.685 82.2287 276.794 82.2189 cv
276.935 82.2189 277.054 82.259 277.015 82.4084 cv
276.984 82.6584 276.314 82.7287 276.114 82.799 cv
276.004 82.8293 275.734 83.4387 275.725 83.5588 cv
275.714 83.6291 275.734 83.6789 275.734 83.7492 cv
275.694 84.0285 275.685 84.3088 275.654 84.5793 cv
275.634 84.8088 275.685 85.0685 275.564 85.2492 cv
275.604 85.3488 275.604 85.6789 275.734 85.6789 cv
275.824 85.6789 276.125 85.5187 276.194 85.4387 cv
276.404 85.2385 276.524 85.0392 276.705 84.9387 cv
276.824 84.7287 277.034 84.5988 277.265 84.3088 cv
277.515 84.009 277.564 83.9191 277.725 83.5793 cv
277.754 83.509 277.895 83.4992 277.964 83.4992 cv
278.125 83.4992 278.205 83.509 278.185 83.6691 cv
278.154 83.799 277.964 83.9992 277.915 84.1193 cv
cp
@
278.464 83.2092 mo
278.415 83.2092 278.345 83.2385 278.314 83.299 cv
278.165 83.5588 277.964 84.299 277.895 84.5793 cv
277.884 84.6486 277.915 84.7385 277.995 84.7385 cv
278.145 84.7385 278.464 84.2385 278.544 84.1486 cv
278.575 83.9689 278.665 83.6984 278.714 83.4787 cv
278.725 83.3488 278.694 83.2092 278.464 83.2092 cv
cp
280.424 84.9289 mo
280.044 85.3088 279.564 86.1086 279.345 86.2287 cv
279.165 86.509 278.924 86.6789 278.654 86.7687 cv
278.544 86.8088 278.464 86.8791 278.364 86.9191 cv
278.254 86.9592 277.975 86.9992 277.854 87.009 cv
277.455 87.009 277.334 86.6291 277.294 86.3586 cv
277.285 86.2687 277.234 86.1789 277.214 86.0988 cv
277.194 86.009 277.214 85.9191 277.234 85.8391 cv
277.225 85.6584 277.185 85.4787 277.214 85.3185 cv
277.245 85.0392 277.294 84.6984 277.415 84.4484 cv
277.415 84.2492 277.674 83.549 277.915 83.1193 cv
277.955 83.0285 278.055 82.9592 278.125 82.8693 cv
278.234 82.7287 278.484 82.5392 278.694 82.5392 cv
279.125 82.5392 279.334 83.0187 279.265 83.4289 cv
279.185 83.9084 278.964 84.1789 278.794 84.509 cv
278.774 84.5588 278.645 84.6691 278.584 84.6984 cv
278.484 84.8693 278.314 84.9787 278.035 85.0988 cv
277.995 85.1193 277.955 85.1486 277.924 85.1789 cv
277.875 85.2287 277.814 85.4484 277.794 85.509 cv
277.774 85.6584 277.884 86.4992 278.134 86.4992 cv
278.314 86.4992 278.654 86.3391 278.785 86.2189 cv
278.995 85.9992 279.245 85.6486 279.524 85.4387 cv
279.665 85.1486 280.024 84.7687 280.075 84.6984 cv
280.134 84.6193 280.125 84.509 280.185 84.4289 cv
280.265 84.3185 280.415 84.2189 280.555 84.2189 cv
280.674 84.2189 280.794 84.3088 280.774 84.4084 cv
280.745 84.6389 280.634 84.7385 280.424 84.9289 cv
cp
f
278.464 83.2092 mo
278.415 83.2092 278.345 83.2385 278.314 83.299 cv
278.165 83.5588 277.964 84.299 277.895 84.5793 cv
277.884 84.6486 277.915 84.7385 277.995 84.7385 cv
278.145 84.7385 278.464 84.2385 278.544 84.1486 cv
278.575 83.9689 278.665 83.6984 278.714 83.4787 cv
278.725 83.3488 278.694 83.2092 278.464 83.2092 cv
cp
280.424 84.9289 mo
280.044 85.3088 279.564 86.1086 279.345 86.2287 cv
279.165 86.509 278.924 86.6789 278.654 86.7687 cv
278.544 86.8088 278.464 86.8791 278.364 86.9191 cv
278.254 86.9592 277.975 86.9992 277.854 87.009 cv
277.455 87.009 277.334 86.6291 277.294 86.3586 cv
277.285 86.2687 277.234 86.1789 277.214 86.0988 cv
277.194 86.009 277.214 85.9191 277.234 85.8391 cv
277.225 85.6584 277.185 85.4787 277.214 85.3185 cv
277.245 85.0392 277.294 84.6984 277.415 84.4484 cv
277.415 84.2492 277.674 83.549 277.915 83.1193 cv
277.955 83.0285 278.055 82.9592 278.125 82.8693 cv
278.234 82.7287 278.484 82.5392 278.694 82.5392 cv
279.125 82.5392 279.334 83.0187 279.265 83.4289 cv
279.185 83.9084 278.964 84.1789 278.794 84.509 cv
278.774 84.5588 278.645 84.6691 278.584 84.6984 cv
278.484 84.8693 278.314 84.9787 278.035 85.0988 cv
277.995 85.1193 277.955 85.1486 277.924 85.1789 cv
277.875 85.2287 277.814 85.4484 277.794 85.509 cv
277.774 85.6584 277.884 86.4992 278.134 86.4992 cv
278.314 86.4992 278.654 86.3391 278.785 86.2189 cv
278.995 85.9992 279.245 85.6486 279.524 85.4387 cv
279.665 85.1486 280.024 84.7687 280.075 84.6984 cv
280.134 84.6193 280.125 84.509 280.185 84.4289 cv
280.265 84.3185 280.415 84.2189 280.555 84.2189 cv
280.674 84.2189 280.794 84.3088 280.774 84.4084 cv
280.745 84.6389 280.634 84.7385 280.424 84.9289 cv
cp
@
280.624 84.5392 mo
280.484 84.5392 280.384 84.4084 280.384 84.3185 cv
280.384 84.1486 280.484 83.9191 280.664 83.7092 cv
280.804 83.259 281.154 83.0685 281.464 83.0685 cv
282.184 83.0685 282.024 83.8586 282.304 83.8488 cv
282.404 83.8488 282.734 83.5988 283.094 83.6086 cv
283.604 83.6086 283.834 84.0392 283.904 84.0285 cv
283.954 84.0285 284.104 83.8791 284.284 83.8391 cv
284.434 83.7092 284.654 83.5793 284.904 83.5988 cv
285.024 83.5988 285.294 83.6691 285.364 83.7287 cv
285.534 83.8586 285.584 84.0685 285.624 84.259 cv
285.634 84.3088 285.624 84.4084 285.624 84.4484 cv
285.614 84.5187 285.564 84.5685 285.564 84.6291 cv
285.564 84.6291 285.434 85.7287 285.444 85.8693 cv
285.514 85.9592 285.564 85.9992 285.694 85.9992 cv
285.804 85.9992 285.954 85.8791 286.084 85.8488 cv
286.154 85.6789 286.464 85.1984 286.554 85.0187 cv
286.704 84.7385 286.834 84.5285 286.954 84.2492 cv
286.984 84.2189 287.004 84.1691 287.024 84.1389 cv
287.034 84.0685 287.194 83.9387 287.324 83.9689 cv
287.484 84.009 287.514 84.2092 287.414 84.3791 cv
287.264 84.6984 287.154 84.8791 287.044 85.2092 cv
286.984 85.3586 286.804 85.5392 286.684 85.6389 cv
286.654 85.7492 286.554 85.8986 286.514 85.9592 cv
286.404 86.1193 285.824 86.4787 285.414 86.4787 cv
285.354 86.4787 285.264 86.4592 285.204 86.4484 cv
285.044 86.3986 284.934 86.3586 284.854 86.2189 cv
284.714 86.0187 284.784 85.7492 284.824 85.5187 cv
284.844 85.3693 284.944 85.2287 284.994 85.1389 cv
284.984 85.009 284.954 84.8488 284.984 84.7385 cv
284.994 84.6486 285.024 84.5588 285.044 84.4592 cv
285.054 84.3586 284.904 84.049 284.754 84.0588 cv
284.604 84.0588 284.064 84.6193 284.004 84.7687 cv
283.994 84.8293 283.994 84.8586 284.004 84.9084 cv
283.984 85.0285 283.914 85.1389 283.854 85.2385 cv
283.814 85.3293 283.814 85.4289 283.794 85.4787 cv
283.654 85.8391 283.584 86.2092 283.434 86.4191 cv
283.444 86.509 283.404 86.6291 283.394 86.6691 cv
283.364 86.8693 283.264 87.2189 282.944 87.2092 cv
282.824 87.2092 282.684 87.1193 282.694 86.9992 cv
282.714 86.8986 282.764 86.7687 282.814 86.6584 cv
282.924 86.3293 283.034 86.009 283.164 85.6193 cv
283.144 85.3586 283.284 84.4992 283.284 84.4992 cv
283.294 84.3488 283.234 84.0187 283.014 84.0285 cv
282.534 84.0285 282.054 85.0793 282.014 85.3586 cv
282.004 85.4191 282.024 85.4592 282.014 85.5187 cv
281.994 85.6984 281.894 85.9289 281.824 86.1086 cv
281.744 86.3185 281.684 86.7785 281.304 86.799 cv
281.154 86.799 281.014 86.7385 281.034 86.5988 cv
281.064 86.3488 281.144 86.259 281.224 86.0392 cv
281.264 85.9191 281.294 85.799 281.314 85.6691 cv
281.334 85.5988 281.364 85.5187 281.424 85.4387 cv
281.434 85.3088 281.434 85.2189 281.464 85.0685 cv
281.494 84.9592 281.484 84.8693 281.544 84.7785 cv
281.494 84.6691 281.524 84.4689 281.544 84.3185 cv
281.564 83.9084 281.414 83.7189 281.284 83.7189 cv
281.144 83.7189 280.764 84.5392 280.624 84.5392 cv
cp
f
280.624 84.5392 mo
280.484 84.5392 280.384 84.4084 280.384 84.3185 cv
280.384 84.1486 280.484 83.9191 280.664 83.7092 cv
280.804 83.259 281.154 83.0685 281.464 83.0685 cv
282.184 83.0685 282.024 83.8586 282.304 83.8488 cv
282.404 83.8488 282.734 83.5988 283.094 83.6086 cv
283.604 83.6086 283.834 84.0392 283.904 84.0285 cv
283.954 84.0285 284.104 83.8791 284.284 83.8391 cv
284.434 83.7092 284.654 83.5793 284.904 83.5988 cv
285.024 83.5988 285.294 83.6691 285.364 83.7287 cv
285.534 83.8586 285.584 84.0685 285.624 84.259 cv
285.634 84.3088 285.624 84.4084 285.624 84.4484 cv
285.614 84.5187 285.564 84.5685 285.564 84.6291 cv
285.564 84.6291 285.434 85.7287 285.444 85.8693 cv
285.514 85.9592 285.564 85.9992 285.694 85.9992 cv
285.804 85.9992 285.954 85.8791 286.084 85.8488 cv
286.154 85.6789 286.464 85.1984 286.554 85.0187 cv
286.704 84.7385 286.834 84.5285 286.954 84.2492 cv
286.984 84.2189 287.004 84.1691 287.024 84.1389 cv
287.034 84.0685 287.194 83.9387 287.324 83.9689 cv
287.484 84.009 287.514 84.2092 287.414 84.3791 cv
287.264 84.6984 287.154 84.8791 287.044 85.2092 cv
286.984 85.3586 286.804 85.5392 286.684 85.6389 cv
286.654 85.7492 286.554 85.8986 286.514 85.9592 cv
286.404 86.1193 285.824 86.4787 285.414 86.4787 cv
285.354 86.4787 285.264 86.4592 285.204 86.4484 cv
285.044 86.3986 284.934 86.3586 284.854 86.2189 cv
284.714 86.0187 284.784 85.7492 284.824 85.5187 cv
284.844 85.3693 284.944 85.2287 284.994 85.1389 cv
284.984 85.009 284.954 84.8488 284.984 84.7385 cv
284.994 84.6486 285.024 84.5588 285.044 84.4592 cv
285.054 84.3586 284.904 84.049 284.754 84.0588 cv
284.604 84.0588 284.064 84.6193 284.004 84.7687 cv
283.994 84.8293 283.994 84.8586 284.004 84.9084 cv
283.984 85.0285 283.914 85.1389 283.854 85.2385 cv
283.814 85.3293 283.814 85.4289 283.794 85.4787 cv
283.654 85.8391 283.584 86.2092 283.434 86.4191 cv
283.444 86.509 283.404 86.6291 283.394 86.6691 cv
283.364 86.8693 283.264 87.2189 282.944 87.2092 cv
282.824 87.2092 282.684 87.1193 282.694 86.9992 cv
282.714 86.8986 282.764 86.7687 282.814 86.6584 cv
282.924 86.3293 283.034 86.009 283.164 85.6193 cv
283.144 85.3586 283.284 84.4992 283.284 84.4992 cv
283.294 84.3488 283.234 84.0187 283.014 84.0285 cv
282.534 84.0285 282.054 85.0793 282.014 85.3586 cv
282.004 85.4191 282.024 85.4592 282.014 85.5187 cv
281.994 85.6984 281.894 85.9289 281.824 86.1086 cv
281.744 86.3185 281.684 86.7785 281.304 86.799 cv
281.154 86.799 281.014 86.7385 281.034 86.5988 cv
281.064 86.3488 281.144 86.259 281.224 86.0392 cv
281.264 85.9191 281.294 85.799 281.314 85.6691 cv
281.334 85.5988 281.364 85.5187 281.424 85.4387 cv
281.434 85.3088 281.434 85.2189 281.464 85.0685 cv
281.494 84.9592 281.484 84.8693 281.544 84.7785 cv
281.494 84.6691 281.524 84.4689 281.544 84.3185 cv
281.564 83.9084 281.414 83.7189 281.284 83.7189 cv
281.144 83.7189 280.764 84.5392 280.624 84.5392 cv
cp
@
287.284 87.0392 mo
287.024 87.0392 286.724 87.9992 286.704 88.2092 cv
286.684 88.3088 286.704 88.4387 286.874 88.4484 cv
286.934 88.4484 286.974 88.4191 287.034 88.3693 cv
287.084 88.2092 287.174 88.0392 287.234 87.8693 cv
287.284 87.7287 287.364 87.6584 287.384 87.4689 cv
287.424 87.3586 287.474 87.0392 287.284 87.0392 cv
cp
292.284 84.3391 mo
292.244 84.4689 292.154 84.6193 292.144 84.759 cv
292.124 84.8586 291.964 85.1193 291.904 85.2385 cv
291.764 85.4992 291.604 85.7492 291.364 85.8586 cv
291.224 86.0285 291.024 86.1291 290.824 86.1389 cv
290.554 86.1389 290.334 86.0392 290.084 86.0392 cv
289.734 86.0392 289.514 86.4592 289.134 86.4484 cv
289.104 86.4484 288.974 86.4191 288.944 86.4084 cv
288.774 86.3185 288.804 86.0793 288.844 85.9289 cv
288.804 85.7287 288.784 85.4689 288.904 85.2687 cv
288.944 85.1789 289.364 85.1291 289.464 85.1291 cv
289.564 85.1291 289.644 85.1691 289.734 85.1584 cv
289.944 85.1584 290.104 84.6984 290.134 84.5685 cv
290.154 84.4787 290.114 84.3488 290.114 84.259 cv
290.144 84.0588 290.234 83.3986 289.964 83.299 cv
289.914 83.2687 289.584 83.1984 289.554 83.1789 cv
289.474 83.1789 289.404 83.2189 289.334 83.2785 cv
289.164 83.4787 288.984 83.7092 288.904 83.9387 cv
288.864 84.049 288.714 84.1584 288.644 84.259 cv
288.574 84.3791 288.144 85.4484 288.134 85.5392 cv
288.104 85.7385 288.154 85.9289 288.144 86.1193 cv
288.124 86.2385 288.044 86.3986 287.984 86.5187 cv
287.984 86.7189 288.004 86.8791 287.984 87.0685 cv
287.904 87.6691 287.614 88.2287 287.344 88.8185 cv
287.274 88.9592 287.114 89.0793 286.924 89.0793 cv
286.504 89.0793 286.304 88.6193 286.244 88.3391 cv
286.214 88.2092 286.234 88.0285 286.254 87.8693 cv
286.274 87.7385 286.364 87.6193 286.454 87.509 cv
286.484 87.3293 286.574 87.1389 286.684 86.9787 cv
286.904 86.6291 287.464 85.7189 287.514 85.3293 cv
287.524 85.1789 287.504 85.0187 287.504 84.8693 cv
287.484 84.7092 287.514 84.549 287.474 84.3693 cv
287.414 84.1584 287.274 84.4689 286.984 84.3586 cv
286.804 84.299 287.004 84.1193 287.074 84.0187 cv
287.134 83.9484 287.254 83.7492 287.324 83.5588 cv
287.364 83.4289 287.374 83.3088 287.404 83.1486 cv
287.444 82.9084 287.534 82.7092 287.784 82.7092 cv
287.964 82.7092 288.114 82.7785 288.074 82.9387 cv
288.064 83.009 288.024 83.0588 288.024 83.1291 cv
288.014 83.2092 288.044 83.2687 288.034 83.3488 cv
288.034 83.3488 287.934 84.0285 288.164 84.0285 cv
288.284 84.0285 288.334 83.8488 288.434 83.759 cv
288.454 83.5793 288.554 83.4689 288.634 83.3293 cv
288.704 83.2092 288.954 82.9191 289.084 82.8488 cv
289.204 82.799 289.404 82.759 289.524 82.7492 cv
289.604 82.7492 289.664 82.7492 289.744 82.759 cv
289.784 82.7687 289.884 82.8088 289.924 82.8088 cv
290.124 82.8088 290.264 82.799 290.434 82.8391 cv
290.684 82.8986 290.754 83.0988 290.744 83.2785 cv
290.754 83.3791 290.784 83.8488 290.774 83.9387 cv
290.774 83.9387 290.774 84.2287 290.714 84.3791 cv
290.734 84.6086 290.634 84.6691 290.604 84.7785 cv
290.544 84.9592 290.484 85.1486 290.454 85.3293 cv
290.444 85.4689 290.534 85.6486 290.744 85.6486 cv
290.914 85.6486 291.084 85.4992 291.164 85.3986 cv
291.354 85.0793 291.514 84.7385 291.714 84.5285 cv
291.744 84.3693 291.824 84.299 291.904 84.1291 cv
291.944 84.0187 292.014 83.9084 292.064 83.799 cv
292.104 83.7189 292.164 83.6486 292.274 83.6389 cv
292.444 83.6389 292.464 83.799 292.444 83.9191 cv
292.404 84.0685 292.334 84.2189 292.284 84.3391 cv
cp
f
287.284 87.0392 mo
287.024 87.0392 286.724 87.9992 286.704 88.2092 cv
286.684 88.3088 286.704 88.4387 286.874 88.4484 cv
286.934 88.4484 286.974 88.4191 287.034 88.3693 cv
287.084 88.2092 287.174 88.0392 287.234 87.8693 cv
287.284 87.7287 287.364 87.6584 287.384 87.4689 cv
287.424 87.3586 287.474 87.0392 287.284 87.0392 cv
cp
292.284 84.3391 mo
292.244 84.4689 292.154 84.6193 292.144 84.759 cv
292.124 84.8586 291.964 85.1193 291.904 85.2385 cv
291.764 85.4992 291.604 85.7492 291.364 85.8586 cv
291.224 86.0285 291.024 86.1291 290.824 86.1389 cv
290.554 86.1389 290.334 86.0392 290.084 86.0392 cv
289.734 86.0392 289.514 86.4592 289.134 86.4484 cv
289.104 86.4484 288.974 86.4191 288.944 86.4084 cv
288.774 86.3185 288.804 86.0793 288.844 85.9289 cv
288.804 85.7287 288.784 85.4689 288.904 85.2687 cv
288.944 85.1789 289.364 85.1291 289.464 85.1291 cv
289.564 85.1291 289.644 85.1691 289.734 85.1584 cv
289.944 85.1584 290.104 84.6984 290.134 84.5685 cv
290.154 84.4787 290.114 84.3488 290.114 84.259 cv
290.144 84.0588 290.234 83.3986 289.964 83.299 cv
289.914 83.2687 289.584 83.1984 289.554 83.1789 cv
289.474 83.1789 289.404 83.2189 289.334 83.2785 cv
289.164 83.4787 288.984 83.7092 288.904 83.9387 cv
288.864 84.049 288.714 84.1584 288.644 84.259 cv
288.574 84.3791 288.144 85.4484 288.134 85.5392 cv
288.104 85.7385 288.154 85.9289 288.144 86.1193 cv
288.124 86.2385 288.044 86.3986 287.984 86.5187 cv
287.984 86.7189 288.004 86.8791 287.984 87.0685 cv
287.904 87.6691 287.614 88.2287 287.344 88.8185 cv
287.274 88.9592 287.114 89.0793 286.924 89.0793 cv
286.504 89.0793 286.304 88.6193 286.244 88.3391 cv
286.214 88.2092 286.234 88.0285 286.254 87.8693 cv
286.274 87.7385 286.364 87.6193 286.454 87.509 cv
286.484 87.3293 286.574 87.1389 286.684 86.9787 cv
286.904 86.6291 287.464 85.7189 287.514 85.3293 cv
287.524 85.1789 287.504 85.0187 287.504 84.8693 cv
287.484 84.7092 287.514 84.549 287.474 84.3693 cv
287.414 84.1584 287.274 84.4689 286.984 84.3586 cv
286.804 84.299 287.004 84.1193 287.074 84.0187 cv
287.134 83.9484 287.254 83.7492 287.324 83.5588 cv
287.364 83.4289 287.374 83.3088 287.404 83.1486 cv
287.444 82.9084 287.534 82.7092 287.784 82.7092 cv
287.964 82.7092 288.114 82.7785 288.074 82.9387 cv
288.064 83.009 288.024 83.0588 288.024 83.1291 cv
288.014 83.2092 288.044 83.2687 288.034 83.3488 cv
288.034 83.3488 287.934 84.0285 288.164 84.0285 cv
288.284 84.0285 288.334 83.8488 288.434 83.759 cv
288.454 83.5793 288.554 83.4689 288.634 83.3293 cv
288.704 83.2092 288.954 82.9191 289.084 82.8488 cv
289.204 82.799 289.404 82.759 289.524 82.7492 cv
289.604 82.7492 289.664 82.7492 289.744 82.759 cv
289.784 82.7687 289.884 82.8088 289.924 82.8088 cv
290.124 82.8088 290.264 82.799 290.434 82.8391 cv
290.684 82.8986 290.754 83.0988 290.744 83.2785 cv
290.754 83.3791 290.784 83.8488 290.774 83.9387 cv
290.774 83.9387 290.774 84.2287 290.714 84.3791 cv
290.734 84.6086 290.634 84.6691 290.604 84.7785 cv
290.544 84.9592 290.484 85.1486 290.454 85.3293 cv
290.444 85.4689 290.534 85.6486 290.744 85.6486 cv
290.914 85.6486 291.084 85.4992 291.164 85.3986 cv
291.354 85.0793 291.514 84.7385 291.714 84.5285 cv
291.744 84.3693 291.824 84.299 291.904 84.1291 cv
291.944 84.0187 292.014 83.9084 292.064 83.799 cv
292.104 83.7189 292.164 83.6486 292.274 83.6389 cv
292.444 83.6389 292.464 83.799 292.444 83.9191 cv
292.404 84.0685 292.334 84.2189 292.284 84.3391 cv
cp
@
294.064 83.6193 mo
294.034 83.5685 293.875 83.5285 293.794 83.5285 cv
293.504 83.5285 293.294 83.799 293.214 83.9387 cv
293.254 84.1584 293.274 84.6789 293.764 84.6789 cv
293.834 84.6789 293.944 84.6789 294.014 84.6291 cv
294.104 84.5588 294.164 84.3185 294.194 84.1389 cv
294.234 83.8488 294.154 83.7092 294.064 83.6193 cv
cp
293.134 85.0793 mo
292.884 84.9787 292.654 84.6691 292.654 84.2385 cv
292.554 84.1984 li
292.344 84.4484 292.264 84.7385 292.214 85.0285 cv
292.204 85.1389 292.204 85.3088 292.214 85.4084 cv
292.274 85.6584 292.494 85.6984 292.684 85.8293 cv
292.704 85.8586 292.864 85.9484 292.914 85.9387 cv
292.964 85.9387 293.004 85.9289 293.064 85.9191 cv
293.454 85.6486 293.604 85.4992 293.774 85.299 cv
293.514 85.299 293.264 85.2385 293.134 85.0793 cv
cp
295.054 85.1789 mo
294.875 85.299 294.614 85.3391 294.404 85.3391 cv
294.334 85.5285 294.214 85.6984 294.034 85.9084 cv
293.954 85.9787 293.244 86.509 293.154 86.5187 cv
293.084 86.5187 293.014 86.549 292.954 86.5392 cv
292.614 86.5392 292.364 86.3293 292.204 86.1389 cv
292.044 86.0793 291.864 86.009 291.744 85.8791 cv
291.634 85.7492 291.584 85.5685 291.604 85.3986 cv
291.654 85.0392 291.694 84.6486 291.804 84.2785 cv
291.895 83.9387 292.404 83.2092 292.854 83.1086 cv
292.895 83.0988 293.054 83.0588 293.084 83.0588 cv
293.194 83.0588 293.304 83.1291 293.395 83.1291 cv
293.664 83.1086 294.334 83.0285 294.534 83.3586 cv
294.594 83.4992 294.594 83.7189 294.654 83.8693 cv
294.704 83.9992 294.844 84.1291 294.814 84.2687 cv
294.834 84.299 294.804 84.3391 294.784 84.3586 cv
294.714 84.4387 294.684 84.6086 294.634 84.759 cv
294.964 84.7785 295.334 84.5588 295.484 84.5392 cv
295.634 84.3986 295.774 84.259 295.895 84.0793 cv
295.964 83.8986 296.084 83.8391 296.264 83.8391 cv
296.444 83.8391 296.464 83.9592 296.434 84.1086 cv
296.284 84.7687 295.244 85.2492 295.054 85.1789 cv
cp
f
294.064 83.6193 mo
294.034 83.5685 293.875 83.5285 293.794 83.5285 cv
293.504 83.5285 293.294 83.799 293.214 83.9387 cv
293.254 84.1584 293.274 84.6789 293.764 84.6789 cv
293.834 84.6789 293.944 84.6789 294.014 84.6291 cv
294.104 84.5588 294.164 84.3185 294.194 84.1389 cv
294.234 83.8488 294.154 83.7092 294.064 83.6193 cv
cp
293.134 85.0793 mo
292.884 84.9787 292.654 84.6691 292.654 84.2385 cv
292.554 84.1984 li
292.344 84.4484 292.264 84.7385 292.214 85.0285 cv
292.204 85.1389 292.204 85.3088 292.214 85.4084 cv
292.274 85.6584 292.494 85.6984 292.684 85.8293 cv
292.704 85.8586 292.864 85.9484 292.914 85.9387 cv
292.964 85.9387 293.004 85.9289 293.064 85.9191 cv
293.454 85.6486 293.604 85.4992 293.774 85.299 cv
293.514 85.299 293.264 85.2385 293.134 85.0793 cv
cp
295.054 85.1789 mo
294.875 85.299 294.614 85.3391 294.404 85.3391 cv
294.334 85.5285 294.214 85.6984 294.034 85.9084 cv
293.954 85.9787 293.244 86.509 293.154 86.5187 cv
293.084 86.5187 293.014 86.549 292.954 86.5392 cv
292.614 86.5392 292.364 86.3293 292.204 86.1389 cv
292.044 86.0793 291.864 86.009 291.744 85.8791 cv
291.634 85.7492 291.584 85.5685 291.604 85.3986 cv
291.654 85.0392 291.694 84.6486 291.804 84.2785 cv
291.895 83.9387 292.404 83.2092 292.854 83.1086 cv
292.895 83.0988 293.054 83.0588 293.084 83.0588 cv
293.194 83.0588 293.304 83.1291 293.395 83.1291 cv
293.664 83.1086 294.334 83.0285 294.534 83.3586 cv
294.594 83.4992 294.594 83.7189 294.654 83.8693 cv
294.704 83.9992 294.844 84.1291 294.814 84.2687 cv
294.834 84.299 294.804 84.3391 294.784 84.3586 cv
294.714 84.4387 294.684 84.6086 294.634 84.759 cv
294.964 84.7785 295.334 84.5588 295.484 84.5392 cv
295.634 84.3986 295.774 84.259 295.895 84.0793 cv
295.964 83.8986 296.084 83.8391 296.264 83.8391 cv
296.444 83.8391 296.464 83.9592 296.434 84.1086 cv
296.284 84.7687 295.244 85.2492 295.054 85.1789 cv
cp
@
296.194 82.5685 mo
296.004 82.5685 295.894 82.9787 295.894 83.0793 cv
295.884 83.1584 295.874 83.3391 295.984 83.3488 cv
295.994 83.3488 296.024 83.3185 296.044 83.299 cv
296.104 83.2189 296.294 82.8185 296.304 82.7385 cv
296.314 82.6584 296.314 82.5685 296.194 82.5685 cv
cp
299.584 84.4689 mo
299.474 84.7492 299.154 85.1086 298.984 85.3488 cv
298.894 85.4689 298.584 85.8185 298.374 85.8791 cv
298.194 86.0793 298.004 86.2287 297.864 86.259 cv
297.824 86.2687 297.724 86.299 297.694 86.299 cv
297.224 86.299 297.124 85.7785 297.174 85.4689 cv
297.184 85.3986 297.224 85.3185 297.244 85.2492 cv
297.374 84.1584 li
297.384 84.0685 297.374 83.6486 297.314 83.5988 cv
297.024 83.7492 296.874 83.8293 296.614 83.9191 cv
296.524 84.009 296.404 84.0685 296.294 84.1291 cv
296.204 84.1691 296.004 84.799 295.814 84.8986 cv
295.794 84.9084 295.694 84.9289 295.664 84.9289 cv
295.554 84.9289 295.484 84.8293 295.474 84.7385 cv
295.474 84.6691 295.754 84.1193 295.764 84.009 cv
295.804 83.7189 295.284 83.7492 295.344 83.299 cv
295.374 83.1086 295.424 82.8693 295.504 82.6584 cv
295.554 82.5685 295.604 82.4787 295.704 82.4387 cv
295.804 82.2385 296.024 81.8791 296.264 81.8185 cv
296.304 81.8088 296.364 81.799 296.414 81.7785 cv
296.454 81.7785 296.484 81.799 296.514 81.8088 cv
296.874 81.8791 296.964 81.9992 296.914 82.3293 cv
296.874 82.5988 296.764 82.8391 296.724 83.1086 cv
296.714 83.1691 296.714 83.2385 296.804 83.2385 cv
296.844 83.2385 296.884 83.2287 296.904 83.1984 cv
297.004 83.1291 297.224 82.9084 297.294 82.8088 cv
297.374 82.6291 297.584 82.3488 297.864 82.3488 cv
297.984 82.3488 298.164 82.4084 298.114 82.5187 cv
298.104 82.5988 298.064 82.6789 298.064 82.7687 cv
298.054 82.8791 298.094 83.0588 298.074 83.2385 cv
298.054 83.4289 298.004 83.5588 297.914 83.7385 cv
297.944 84.009 297.874 84.4084 297.814 84.6984 cv
297.804 84.759 297.754 84.8391 297.724 84.9084 cv
297.694 85.1486 297.684 85.4191 297.704 85.6584 cv
297.714 85.7189 297.744 85.759 297.814 85.759 cv
297.864 85.759 297.884 85.759 297.914 85.7287 cv
298.214 85.5285 298.504 85.2092 298.684 85.0285 cv
298.724 84.8986 298.964 84.6584 299.024 84.549 cv
299.144 84.3488 299.194 84.1789 299.424 84.049 cv
299.484 84.0285 299.554 84.009 299.604 84.009 cv
299.704 84.009 299.844 84.0685 299.814 84.1584 cv
299.794 84.2687 299.644 84.3488 299.584 84.4689 cv
cp
f
296.194 82.5685 mo
296.004 82.5685 295.894 82.9787 295.894 83.0793 cv
295.884 83.1584 295.874 83.3391 295.984 83.3488 cv
295.994 83.3488 296.024 83.3185 296.044 83.299 cv
296.104 83.2189 296.294 82.8185 296.304 82.7385 cv
296.314 82.6584 296.314 82.5685 296.194 82.5685 cv
cp
299.584 84.4689 mo
299.474 84.7492 299.154 85.1086 298.984 85.3488 cv
298.894 85.4689 298.584 85.8185 298.374 85.8791 cv
298.194 86.0793 298.004 86.2287 297.864 86.259 cv
297.824 86.2687 297.724 86.299 297.694 86.299 cv
297.224 86.299 297.124 85.7785 297.174 85.4689 cv
297.184 85.3986 297.224 85.3185 297.244 85.2492 cv
297.374 84.1584 li
297.384 84.0685 297.374 83.6486 297.314 83.5988 cv
297.024 83.7492 296.874 83.8293 296.614 83.9191 cv
296.524 84.009 296.404 84.0685 296.294 84.1291 cv
296.204 84.1691 296.004 84.799 295.814 84.8986 cv
295.794 84.9084 295.694 84.9289 295.664 84.9289 cv
295.554 84.9289 295.484 84.8293 295.474 84.7385 cv
295.474 84.6691 295.754 84.1193 295.764 84.009 cv
295.804 83.7189 295.284 83.7492 295.344 83.299 cv
295.374 83.1086 295.424 82.8693 295.504 82.6584 cv
295.554 82.5685 295.604 82.4787 295.704 82.4387 cv
295.804 82.2385 296.024 81.8791 296.264 81.8185 cv
296.304 81.8088 296.364 81.799 296.414 81.7785 cv
296.454 81.7785 296.484 81.799 296.514 81.8088 cv
296.874 81.8791 296.964 81.9992 296.914 82.3293 cv
296.874 82.5988 296.764 82.8391 296.724 83.1086 cv
296.714 83.1691 296.714 83.2385 296.804 83.2385 cv
296.844 83.2385 296.884 83.2287 296.904 83.1984 cv
297.004 83.1291 297.224 82.9084 297.294 82.8088 cv
297.374 82.6291 297.584 82.3488 297.864 82.3488 cv
297.984 82.3488 298.164 82.4084 298.114 82.5187 cv
298.104 82.5988 298.064 82.6789 298.064 82.7687 cv
298.054 82.8791 298.094 83.0588 298.074 83.2385 cv
298.054 83.4289 298.004 83.5588 297.914 83.7385 cv
297.944 84.009 297.874 84.4084 297.814 84.6984 cv
297.804 84.759 297.754 84.8391 297.724 84.9084 cv
297.694 85.1486 297.684 85.4191 297.704 85.6584 cv
297.714 85.7189 297.744 85.759 297.814 85.759 cv
297.864 85.759 297.884 85.759 297.914 85.7287 cv
298.214 85.5285 298.504 85.2092 298.684 85.0285 cv
298.724 84.8986 298.964 84.6584 299.024 84.549 cv
299.144 84.3488 299.194 84.1789 299.424 84.049 cv
299.484 84.0285 299.554 84.009 299.604 84.009 cv
299.704 84.009 299.844 84.0685 299.814 84.1584 cv
299.794 84.2687 299.644 84.3488 299.584 84.4689 cv
cp
@
301.343 83.1486 mo
301.143 83.1486 300.913 83.3293 300.733 83.3586 cv
300.213 83.7492 299.563 84.7785 299.483 85.3488 cv
299.473 85.4592 299.473 86.049 299.653 86.0392 cv
299.873 86.0392 300.243 85.4787 300.393 85.3293 cv
300.543 85.1691 300.823 84.8391 300.993 84.6486 cv
301.143 84.4191 301.713 83.6691 301.753 83.3986 cv
301.763 83.2287 301.493 83.1486 301.343 83.1486 cv
cp
303.873 84.9191 mo
303.783 85.0793 303.263 85.9787 303.093 86.0685 cv
302.843 86.4689 302.473 86.8088 302.143 86.8088 cv
301.833 86.8088 301.463 86.5588 301.423 86.2785 cv
301.333 86.1486 301.323 85.9289 301.323 85.7687 cv
301.323 85.6486 301.383 85.4689 301.393 85.3586 cv
301.413 85.2785 301.383 85.1486 301.273 85.1486 cv
301.213 85.1486 301.123 85.2189 301.083 85.259 cv
300.753 85.6584 300.483 86.1193 300.043 86.4484 cv
299.943 86.5187 299.613 86.5793 299.473 86.5793 cv
299.073 86.5793 298.913 86.0685 298.873 85.8088 cv
298.843 85.5988 298.913 85.3586 298.943 85.1389 cv
298.973 84.9289 299.073 84.6789 299.213 84.4787 cv
299.433 83.8391 300.483 82.6291 301.323 82.6291 cv
301.513 82.6291 302.133 82.7492 302.133 82.9387 cv
302.133 82.9592 302.163 83.0793 302.163 83.0988 cv
302.243 83.1984 302.543 83.1984 302.493 83.4592 cv
302.483 83.5588 302.443 83.7092 302.383 83.799 cv
302.363 84.0285 302.313 84.2189 302.273 84.4289 cv
302.233 84.5793 302.143 84.7785 302.073 84.8986 cv
302.113 85.0392 302.043 85.3791 302.043 85.3791 cv
302.043 85.4484 301.983 85.5285 301.973 85.5685 cv
301.963 85.6984 302.013 86.2687 302.213 86.2687 cv
302.443 86.2687 302.853 85.6984 303.113 85.3986 cv
303.283 85.0187 303.493 84.7092 303.533 84.6486 cv
303.683 84.3791 303.753 84.0588 304.083 84.0588 cv
304.253 84.0588 304.293 84.1584 304.283 84.259 cv
304.263 84.3791 303.933 84.7785 303.873 84.9191 cv
cp
f
301.343 83.1486 mo
301.143 83.1486 300.913 83.3293 300.733 83.3586 cv
300.213 83.7492 299.563 84.7785 299.483 85.3488 cv
299.473 85.4592 299.473 86.049 299.653 86.0392 cv
299.873 86.0392 300.243 85.4787 300.393 85.3293 cv
300.543 85.1691 300.823 84.8391 300.993 84.6486 cv
301.143 84.4191 301.713 83.6691 301.753 83.3986 cv
301.763 83.2287 301.493 83.1486 301.343 83.1486 cv
cp
303.873 84.9191 mo
303.783 85.0793 303.263 85.9787 303.093 86.0685 cv
302.843 86.4689 302.473 86.8088 302.143 86.8088 cv
301.833 86.8088 301.463 86.5588 301.423 86.2785 cv
301.333 86.1486 301.323 85.9289 301.323 85.7687 cv
301.323 85.6486 301.383 85.4689 301.393 85.3586 cv
301.413 85.2785 301.383 85.1486 301.273 85.1486 cv
301.213 85.1486 301.123 85.2189 301.083 85.259 cv
300.753 85.6584 300.483 86.1193 300.043 86.4484 cv
299.943 86.5187 299.613 86.5793 299.473 86.5793 cv
299.073 86.5793 298.913 86.0685 298.873 85.8088 cv
298.843 85.5988 298.913 85.3586 298.943 85.1389 cv
298.973 84.9289 299.073 84.6789 299.213 84.4787 cv
299.433 83.8391 300.483 82.6291 301.323 82.6291 cv
301.513 82.6291 302.133 82.7492 302.133 82.9387 cv
302.133 82.9592 302.163 83.0793 302.163 83.0988 cv
302.243 83.1984 302.543 83.1984 302.493 83.4592 cv
302.483 83.5588 302.443 83.7092 302.383 83.799 cv
302.363 84.0285 302.313 84.2189 302.273 84.4289 cv
302.233 84.5793 302.143 84.7785 302.073 84.8986 cv
302.113 85.0392 302.043 85.3791 302.043 85.3791 cv
302.043 85.4484 301.983 85.5285 301.973 85.5685 cv
301.963 85.6984 302.013 86.2687 302.213 86.2687 cv
302.443 86.2687 302.853 85.6984 303.113 85.3986 cv
303.283 85.0187 303.493 84.7092 303.533 84.6486 cv
303.683 84.3791 303.753 84.0588 304.083 84.0588 cv
304.253 84.0588 304.293 84.1584 304.283 84.259 cv
304.263 84.3791 303.933 84.7785 303.873 84.9191 cv
cp
@
304.153 82.5685 mo
303.963 82.5685 303.853 82.9787 303.853 83.0793 cv
303.843 83.1584 303.833 83.3391 303.943 83.3488 cv
303.953 83.3488 303.982 83.3185 304.002 83.299 cv
304.063 83.2189 304.252 82.8185 304.263 82.7385 cv
304.272 82.6584 304.272 82.5685 304.153 82.5685 cv
cp
307.543 84.4689 mo
307.433 84.7492 307.113 85.1086 306.943 85.3488 cv
306.853 85.4689 306.542 85.8185 306.333 85.8791 cv
306.153 86.0793 305.963 86.2287 305.823 86.259 cv
305.783 86.2687 305.683 86.299 305.653 86.299 cv
305.183 86.299 305.083 85.7785 305.133 85.4689 cv
305.143 85.3986 305.183 85.3185 305.203 85.2492 cv
305.333 84.1584 li
305.343 84.0685 305.333 83.6486 305.272 83.5988 cv
304.982 83.7492 304.833 83.8293 304.573 83.9191 cv
304.482 84.009 304.363 84.0685 304.252 84.1291 cv
304.163 84.1691 303.963 84.799 303.772 84.8986 cv
303.752 84.9084 303.653 84.9289 303.623 84.9289 cv
303.513 84.9289 303.443 84.8293 303.433 84.7385 cv
303.433 84.6691 303.713 84.1193 303.723 84.009 cv
303.763 83.7189 303.243 83.7492 303.303 83.299 cv
303.333 83.1086 303.383 82.8693 303.463 82.6584 cv
303.513 82.5685 303.563 82.4787 303.663 82.4387 cv
303.763 82.2385 303.982 81.8791 304.223 81.8185 cv
304.263 81.8088 304.323 81.799 304.373 81.7785 cv
304.413 81.7785 304.443 81.799 304.473 81.8088 cv
304.833 81.8791 304.923 81.9992 304.873 82.3293 cv
304.833 82.5988 304.723 82.8391 304.683 83.1086 cv
304.673 83.1691 304.673 83.2385 304.763 83.2385 cv
304.803 83.2385 304.843 83.2287 304.863 83.1984 cv
304.963 83.1291 305.183 82.9084 305.252 82.8088 cv
305.333 82.6291 305.542 82.3488 305.823 82.3488 cv
305.943 82.3488 306.123 82.4084 306.073 82.5187 cv
306.063 82.5988 306.022 82.6789 306.022 82.7687 cv
306.013 82.8791 306.053 83.0588 306.033 83.2385 cv
306.013 83.4289 305.963 83.5588 305.873 83.7385 cv
305.903 84.009 305.833 84.4084 305.772 84.6984 cv
305.763 84.759 305.713 84.8391 305.683 84.9084 cv
305.653 85.1486 305.643 85.4191 305.663 85.6584 cv
305.673 85.7189 305.703 85.759 305.772 85.759 cv
305.823 85.759 305.843 85.759 305.873 85.7287 cv
306.173 85.5285 306.463 85.2092 306.643 85.0285 cv
306.683 84.8986 306.923 84.6584 306.982 84.549 cv
307.103 84.3488 307.152 84.1789 307.383 84.049 cv
307.443 84.0285 307.513 84.009 307.563 84.009 cv
307.662 84.009 307.803 84.0685 307.772 84.1584 cv
307.752 84.2687 307.603 84.3488 307.543 84.4689 cv
cp
f
304.153 82.5685 mo
303.963 82.5685 303.853 82.9787 303.853 83.0793 cv
303.843 83.1584 303.833 83.3391 303.943 83.3488 cv
303.953 83.3488 303.982 83.3185 304.002 83.299 cv
304.063 83.2189 304.252 82.8185 304.263 82.7385 cv
304.272 82.6584 304.272 82.5685 304.153 82.5685 cv
cp
307.543 84.4689 mo
307.433 84.7492 307.113 85.1086 306.943 85.3488 cv
306.853 85.4689 306.542 85.8185 306.333 85.8791 cv
306.153 86.0793 305.963 86.2287 305.823 86.259 cv
305.783 86.2687 305.683 86.299 305.653 86.299 cv
305.183 86.299 305.083 85.7785 305.133 85.4689 cv
305.143 85.3986 305.183 85.3185 305.203 85.2492 cv
305.333 84.1584 li
305.343 84.0685 305.333 83.6486 305.272 83.5988 cv
304.982 83.7492 304.833 83.8293 304.573 83.9191 cv
304.482 84.009 304.363 84.0685 304.252 84.1291 cv
304.163 84.1691 303.963 84.799 303.772 84.8986 cv
303.752 84.9084 303.653 84.9289 303.623 84.9289 cv
303.513 84.9289 303.443 84.8293 303.433 84.7385 cv
303.433 84.6691 303.713 84.1193 303.723 84.009 cv
303.763 83.7189 303.243 83.7492 303.303 83.299 cv
303.333 83.1086 303.383 82.8693 303.463 82.6584 cv
303.513 82.5685 303.563 82.4787 303.663 82.4387 cv
303.763 82.2385 303.982 81.8791 304.223 81.8185 cv
304.263 81.8088 304.323 81.799 304.373 81.7785 cv
304.413 81.7785 304.443 81.799 304.473 81.8088 cv
304.833 81.8791 304.923 81.9992 304.873 82.3293 cv
304.833 82.5988 304.723 82.8391 304.683 83.1086 cv
304.673 83.1691 304.673 83.2385 304.763 83.2385 cv
304.803 83.2385 304.843 83.2287 304.863 83.1984 cv
304.963 83.1291 305.183 82.9084 305.252 82.8088 cv
305.333 82.6291 305.542 82.3488 305.823 82.3488 cv
305.943 82.3488 306.123 82.4084 306.073 82.5187 cv
306.063 82.5988 306.022 82.6789 306.022 82.7687 cv
306.013 82.8791 306.053 83.0588 306.033 83.2385 cv
306.013 83.4289 305.963 83.5588 305.873 83.7385 cv
305.903 84.009 305.833 84.4084 305.772 84.6984 cv
305.763 84.759 305.713 84.8391 305.683 84.9084 cv
305.653 85.1486 305.643 85.4191 305.663 85.6584 cv
305.673 85.7189 305.703 85.759 305.772 85.759 cv
305.823 85.759 305.843 85.759 305.873 85.7287 cv
306.173 85.5285 306.463 85.2092 306.643 85.0285 cv
306.683 84.8986 306.923 84.6584 306.982 84.549 cv
307.103 84.3488 307.152 84.1789 307.383 84.049 cv
307.443 84.0285 307.513 84.009 307.563 84.009 cv
307.662 84.009 307.803 84.0685 307.772 84.1584 cv
307.752 84.2687 307.603 84.3488 307.543 84.4689 cv
cp
@
310.793 87.4084 mo
310.793 87.3791 310.763 87.3488 310.732 87.3488 cv
310.673 87.3488 310.313 87.6984 310.263 87.7492 cv
310.083 87.9689 309.982 88.0793 309.822 88.3293 cv
309.723 88.509 309.613 88.759 309.583 88.9484 cv
309.572 88.9992 309.543 89.0392 309.533 89.0793 cv
309.513 89.2287 309.593 89.4592 309.753 89.4592 cv
310.023 89.4592 310.423 89.2385 310.533 89.0392 cv
310.563 88.9787 310.763 88.5988 310.773 88.5685 cv
310.843 88.0685 li
310.854 88.009 310.813 87.4592 310.793 87.4084 cv
cp
312.152 86.2385 mo
311.993 86.5187 311.543 86.9689 311.473 87.0392 cv
311.473 87.2492 311.482 87.1691 311.453 87.5392 cv
311.413 87.8391 311.453 87.9084 311.383 88.2189 cv
311.363 88.3586 311.322 88.549 311.273 88.7189 cv
311.232 88.8185 311.143 88.9484 311.053 89.0285 cv
311.053 89.1291 311.033 89.2189 310.993 89.3088 cv
310.813 89.6584 310.023 89.8293 309.633 89.8293 cv
309.373 89.8293 309.023 89.6193 309.023 89.4084 cv
309.013 89.2687 308.993 89.1086 309.063 88.9787 cv
309.043 88.4387 309.493 88.009 309.973 87.4787 cv
310.213 87.2287 310.822 86.799 310.854 86.5685 cv
310.822 86.4484 310.843 85.9484 310.854 85.5793 cv
310.813 85.3293 310.793 84.9484 310.652 84.9484 cv
310.523 84.9484 309.934 85.7189 309.833 85.8391 cv
309.783 85.9084 309.783 86.009 309.743 86.0793 cv
309.533 86.3791 309.163 86.8293 308.713 86.8185 cv
308.232 86.8185 308.434 86.3986 308.463 86.1291 cv
308.482 86.0285 308.482 85.9387 308.523 85.8293 cv
308.482 85.7287 308.434 85.4992 308.523 85.3185 cv
308.513 84.8391 308.583 84.3986 308.673 84.1584 cv
308.723 83.8986 308.773 83.6984 308.833 83.4289 cv
308.843 83.3185 308.732 83.1984 308.583 83.1984 cv
308.223 83.1984 307.822 84.4787 307.463 84.4787 cv
307.343 84.4787 307.213 84.3693 307.232 84.2687 cv
307.263 84.0392 307.953 82.9191 308.333 82.7687 cv
308.423 82.7385 308.684 82.6984 308.763 82.6984 cv
309.053 82.6984 309.423 82.8088 309.413 83.0988 cv
309.393 83.4289 309.333 83.8293 309.232 84.0392 cv
309.243 84.3088 309.223 84.4387 309.163 84.6691 cv
309.143 84.799 309.083 84.8586 309.083 84.9484 cv
309.072 85.0588 309.033 85.8693 309.173 85.8693 cv
309.313 85.8693 310.213 84.6389 310.343 84.5187 cv
310.393 84.3391 310.523 84.1984 310.652 84.0588 cv
310.843 83.8391 311.023 83.5793 311.283 83.4084 cv
311.333 83.3791 311.423 83.3791 311.463 83.3791 cv
311.593 83.3791 311.723 83.4484 311.713 83.5685 cv
311.693 83.6291 311.652 83.6984 311.643 83.7492 cv
311.572 83.9592 311.473 84.1984 311.443 84.4289 cv
311.423 84.5988 311.393 86.2092 311.572 86.2092 cv
311.743 86.2092 312.493 85.0187 312.663 84.8986 cv
312.732 84.6389 312.993 84.2189 313.093 83.9689 cv
313.143 83.8293 313.343 83.8185 313.423 83.8391 cv
313.583 83.8791 313.553 84.009 313.493 84.2287 cv
313.322 84.9387 312.354 86.1486 312.152 86.2385 cv
cp
f
310.793 87.4084 mo
310.793 87.3791 310.763 87.3488 310.732 87.3488 cv
310.673 87.3488 310.313 87.6984 310.263 87.7492 cv
310.083 87.9689 309.982 88.0793 309.822 88.3293 cv
309.723 88.509 309.613 88.759 309.583 88.9484 cv
309.572 88.9992 309.543 89.0392 309.533 89.0793 cv
309.513 89.2287 309.593 89.4592 309.753 89.4592 cv
310.023 89.4592 310.423 89.2385 310.533 89.0392 cv
310.563 88.9787 310.763 88.5988 310.773 88.5685 cv
310.843 88.0685 li
310.854 88.009 310.813 87.4592 310.793 87.4084 cv
cp
312.152 86.2385 mo
311.993 86.5187 311.543 86.9689 311.473 87.0392 cv
311.473 87.2492 311.482 87.1691 311.453 87.5392 cv
311.413 87.8391 311.453 87.9084 311.383 88.2189 cv
311.363 88.3586 311.322 88.549 311.273 88.7189 cv
311.232 88.8185 311.143 88.9484 311.053 89.0285 cv
311.053 89.1291 311.033 89.2189 310.993 89.3088 cv
310.813 89.6584 310.023 89.8293 309.633 89.8293 cv
309.373 89.8293 309.023 89.6193 309.023 89.4084 cv
309.013 89.2687 308.993 89.1086 309.063 88.9787 cv
309.043 88.4387 309.493 88.009 309.973 87.4787 cv
310.213 87.2287 310.822 86.799 310.854 86.5685 cv
310.822 86.4484 310.843 85.9484 310.854 85.5793 cv
310.813 85.3293 310.793 84.9484 310.652 84.9484 cv
310.523 84.9484 309.934 85.7189 309.833 85.8391 cv
309.783 85.9084 309.783 86.009 309.743 86.0793 cv
309.533 86.3791 309.163 86.8293 308.713 86.8185 cv
308.232 86.8185 308.434 86.3986 308.463 86.1291 cv
308.482 86.0285 308.482 85.9387 308.523 85.8293 cv
308.482 85.7287 308.434 85.4992 308.523 85.3185 cv
308.513 84.8391 308.583 84.3986 308.673 84.1584 cv
308.723 83.8986 308.773 83.6984 308.833 83.4289 cv
308.843 83.3185 308.732 83.1984 308.583 83.1984 cv
308.223 83.1984 307.822 84.4787 307.463 84.4787 cv
307.343 84.4787 307.213 84.3693 307.232 84.2687 cv
307.263 84.0392 307.953 82.9191 308.333 82.7687 cv
308.423 82.7385 308.684 82.6984 308.763 82.6984 cv
309.053 82.6984 309.423 82.8088 309.413 83.0988 cv
309.393 83.4289 309.333 83.8293 309.232 84.0392 cv
309.243 84.3088 309.223 84.4387 309.163 84.6691 cv
309.143 84.799 309.083 84.8586 309.083 84.9484 cv
309.072 85.0588 309.033 85.8693 309.173 85.8693 cv
309.313 85.8693 310.213 84.6389 310.343 84.5187 cv
310.393 84.3391 310.523 84.1984 310.652 84.0588 cv
310.843 83.8391 311.023 83.5793 311.283 83.4084 cv
311.333 83.3791 311.423 83.3791 311.463 83.3791 cv
311.593 83.3791 311.723 83.4484 311.713 83.5685 cv
311.693 83.6291 311.652 83.6984 311.643 83.7492 cv
311.572 83.9592 311.473 84.1984 311.443 84.4289 cv
311.423 84.5988 311.393 86.2092 311.572 86.2092 cv
311.743 86.2092 312.493 85.0187 312.663 84.8986 cv
312.732 84.6389 312.993 84.2189 313.093 83.9689 cv
313.143 83.8293 313.343 83.8185 313.423 83.8391 cv
313.583 83.8791 313.553 84.009 313.493 84.2287 cv
313.322 84.9387 312.354 86.1486 312.152 86.2385 cv
cp
@
320.072 85.0793 mo
319.662 85.6789 318.662 86.6584 318.354 86.7287 cv
318.322 86.9084 317.843 87.1086 317.623 87.1789 cv
317.513 87.2287 317.104 87.3088 317.003 87.3088 cv
316.713 87.3088 316.423 87.2492 316.223 87.1193 cv
315.963 86.9992 315.703 86.5392 315.703 86.299 cv
315.673 86.1789 315.623 86.0285 315.643 85.9289 cv
315.803 84.9084 li
315.813 84.8391 315.833 84.759 315.863 84.6789 cv
315.933 84.4387 316.013 84.1789 316.093 83.9387 cv
316.113 83.8293 316.162 83.6486 316.253 83.6086 cv
316.242 83.4992 316.263 83.3586 316.322 83.2785 cv
316.443 83.0392 316.572 82.7785 316.662 82.5392 cv
316.902 82.0685 317.093 81.6584 317.393 81.2189 cv
317.513 81.0588 317.793 80.8693 317.992 80.8693 cv
318.213 80.8693 318.313 80.9191 318.492 81.0793 cv
318.713 81.009 319.363 81.5685 319.303 82.0392 cv
319.263 82.2385 319.193 82.9191 318.843 82.9191 cv
318.673 82.9191 318.553 82.8293 318.572 82.6789 cv
318.613 82.4787 318.773 82.2687 318.803 82.0988 cv
318.843 81.7785 318.553 81.4387 318.162 81.4387 cv
317.793 81.4387 317.623 82.0285 317.463 82.2492 cv
317.402 82.3693 317.313 82.4787 317.242 82.6193 cv
317.023 82.9289 316.963 83.2785 316.803 83.6086 cv
316.662 83.8586 316.553 84.1193 316.503 84.3791 cv
316.473 84.4592 316.473 84.5285 316.463 84.5793 cv
316.443 84.6691 316.354 84.7687 316.333 84.8488 cv
316.333 84.8488 316.322 85.3488 316.203 85.4387 cv
316.273 85.5685 316.203 85.9289 316.203 85.9289 cv
316.203 86.3088 316.393 86.9191 316.943 86.9191 cv
317.263 86.9191 317.732 86.6789 317.973 86.4787 cv
318.343 86.2287 319.193 85.509 319.354 85.1389 cv
319.402 85.0187 319.363 84.8693 319.513 84.7687 cv
319.563 84.7385 319.703 84.7189 319.773 84.7189 cv
319.873 84.7189 320.203 84.7785 320.173 84.8791 cv
320.173 84.9289 320.093 85.0588 320.072 85.0793 cv
cp
f
320.072 85.0793 mo
319.662 85.6789 318.662 86.6584 318.354 86.7287 cv
318.322 86.9084 317.843 87.1086 317.623 87.1789 cv
317.513 87.2287 317.104 87.3088 317.003 87.3088 cv
316.713 87.3088 316.423 87.2492 316.223 87.1193 cv
315.963 86.9992 315.703 86.5392 315.703 86.299 cv
315.673 86.1789 315.623 86.0285 315.643 85.9289 cv
315.803 84.9084 li
315.813 84.8391 315.833 84.759 315.863 84.6789 cv
315.933 84.4387 316.013 84.1789 316.093 83.9387 cv
316.113 83.8293 316.162 83.6486 316.253 83.6086 cv
316.242 83.4992 316.263 83.3586 316.322 83.2785 cv
316.443 83.0392 316.572 82.7785 316.662 82.5392 cv
316.902 82.0685 317.093 81.6584 317.393 81.2189 cv
317.513 81.0588 317.793 80.8693 317.992 80.8693 cv
318.213 80.8693 318.313 80.9191 318.492 81.0793 cv
318.713 81.009 319.363 81.5685 319.303 82.0392 cv
319.263 82.2385 319.193 82.9191 318.843 82.9191 cv
318.673 82.9191 318.553 82.8293 318.572 82.6789 cv
318.613 82.4787 318.773 82.2687 318.803 82.0988 cv
318.843 81.7785 318.553 81.4387 318.162 81.4387 cv
317.793 81.4387 317.623 82.0285 317.463 82.2492 cv
317.402 82.3693 317.313 82.4787 317.242 82.6193 cv
317.023 82.9289 316.963 83.2785 316.803 83.6086 cv
316.662 83.8586 316.553 84.1193 316.503 84.3791 cv
316.473 84.4592 316.473 84.5285 316.463 84.5793 cv
316.443 84.6691 316.354 84.7687 316.333 84.8488 cv
316.333 84.8488 316.322 85.3488 316.203 85.4387 cv
316.273 85.5685 316.203 85.9289 316.203 85.9289 cv
316.203 86.3088 316.393 86.9191 316.943 86.9191 cv
317.263 86.9191 317.732 86.6789 317.973 86.4787 cv
318.343 86.2287 319.193 85.509 319.354 85.1389 cv
319.402 85.0187 319.363 84.8693 319.513 84.7687 cv
319.563 84.7385 319.703 84.7189 319.773 84.7189 cv
319.873 84.7189 320.203 84.7785 320.173 84.8791 cv
320.173 84.9289 320.093 85.0588 320.072 85.0793 cv
cp
@
325.143 84.6789 mo
325.053 84.8088 324.933 84.9484 324.793 85.049 cv
324.633 85.3391 324.402 85.6691 324.123 85.9289 cv
324.063 85.9689 324.043 86.0392 323.992 86.0988 cv
323.923 86.1691 323.723 86.259 323.633 86.259 cv
323.253 86.259 323.203 85.8088 323.152 85.5685 cv
323.123 85.4387 323.093 85.299 323.113 85.1486 cv
323.063 85.0685 323.013 84.9992 323.013 84.9191 cv
323.003 84.8185 322.973 84.3088 322.893 84.3185 cv
322.793 84.3185 322.443 84.9689 322.373 85.0588 cv
322.253 85.299 322.063 85.5793 321.902 85.759 cv
321.822 85.9191 321.854 85.9787 321.703 86.1291 cv
321.533 86.259 321.303 86.4787 321.043 86.4787 cv
320.732 86.4787 320.623 86.2687 320.604 86.049 cv
320.613 85.9592 320.572 85.8986 320.572 85.799 cv
320.572 85.5187 320.633 85.3488 320.703 85.0793 cv
320.662 84.9484 320.662 84.8185 320.673 84.6984 cv
320.703 84.5187 320.662 84.3791 320.693 84.1984 cv
320.703 84.1389 320.742 84.0285 320.742 84.0285 cv
320.643 83.8088 320.652 83.6584 320.673 83.4592 cv
320.713 83.2385 320.953 82.9787 321.263 82.9787 cv
321.533 82.9787 321.652 83.1086 321.633 83.2385 cv
321.623 83.3185 321.423 83.6584 321.393 83.8185 cv
321.303 84.0588 321.263 84.3088 321.242 84.5588 cv
321.193 84.9592 321.203 85.7492 321.293 85.7385 cv
321.492 85.7385 322.533 83.8791 322.572 83.5187 cv
322.604 83.3986 322.713 83.1984 322.822 83.0588 cv
322.822 82.9289 322.933 82.8391 322.963 82.7385 cv
323.033 82.6193 323.133 82.5285 323.303 82.5285 cv
323.753 82.5285 323.822 82.799 323.773 83.1086 cv
323.723 83.4787 323.613 83.8488 323.553 84.2287 cv
323.533 84.4387 323.633 85.6086 323.793 85.6086 cv
323.854 85.6086 324.063 85.3586 324.162 85.3293 cv
324.253 85.1486 324.593 84.759 324.843 84.3488 cv
324.893 84.3088 324.933 84.2492 324.953 84.1984 cv
325.013 84.0392 325.113 83.759 325.412 83.759 cv
325.572 83.759 325.613 83.8693 325.593 84.009 cv
325.572 84.0588 325.263 84.5285 325.143 84.6789 cv
cp
f
325.143 84.6789 mo
325.053 84.8088 324.933 84.9484 324.793 85.049 cv
324.633 85.3391 324.402 85.6691 324.123 85.9289 cv
324.063 85.9689 324.043 86.0392 323.992 86.0988 cv
323.923 86.1691 323.723 86.259 323.633 86.259 cv
323.253 86.259 323.203 85.8088 323.152 85.5685 cv
323.123 85.4387 323.093 85.299 323.113 85.1486 cv
323.063 85.0685 323.013 84.9992 323.013 84.9191 cv
323.003 84.8185 322.973 84.3088 322.893 84.3185 cv
322.793 84.3185 322.443 84.9689 322.373 85.0588 cv
322.253 85.299 322.063 85.5793 321.902 85.759 cv
321.822 85.9191 321.854 85.9787 321.703 86.1291 cv
321.533 86.259 321.303 86.4787 321.043 86.4787 cv
320.732 86.4787 320.623 86.2687 320.604 86.049 cv
320.613 85.9592 320.572 85.8986 320.572 85.799 cv
320.572 85.5187 320.633 85.3488 320.703 85.0793 cv
320.662 84.9484 320.662 84.8185 320.673 84.6984 cv
320.703 84.5187 320.662 84.3791 320.693 84.1984 cv
320.703 84.1389 320.742 84.0285 320.742 84.0285 cv
320.643 83.8088 320.652 83.6584 320.673 83.4592 cv
320.713 83.2385 320.953 82.9787 321.263 82.9787 cv
321.533 82.9787 321.652 83.1086 321.633 83.2385 cv
321.623 83.3185 321.423 83.6584 321.393 83.8185 cv
321.303 84.0588 321.263 84.3088 321.242 84.5588 cv
321.193 84.9592 321.203 85.7492 321.293 85.7385 cv
321.492 85.7385 322.533 83.8791 322.572 83.5187 cv
322.604 83.3986 322.713 83.1984 322.822 83.0588 cv
322.822 82.9289 322.933 82.8391 322.963 82.7385 cv
323.033 82.6193 323.133 82.5285 323.303 82.5285 cv
323.753 82.5285 323.822 82.799 323.773 83.1086 cv
323.723 83.4787 323.613 83.8488 323.553 84.2287 cv
323.533 84.4387 323.633 85.6086 323.793 85.6086 cv
323.854 85.6086 324.063 85.3586 324.162 85.3293 cv
324.253 85.1486 324.593 84.759 324.843 84.3488 cv
324.893 84.3088 324.933 84.2492 324.953 84.1984 cv
325.013 84.0392 325.113 83.759 325.412 83.759 cv
325.572 83.759 325.613 83.8693 325.593 84.009 cv
325.572 84.0588 325.263 84.5285 325.143 84.6789 cv
cp
@
326.421 81.8088 mo
326.221 81.8088 326.031 81.6486 326.051 81.4787 cv
326.07 81.3391 326.291 81.1984 326.461 81.1984 cv
326.621 81.1984 326.791 81.3293 326.761 81.4689 cv
326.711 81.6389 326.631 81.8088 326.421 81.8088 cv
cp
327.32 85.259 mo
327.301 85.4689 326.311 86.509 326.061 86.6193 cv
325.931 86.6691 325.701 86.7785 325.551 86.7785 cv
325.371 86.7785 325.141 86.6984 325.101 86.5685 cv
324.99 86.3185 324.971 85.8986 325.031 85.6193 cv
325 85.4084 324.971 85.1691 324.94 84.9689 cv
324.94 84.9689 324.91 84.2785 324.971 83.7785 cv
325.011 83.549 325.101 83.3088 325.24 83.0588 cv
325.33 82.8986 325.57 82.7189 325.811 82.7189 cv
325.94 82.7189 326.051 82.7785 326.031 82.9191 cv
326.011 83.049 325.871 83.1291 325.83 83.259 cv
325.73 83.4689 325.69 83.9484 325.611 84.1193 cv
325.631 84.2492 325.641 84.3791 325.621 84.4992 cv
325.611 84.5685 325.57 84.6584 325.561 84.7492 cv
325.541 84.8791 325.631 85.0285 325.621 85.1584 cv
325.57 85.4689 li
325.561 85.549 325.611 85.9992 325.641 86.0793 cv
325.66 86.1193 325.73 86.2189 325.791 86.2189 cv
325.971 86.2189 326.301 85.8791 326.541 85.6789 cv
326.66 85.4484 327.23 84.7189 327.391 84.4387 cv
327.591 84.049 327.65 83.9592 327.9 83.9592 cv
328.121 83.9592 328.031 84.1584 327.951 84.3293 cv
327.801 84.6389 327.551 85.0793 327.32 85.259 cv
cp
f
326.421 81.8088 mo
326.221 81.8088 326.031 81.6486 326.051 81.4787 cv
326.07 81.3391 326.291 81.1984 326.461 81.1984 cv
326.621 81.1984 326.791 81.3293 326.761 81.4689 cv
326.711 81.6389 326.631 81.8088 326.421 81.8088 cv
cp
327.32 85.259 mo
327.301 85.4689 326.311 86.509 326.061 86.6193 cv
325.931 86.6691 325.701 86.7785 325.551 86.7785 cv
325.371 86.7785 325.141 86.6984 325.101 86.5685 cv
324.99 86.3185 324.971 85.8986 325.031 85.6193 cv
325 85.4084 324.971 85.1691 324.94 84.9689 cv
324.94 84.9689 324.91 84.2785 324.971 83.7785 cv
325.011 83.549 325.101 83.3088 325.24 83.0588 cv
325.33 82.8986 325.57 82.7189 325.811 82.7189 cv
325.94 82.7189 326.051 82.7785 326.031 82.9191 cv
326.011 83.049 325.871 83.1291 325.83 83.259 cv
325.73 83.4689 325.69 83.9484 325.611 84.1193 cv
325.631 84.2492 325.641 84.3791 325.621 84.4992 cv
325.611 84.5685 325.57 84.6584 325.561 84.7492 cv
325.541 84.8791 325.631 85.0285 325.621 85.1584 cv
325.57 85.4689 li
325.561 85.549 325.611 85.9992 325.641 86.0793 cv
325.66 86.1193 325.73 86.2189 325.791 86.2189 cv
325.971 86.2189 326.301 85.8791 326.541 85.6789 cv
326.66 85.4484 327.23 84.7189 327.391 84.4387 cv
327.591 84.049 327.65 83.9592 327.9 83.9592 cv
328.121 83.9592 328.031 84.1584 327.951 84.3293 cv
327.801 84.6389 327.551 85.0793 327.32 85.259 cv
cp
@
328.809 85.9992 mo
328.669 85.9992 328.289 86.3088 328.279 86.4289 cv
328.27 86.509 328.289 86.6486 328.359 86.7092 cv
328.389 86.7092 328.429 86.7287 328.459 86.7287 cv
328.648 86.7287 328.809 86.4992 328.828 86.3391 cv
328.839 86.2687 328.889 86.1291 328.908 86.049 cv
328.908 86.0285 328.879 85.9992 328.809 85.9992 cv
cp
330.229 84.9787 mo
330.158 85.1193 330.078 85.2189 329.988 85.3088 cv
329.779 85.4992 329.609 85.6291 329.469 85.7189 cv
329.459 85.799 329.439 86.1389 329.439 86.1691 cv
329.419 86.3185 329.328 86.7492 329.078 86.8293 cv
328.949 87.0187 328.639 87.1389 328.449 87.1389 cv
328.229 87.1389 327.648 86.759 327.669 86.6086 cv
327.729 86.2785 328.02 85.9289 328.309 85.799 cv
328.449 85.5793 328.749 85.4289 328.859 85.3693 cv
328.869 85.299 328.789 85.0392 328.77 84.7785 cv
328.669 84.6291 328.559 84.3693 328.52 84.2687 cv
328.469 84.1984 328.419 83.9689 328.309 83.9689 cv
328.27 83.9689 328.249 83.9689 328.229 84.0187 cv
328.129 84.1086 327.639 84.8293 327.52 84.9084 cv
327.469 85.009 327.419 85.1389 327.249 85.1789 cv
327.219 85.1984 327.209 85.2189 327.158 85.2189 cv
326.879 85.2385 326.988 84.9689 327.009 84.8586 cv
327.029 84.7287 327.729 83.8185 327.869 83.7385 cv
327.929 83.5588 328.059 83.4084 328.209 83.299 cv
328.568 82.9787 328.459 82.1486 329.119 82.1486 cv
329.289 82.1486 329.439 82.2189 329.439 82.3693 cv
329.439 82.6086 329.109 82.8185 329.02 82.9484 cv
329.039 83.049 328.919 83.4484 328.929 83.4787 cv
328.919 83.6789 328.979 83.9484 328.969 84.1193 cv
329.119 84.3088 329.158 84.6584 329.309 84.8791 cv
329.369 85.009 329.328 85.0793 329.509 85.0793 cv
329.609 85.0187 329.889 84.6789 330.158 84.4787 cv
330.259 84.2785 330.479 84.1086 330.488 84.0685 cv
330.589 83.9084 330.908 84.0392 330.908 84.2287 cv
330.908 84.3986 330.429 84.8391 330.229 84.9787 cv
cp
f
328.809 85.9992 mo
328.669 85.9992 328.289 86.3088 328.279 86.4289 cv
328.27 86.509 328.289 86.6486 328.359 86.7092 cv
328.389 86.7092 328.429 86.7287 328.459 86.7287 cv
328.648 86.7287 328.809 86.4992 328.828 86.3391 cv
328.839 86.2687 328.889 86.1291 328.908 86.049 cv
328.908 86.0285 328.879 85.9992 328.809 85.9992 cv
cp
330.229 84.9787 mo
330.158 85.1193 330.078 85.2189 329.988 85.3088 cv
329.779 85.4992 329.609 85.6291 329.469 85.7189 cv
329.459 85.799 329.439 86.1389 329.439 86.1691 cv
329.419 86.3185 329.328 86.7492 329.078 86.8293 cv
328.949 87.0187 328.639 87.1389 328.449 87.1389 cv
328.229 87.1389 327.648 86.759 327.669 86.6086 cv
327.729 86.2785 328.02 85.9289 328.309 85.799 cv
328.449 85.5793 328.749 85.4289 328.859 85.3693 cv
328.869 85.299 328.789 85.0392 328.77 84.7785 cv
328.669 84.6291 328.559 84.3693 328.52 84.2687 cv
328.469 84.1984 328.419 83.9689 328.309 83.9689 cv
328.27 83.9689 328.249 83.9689 328.229 84.0187 cv
328.129 84.1086 327.639 84.8293 327.52 84.9084 cv
327.469 85.009 327.419 85.1389 327.249 85.1789 cv
327.219 85.1984 327.209 85.2189 327.158 85.2189 cv
326.879 85.2385 326.988 84.9689 327.009 84.8586 cv
327.029 84.7287 327.729 83.8185 327.869 83.7385 cv
327.929 83.5588 328.059 83.4084 328.209 83.299 cv
328.568 82.9787 328.459 82.1486 329.119 82.1486 cv
329.289 82.1486 329.439 82.2189 329.439 82.3693 cv
329.439 82.6086 329.109 82.8185 329.02 82.9484 cv
329.039 83.049 328.919 83.4484 328.929 83.4787 cv
328.919 83.6789 328.979 83.9484 328.969 84.1193 cv
329.119 84.3088 329.158 84.6584 329.309 84.8791 cv
329.369 85.009 329.328 85.0793 329.509 85.0793 cv
329.609 85.0187 329.889 84.6789 330.158 84.4787 cv
330.259 84.2785 330.479 84.1086 330.488 84.0685 cv
330.589 83.9084 330.908 84.0392 330.908 84.2287 cv
330.908 84.3986 330.429 84.8391 330.229 84.9787 cv
cp
@
332.127 81.8088 mo
331.927 81.8088 331.736 81.6486 331.757 81.4787 cv
331.777 81.3391 331.996 81.1984 332.166 81.1984 cv
332.326 81.1984 332.496 81.3293 332.467 81.4689 cv
332.416 81.6389 332.337 81.8088 332.127 81.8088 cv
cp
333.027 85.259 mo
333.007 85.4689 332.017 86.509 331.767 86.6193 cv
331.637 86.6691 331.406 86.7785 331.257 86.7785 cv
331.076 86.7785 330.847 86.6984 330.807 86.5685 cv
330.697 86.3185 330.677 85.8986 330.736 85.6193 cv
330.707 85.4084 330.677 85.1691 330.646 84.9689 cv
330.646 84.9689 330.617 84.2785 330.677 83.7785 cv
330.717 83.549 330.807 83.3088 330.947 83.0588 cv
331.037 82.8986 331.277 82.7189 331.517 82.7189 cv
331.646 82.7189 331.757 82.7785 331.736 82.9191 cv
331.717 83.049 331.576 83.1291 331.537 83.259 cv
331.437 83.4689 331.396 83.9484 331.316 84.1193 cv
331.337 84.2492 331.347 84.3791 331.326 84.4992 cv
331.316 84.5685 331.277 84.6584 331.267 84.7492 cv
331.246 84.8791 331.337 85.0285 331.326 85.1584 cv
331.277 85.4689 li
331.267 85.549 331.316 85.9992 331.347 86.0793 cv
331.367 86.1193 331.437 86.2189 331.496 86.2189 cv
331.677 86.2189 332.007 85.8791 332.246 85.6789 cv
332.367 85.4484 332.937 84.7189 333.097 84.4387 cv
333.297 84.049 333.357 83.9592 333.607 83.9592 cv
333.826 83.9592 333.736 84.1584 333.656 84.3293 cv
333.507 84.6389 333.257 85.0793 333.027 85.259 cv
cp
f
332.127 81.8088 mo
331.927 81.8088 331.736 81.6486 331.757 81.4787 cv
331.777 81.3391 331.996 81.1984 332.166 81.1984 cv
332.326 81.1984 332.496 81.3293 332.467 81.4689 cv
332.416 81.6389 332.337 81.8088 332.127 81.8088 cv
cp
333.027 85.259 mo
333.007 85.4689 332.017 86.509 331.767 86.6193 cv
331.637 86.6691 331.406 86.7785 331.257 86.7785 cv
331.076 86.7785 330.847 86.6984 330.807 86.5685 cv
330.697 86.3185 330.677 85.8986 330.736 85.6193 cv
330.707 85.4084 330.677 85.1691 330.646 84.9689 cv
330.646 84.9689 330.617 84.2785 330.677 83.7785 cv
330.717 83.549 330.807 83.3088 330.947 83.0588 cv
331.037 82.8986 331.277 82.7189 331.517 82.7189 cv
331.646 82.7189 331.757 82.7785 331.736 82.9191 cv
331.717 83.049 331.576 83.1291 331.537 83.259 cv
331.437 83.4689 331.396 83.9484 331.316 84.1193 cv
331.337 84.2492 331.347 84.3791 331.326 84.4992 cv
331.316 84.5685 331.277 84.6584 331.267 84.7492 cv
331.246 84.8791 331.337 85.0285 331.326 85.1584 cv
331.277 85.4689 li
331.267 85.549 331.316 85.9992 331.347 86.0793 cv
331.367 86.1193 331.437 86.2189 331.496 86.2189 cv
331.677 86.2189 332.007 85.8791 332.246 85.6789 cv
332.367 85.4484 332.937 84.7189 333.097 84.4387 cv
333.297 84.049 333.357 83.9592 333.607 83.9592 cv
333.826 83.9592 333.736 84.1584 333.656 84.3293 cv
333.507 84.6389 333.257 85.0793 333.027 85.259 cv
cp
@
339.146 84.509 mo
339.097 84.5685 339.097 84.6389 339.057 84.7092 cv
338.957 84.8791 337.937 86.049 337.746 86.0988 cv
337.677 86.299 337.146 86.6389 336.986 86.6584 cv
336.947 86.6691 336.797 86.7092 336.767 86.7189 cv
336.547 86.7092 336.437 86.3391 336.387 86.1691 cv
336.377 86.0988 336.337 85.8986 336.347 85.7687 cv
336.357 85.6984 336.357 85.5588 336.437 85.4191 cv
336.367 85.2492 336.357 85.1193 336.377 84.9592 cv
336.417 84.6691 li
336.467 84.3791 336.406 84.0187 336.367 83.7287 cv
336.347 83.6789 336.287 83.6584 336.236 83.6584 cv
336.156 83.6584 336.057 83.7385 335.986 83.799 cv
335.496 84.1789 335.367 84.5588 335.167 84.7785 cv
335.177 84.9689 335.097 85.1389 334.996 85.3586 cv
334.807 85.7785 334.656 86.2092 334.496 86.6389 cv
334.467 86.7385 334.316 86.8293 334.197 86.8293 cv
334.037 86.8293 333.947 86.7287 333.967 86.5793 cv
333.967 86.5392 334.007 86.4787 334.017 86.4387 cv
334.066 86.1291 334.097 85.6486 334.217 85.4689 cv
334.137 85.3088 334.167 85.1486 334.187 85.009 cv
334.236 84.6984 li
334.257 84.5285 334.277 84.1691 334.267 83.9787 cv
334.257 83.8791 334.187 83.7092 334.037 83.7092 cv
333.867 83.7092 333.566 84.5392 333.387 84.5392 cv
333.267 84.5392 333.107 84.4191 333.117 84.3185 cv
333.146 84.1789 333.316 83.6086 333.547 83.4787 cv
333.576 83.3088 333.847 83.0793 334.017 83.0793 cv
334.076 83.0793 334.197 83.1193 334.246 83.1291 cv
334.767 83.3391 334.607 83.8488 334.837 84.1086 cv
334.837 84.1291 334.877 84.1389 334.896 84.1389 cv
335.037 84.1389 335.587 83.2492 336.316 83.2385 cv
336.357 83.2385 336.387 83.2492 336.417 83.259 cv
336.967 83.3791 336.857 83.4387 336.986 83.8088 cv
337.017 83.8986 337.066 83.9689 337.057 84.0793 cv
337.037 84.2785 336.967 84.4787 336.937 84.6789 cv
336.917 84.7687 336.977 85.8586 336.996 85.9592 cv
336.996 85.9992 337.037 86.0285 337.087 86.0285 cv
337.307 86.0285 337.986 85.2092 338.146 85.1486 cv
338.197 84.9289 338.667 84.3293 338.697 84.259 cv
338.757 84.1291 338.847 83.8693 339.037 83.8088 cv
339.097 83.7785 339.187 83.7687 339.246 83.759 cv
339.377 83.759 339.507 83.8293 339.486 83.9592 cv
339.477 83.9992 339.177 84.4289 339.146 84.509 cv
cp
f
339.146 84.509 mo
339.097 84.5685 339.097 84.6389 339.057 84.7092 cv
338.957 84.8791 337.937 86.049 337.746 86.0988 cv
337.677 86.299 337.146 86.6389 336.986 86.6584 cv
336.947 86.6691 336.797 86.7092 336.767 86.7189 cv
336.547 86.7092 336.437 86.3391 336.387 86.1691 cv
336.377 86.0988 336.337 85.8986 336.347 85.7687 cv
336.357 85.6984 336.357 85.5588 336.437 85.4191 cv
336.367 85.2492 336.357 85.1193 336.377 84.9592 cv
336.417 84.6691 li
336.467 84.3791 336.406 84.0187 336.367 83.7287 cv
336.347 83.6789 336.287 83.6584 336.236 83.6584 cv
336.156 83.6584 336.057 83.7385 335.986 83.799 cv
335.496 84.1789 335.367 84.5588 335.167 84.7785 cv
335.177 84.9689 335.097 85.1389 334.996 85.3586 cv
334.807 85.7785 334.656 86.2092 334.496 86.6389 cv
334.467 86.7385 334.316 86.8293 334.197 86.8293 cv
334.037 86.8293 333.947 86.7287 333.967 86.5793 cv
333.967 86.5392 334.007 86.4787 334.017 86.4387 cv
334.066 86.1291 334.097 85.6486 334.217 85.4689 cv
334.137 85.3088 334.167 85.1486 334.187 85.009 cv
334.236 84.6984 li
334.257 84.5285 334.277 84.1691 334.267 83.9787 cv
334.257 83.8791 334.187 83.7092 334.037 83.7092 cv
333.867 83.7092 333.566 84.5392 333.387 84.5392 cv
333.267 84.5392 333.107 84.4191 333.117 84.3185 cv
333.146 84.1789 333.316 83.6086 333.547 83.4787 cv
333.576 83.3088 333.847 83.0793 334.017 83.0793 cv
334.076 83.0793 334.197 83.1193 334.246 83.1291 cv
334.767 83.3391 334.607 83.8488 334.837 84.1086 cv
334.837 84.1291 334.877 84.1389 334.896 84.1389 cv
335.037 84.1389 335.587 83.2492 336.316 83.2385 cv
336.357 83.2385 336.387 83.2492 336.417 83.259 cv
336.967 83.3791 336.857 83.4387 336.986 83.8088 cv
337.017 83.8986 337.066 83.9689 337.057 84.0793 cv
337.037 84.2785 336.967 84.4787 336.937 84.6789 cv
336.917 84.7687 336.977 85.8586 336.996 85.9592 cv
336.996 85.9992 337.037 86.0285 337.087 86.0285 cv
337.307 86.0285 337.986 85.2092 338.146 85.1486 cv
338.197 84.9289 338.667 84.3293 338.697 84.259 cv
338.757 84.1291 338.847 83.8693 339.037 83.8088 cv
339.097 83.7785 339.187 83.7687 339.246 83.759 cv
339.377 83.759 339.507 83.8293 339.486 83.9592 cv
339.477 83.9992 339.177 84.4289 339.146 84.509 cv
cp
@
339.906 83.2092 mo
339.856 83.2092 339.786 83.2385 339.756 83.299 cv
339.606 83.5588 339.406 84.299 339.336 84.5793 cv
339.326 84.6486 339.356 84.7385 339.437 84.7385 cv
339.586 84.7385 339.906 84.2385 339.986 84.1486 cv
340.017 83.9689 340.106 83.6984 340.156 83.4787 cv
340.166 83.3488 340.137 83.2092 339.906 83.2092 cv
cp
341.866 84.9289 mo
341.486 85.3088 341.006 86.1086 340.786 86.2287 cv
340.606 86.509 340.366 86.6789 340.096 86.7687 cv
339.986 86.8088 339.906 86.8791 339.807 86.9191 cv
339.696 86.9592 339.416 86.9992 339.297 87.009 cv
338.896 87.009 338.776 86.6291 338.736 86.3586 cv
338.727 86.2687 338.676 86.1789 338.656 86.0988 cv
338.637 86.009 338.656 85.9191 338.676 85.8391 cv
338.666 85.6584 338.627 85.4787 338.656 85.3185 cv
338.687 85.0392 338.736 84.6984 338.856 84.4484 cv
338.856 84.2492 339.116 83.549 339.356 83.1193 cv
339.396 83.0285 339.496 82.9592 339.566 82.8693 cv
339.676 82.7287 339.926 82.5392 340.137 82.5392 cv
340.566 82.5392 340.776 83.0187 340.707 83.4289 cv
340.627 83.9084 340.406 84.1789 340.236 84.509 cv
340.217 84.5588 340.086 84.6691 340.026 84.6984 cv
339.926 84.8693 339.756 84.9787 339.477 85.0988 cv
339.437 85.1193 339.396 85.1486 339.366 85.1789 cv
339.316 85.2287 339.256 85.4484 339.236 85.509 cv
339.217 85.6584 339.326 86.4992 339.576 86.4992 cv
339.756 86.4992 340.096 86.3391 340.227 86.2189 cv
340.437 85.9992 340.687 85.6486 340.967 85.4387 cv
341.106 85.1486 341.467 84.7687 341.517 84.6984 cv
341.576 84.6193 341.566 84.509 341.627 84.4289 cv
341.707 84.3185 341.856 84.2189 341.996 84.2189 cv
342.116 84.2189 342.236 84.3088 342.217 84.4084 cv
342.187 84.6389 342.076 84.7385 341.866 84.9289 cv
cp
f
339.906 83.2092 mo
339.856 83.2092 339.786 83.2385 339.756 83.299 cv
339.606 83.5588 339.406 84.299 339.336 84.5793 cv
339.326 84.6486 339.356 84.7385 339.437 84.7385 cv
339.586 84.7385 339.906 84.2385 339.986 84.1486 cv
340.017 83.9689 340.106 83.6984 340.156 83.4787 cv
340.166 83.3488 340.137 83.2092 339.906 83.2092 cv
cp
341.866 84.9289 mo
341.486 85.3088 341.006 86.1086 340.786 86.2287 cv
340.606 86.509 340.366 86.6789 340.096 86.7687 cv
339.986 86.8088 339.906 86.8791 339.807 86.9191 cv
339.696 86.9592 339.416 86.9992 339.297 87.009 cv
338.896 87.009 338.776 86.6291 338.736 86.3586 cv
338.727 86.2687 338.676 86.1789 338.656 86.0988 cv
338.637 86.009 338.656 85.9191 338.676 85.8391 cv
338.666 85.6584 338.627 85.4787 338.656 85.3185 cv
338.687 85.0392 338.736 84.6984 338.856 84.4484 cv
338.856 84.2492 339.116 83.549 339.356 83.1193 cv
339.396 83.0285 339.496 82.9592 339.566 82.8693 cv
339.676 82.7287 339.926 82.5392 340.137 82.5392 cv
340.566 82.5392 340.776 83.0187 340.707 83.4289 cv
340.627 83.9084 340.406 84.1789 340.236 84.509 cv
340.217 84.5588 340.086 84.6691 340.026 84.6984 cv
339.926 84.8693 339.756 84.9787 339.477 85.0988 cv
339.437 85.1193 339.396 85.1486 339.366 85.1789 cv
339.316 85.2287 339.256 85.4484 339.236 85.509 cv
339.217 85.6584 339.326 86.4992 339.576 86.4992 cv
339.756 86.4992 340.096 86.3391 340.227 86.2189 cv
340.437 85.9992 340.687 85.6486 340.967 85.4387 cv
341.106 85.1486 341.467 84.7687 341.517 84.6984 cv
341.576 84.6193 341.566 84.509 341.627 84.4289 cv
341.707 84.3185 341.856 84.2189 341.996 84.2189 cv
342.116 84.2189 342.236 84.3088 342.217 84.4084 cv
342.187 84.6389 342.076 84.7385 341.866 84.9289 cv
cp
@
346.776 80.8185 mo
346.557 81.1691 346.366 81.5392 346.207 81.9084 cv
346.116 82.1193 346.017 82.3293 345.957 82.549 cv
345.836 82.8185 345.797 83.0988 345.687 83.3586 cv
345.637 83.5793 345.406 84.0988 345.387 84.299 cv
345.336 84.6984 li
345.297 84.9084 345.156 85.1086 345.137 85.3185 cv
345.096 85.5392 345.096 85.8488 345.207 86.049 cv
345.286 86.1984 345.517 86.259 345.486 86.4387 cv
345.457 86.5793 345.196 86.7287 345.017 86.7287 cv
344.946 86.7287 344.767 86.6691 344.717 86.6389 cv
344.467 86.4689 344.517 86.1389 344.486 85.8986 cv
344.486 85.7687 344.506 85.6389 344.517 85.509 cv
344.547 85.4084 344.566 85.3185 344.586 85.2189 cv
344.616 85.0793 344.717 84.8986 344.786 84.7687 cv
344.707 84.6789 344.786 84.4484 344.807 84.3791 cv
344.816 84.2492 344.877 84.1193 344.896 84.009 cv
345.066 83.4484 345.217 82.8791 345.416 82.3293 cv
345.557 81.9592 345.756 81.6086 345.906 81.2385 cv
345.937 81.1789 345.937 81.1193 345.967 81.0685 cv
346.036 80.8986 346.086 80.7189 346.196 80.5588 cv
346.276 80.4689 346.446 80.4484 346.557 80.4484 cv
346.746 80.4484 346.877 80.5187 346.846 80.6691 cv
346.846 80.7092 346.797 80.7785 346.776 80.8185 cv
cp
f
346.776 80.8185 mo
346.557 81.1691 346.366 81.5392 346.207 81.9084 cv
346.116 82.1193 346.017 82.3293 345.957 82.549 cv
345.836 82.8185 345.797 83.0988 345.687 83.3586 cv
345.637 83.5793 345.406 84.0988 345.387 84.299 cv
345.336 84.6984 li
345.297 84.9084 345.156 85.1086 345.137 85.3185 cv
345.096 85.5392 345.096 85.8488 345.207 86.049 cv
345.286 86.1984 345.517 86.259 345.486 86.4387 cv
345.457 86.5793 345.196 86.7287 345.017 86.7287 cv
344.946 86.7287 344.767 86.6691 344.717 86.6389 cv
344.467 86.4689 344.517 86.1389 344.486 85.8986 cv
344.486 85.7687 344.506 85.6389 344.517 85.509 cv
344.547 85.4084 344.566 85.3185 344.586 85.2189 cv
344.616 85.0793 344.717 84.8986 344.786 84.7687 cv
344.707 84.6789 344.786 84.4484 344.807 84.3791 cv
344.816 84.2492 344.877 84.1193 344.896 84.009 cv
345.066 83.4484 345.217 82.8791 345.416 82.3293 cv
345.557 81.9592 345.756 81.6086 345.906 81.2385 cv
345.937 81.1789 345.937 81.1193 345.967 81.0685 cv
346.036 80.8986 346.086 80.7189 346.196 80.5588 cv
346.276 80.4689 346.446 80.4484 346.557 80.4484 cv
346.746 80.4484 346.877 80.5187 346.846 80.6691 cv
346.846 80.7092 346.797 80.7785 346.776 80.8185 cv
cp
@
352.278 84.509 mo
352.229 84.5685 352.229 84.6389 352.188 84.7092 cv
352.088 84.8791 351.068 86.049 350.878 86.0988 cv
350.809 86.299 350.278 86.6389 350.118 86.6584 cv
350.078 86.6691 349.928 86.7092 349.898 86.7189 cv
349.678 86.7092 349.568 86.3391 349.518 86.1691 cv
349.508 86.0988 349.469 85.8986 349.479 85.7687 cv
349.488 85.6984 349.488 85.5588 349.568 85.4191 cv
349.498 85.2492 349.488 85.1193 349.508 84.9592 cv
349.548 84.6691 li
349.598 84.3791 349.538 84.0187 349.498 83.7287 cv
349.479 83.6789 349.418 83.6584 349.368 83.6584 cv
349.288 83.6584 349.188 83.7385 349.118 83.799 cv
348.628 84.1789 348.498 84.5588 348.298 84.7785 cv
348.309 84.9689 348.229 85.1389 348.128 85.3586 cv
347.938 85.7785 347.788 86.2092 347.628 86.6389 cv
347.598 86.7385 347.448 86.8293 347.328 86.8293 cv
347.168 86.8293 347.078 86.7287 347.098 86.5793 cv
347.098 86.5392 347.139 86.4787 347.148 86.4387 cv
347.198 86.1291 347.229 85.6486 347.348 85.4689 cv
347.268 85.3088 347.298 85.1486 347.318 85.009 cv
347.368 84.6984 li
347.389 84.5285 347.408 84.1691 347.398 83.9787 cv
347.389 83.8791 347.318 83.7092 347.168 83.7092 cv
346.998 83.7092 346.698 84.5392 346.518 84.5392 cv
346.398 84.5392 346.238 84.4191 346.248 84.3185 cv
346.278 84.1789 346.448 83.6086 346.678 83.4787 cv
346.708 83.3088 346.979 83.0793 347.148 83.0793 cv
347.208 83.0793 347.328 83.1193 347.378 83.1291 cv
347.898 83.3391 347.738 83.8488 347.969 84.1086 cv
347.969 84.1291 348.008 84.1389 348.028 84.1389 cv
348.168 84.1389 348.719 83.2492 349.448 83.2385 cv
349.488 83.2385 349.518 83.2492 349.548 83.259 cv
350.098 83.3791 349.988 83.4387 350.118 83.8088 cv
350.148 83.8986 350.198 83.9689 350.188 84.0793 cv
350.168 84.2785 350.098 84.4787 350.068 84.6789 cv
350.048 84.7687 350.107 85.8586 350.128 85.9592 cv
350.128 85.9992 350.168 86.0285 350.219 86.0285 cv
350.438 86.0285 351.118 85.2092 351.278 85.1486 cv
351.328 84.9289 351.798 84.3293 351.828 84.259 cv
351.889 84.1291 351.979 83.8693 352.168 83.8088 cv
352.229 83.7785 352.318 83.7687 352.378 83.759 cv
352.508 83.759 352.639 83.8293 352.618 83.9592 cv
352.607 83.9992 352.309 84.4289 352.278 84.509 cv
cp
f
352.278 84.509 mo
352.229 84.5685 352.229 84.6389 352.188 84.7092 cv
352.088 84.8791 351.068 86.049 350.878 86.0988 cv
350.809 86.299 350.278 86.6389 350.118 86.6584 cv
350.078 86.6691 349.928 86.7092 349.898 86.7189 cv
349.678 86.7092 349.568 86.3391 349.518 86.1691 cv
349.508 86.0988 349.469 85.8986 349.479 85.7687 cv
349.488 85.6984 349.488 85.5588 349.568 85.4191 cv
349.498 85.2492 349.488 85.1193 349.508 84.9592 cv
349.548 84.6691 li
349.598 84.3791 349.538 84.0187 349.498 83.7287 cv
349.479 83.6789 349.418 83.6584 349.368 83.6584 cv
349.288 83.6584 349.188 83.7385 349.118 83.799 cv
348.628 84.1789 348.498 84.5588 348.298 84.7785 cv
348.309 84.9689 348.229 85.1389 348.128 85.3586 cv
347.938 85.7785 347.788 86.2092 347.628 86.6389 cv
347.598 86.7385 347.448 86.8293 347.328 86.8293 cv
347.168 86.8293 347.078 86.7287 347.098 86.5793 cv
347.098 86.5392 347.139 86.4787 347.148 86.4387 cv
347.198 86.1291 347.229 85.6486 347.348 85.4689 cv
347.268 85.3088 347.298 85.1486 347.318 85.009 cv
347.368 84.6984 li
347.389 84.5285 347.408 84.1691 347.398 83.9787 cv
347.389 83.8791 347.318 83.7092 347.168 83.7092 cv
346.998 83.7092 346.698 84.5392 346.518 84.5392 cv
346.398 84.5392 346.238 84.4191 346.248 84.3185 cv
346.278 84.1789 346.448 83.6086 346.678 83.4787 cv
346.708 83.3088 346.979 83.0793 347.148 83.0793 cv
347.208 83.0793 347.328 83.1193 347.378 83.1291 cv
347.898 83.3391 347.738 83.8488 347.969 84.1086 cv
347.969 84.1291 348.008 84.1389 348.028 84.1389 cv
348.168 84.1389 348.719 83.2492 349.448 83.2385 cv
349.488 83.2385 349.518 83.2492 349.548 83.259 cv
350.098 83.3791 349.988 83.4387 350.118 83.8088 cv
350.148 83.8986 350.198 83.9689 350.188 84.0793 cv
350.168 84.2785 350.098 84.4787 350.068 84.6789 cv
350.048 84.7687 350.107 85.8586 350.128 85.9592 cv
350.128 85.9992 350.168 86.0285 350.219 86.0285 cv
350.438 86.0285 351.118 85.2092 351.278 85.1486 cv
351.328 84.9289 351.798 84.3293 351.828 84.259 cv
351.889 84.1291 351.979 83.8693 352.168 83.8088 cv
352.229 83.7785 352.318 83.7687 352.378 83.759 cv
352.508 83.759 352.639 83.8293 352.618 83.9592 cv
352.607 83.9992 352.309 84.4289 352.278 84.509 cv
cp
@
353.188 85.9992 mo
353.048 85.9992 352.668 86.3088 352.658 86.4289 cv
352.648 86.509 352.668 86.6486 352.738 86.7092 cv
352.768 86.7092 352.808 86.7287 352.838 86.7287 cv
353.027 86.7287 353.188 86.4992 353.207 86.3391 cv
353.218 86.2687 353.268 86.1291 353.287 86.049 cv
353.287 86.0285 353.258 85.9992 353.188 85.9992 cv
cp
354.607 84.9787 mo
354.537 85.1193 354.457 85.2189 354.367 85.3088 cv
354.158 85.4992 353.988 85.6291 353.848 85.7189 cv
353.838 85.799 353.818 86.1389 353.818 86.1691 cv
353.798 86.3185 353.707 86.7492 353.457 86.8293 cv
353.328 87.0187 353.018 87.1389 352.828 87.1389 cv
352.607 87.1389 352.027 86.759 352.048 86.6086 cv
352.107 86.2785 352.398 85.9289 352.688 85.799 cv
352.828 85.5793 353.128 85.4289 353.238 85.3693 cv
353.248 85.299 353.168 85.0392 353.148 84.7785 cv
353.048 84.6291 352.938 84.3693 352.898 84.2687 cv
352.848 84.1984 352.798 83.9689 352.688 83.9689 cv
352.648 83.9689 352.628 83.9689 352.607 84.0187 cv
352.508 84.1086 352.018 84.8293 351.898 84.9084 cv
351.848 85.009 351.798 85.1389 351.628 85.1789 cv
351.598 85.1984 351.588 85.2189 351.537 85.2189 cv
351.258 85.2385 351.367 84.9689 351.388 84.8586 cv
351.408 84.7287 352.107 83.8185 352.248 83.7385 cv
352.308 83.5588 352.438 83.4084 352.588 83.299 cv
352.947 82.9787 352.838 82.1486 353.498 82.1486 cv
353.668 82.1486 353.818 82.2189 353.818 82.3693 cv
353.818 82.6086 353.488 82.8185 353.398 82.9484 cv
353.418 83.049 353.298 83.4484 353.308 83.4787 cv
353.298 83.6789 353.357 83.9484 353.348 84.1193 cv
353.498 84.3088 353.537 84.6584 353.688 84.8791 cv
353.748 85.009 353.707 85.0793 353.888 85.0793 cv
353.988 85.0187 354.268 84.6789 354.537 84.4787 cv
354.638 84.2785 354.857 84.1086 354.867 84.0685 cv
354.968 83.9084 355.287 84.0392 355.287 84.2287 cv
355.287 84.3986 354.808 84.8391 354.607 84.9787 cv
cp
f
353.188 85.9992 mo
353.048 85.9992 352.668 86.3088 352.658 86.4289 cv
352.648 86.509 352.668 86.6486 352.738 86.7092 cv
352.768 86.7092 352.808 86.7287 352.838 86.7287 cv
353.027 86.7287 353.188 86.4992 353.207 86.3391 cv
353.218 86.2687 353.268 86.1291 353.287 86.049 cv
353.287 86.0285 353.258 85.9992 353.188 85.9992 cv
cp
354.607 84.9787 mo
354.537 85.1193 354.457 85.2189 354.367 85.3088 cv
354.158 85.4992 353.988 85.6291 353.848 85.7189 cv
353.838 85.799 353.818 86.1389 353.818 86.1691 cv
353.798 86.3185 353.707 86.7492 353.457 86.8293 cv
353.328 87.0187 353.018 87.1389 352.828 87.1389 cv
352.607 87.1389 352.027 86.759 352.048 86.6086 cv
352.107 86.2785 352.398 85.9289 352.688 85.799 cv
352.828 85.5793 353.128 85.4289 353.238 85.3693 cv
353.248 85.299 353.168 85.0392 353.148 84.7785 cv
353.048 84.6291 352.938 84.3693 352.898 84.2687 cv
352.848 84.1984 352.798 83.9689 352.688 83.9689 cv
352.648 83.9689 352.628 83.9689 352.607 84.0187 cv
352.508 84.1086 352.018 84.8293 351.898 84.9084 cv
351.848 85.009 351.798 85.1389 351.628 85.1789 cv
351.598 85.1984 351.588 85.2189 351.537 85.2189 cv
351.258 85.2385 351.367 84.9689 351.388 84.8586 cv
351.408 84.7287 352.107 83.8185 352.248 83.7385 cv
352.308 83.5588 352.438 83.4084 352.588 83.299 cv
352.947 82.9787 352.838 82.1486 353.498 82.1486 cv
353.668 82.1486 353.818 82.2189 353.818 82.3693 cv
353.818 82.6086 353.488 82.8185 353.398 82.9484 cv
353.418 83.049 353.298 83.4484 353.308 83.4787 cv
353.298 83.6789 353.357 83.9484 353.348 84.1193 cv
353.498 84.3088 353.537 84.6584 353.688 84.8791 cv
353.748 85.009 353.707 85.0793 353.888 85.0793 cv
353.988 85.0187 354.268 84.6789 354.537 84.4787 cv
354.638 84.2785 354.857 84.1086 354.867 84.0685 cv
354.968 83.9084 355.287 84.0392 355.287 84.2287 cv
355.287 84.3986 354.808 84.8391 354.607 84.9787 cv
cp
@
355.058 87.0392 mo
354.798 87.0392 354.498 87.9992 354.478 88.2092 cv
354.458 88.3088 354.478 88.4387 354.648 88.4484 cv
354.708 88.4484 354.748 88.4191 354.808 88.3693 cv
354.857 88.2092 354.947 88.0392 355.008 87.8693 cv
355.058 87.7287 355.138 87.6584 355.158 87.4689 cv
355.197 87.3586 355.248 87.0392 355.058 87.0392 cv
cp
360.058 84.3391 mo
360.018 84.4689 359.928 84.6193 359.918 84.759 cv
359.898 84.8586 359.738 85.1193 359.678 85.2385 cv
359.537 85.4992 359.378 85.7492 359.138 85.8586 cv
358.998 86.0285 358.798 86.1291 358.598 86.1389 cv
358.328 86.1389 358.107 86.0392 357.857 86.0392 cv
357.508 86.0392 357.287 86.4592 356.908 86.4484 cv
356.878 86.4484 356.748 86.4191 356.718 86.4084 cv
356.548 86.3185 356.578 86.0793 356.617 85.9289 cv
356.578 85.7287 356.558 85.4689 356.678 85.2687 cv
356.718 85.1789 357.138 85.1291 357.238 85.1291 cv
357.338 85.1291 357.418 85.1691 357.508 85.1584 cv
357.718 85.1584 357.878 84.6984 357.908 84.5685 cv
357.928 84.4787 357.888 84.3488 357.888 84.259 cv
357.918 84.0588 358.008 83.3986 357.738 83.299 cv
357.688 83.2687 357.357 83.1984 357.328 83.1789 cv
357.248 83.1789 357.178 83.2189 357.107 83.2785 cv
356.938 83.4787 356.758 83.7092 356.678 83.9387 cv
356.638 84.049 356.488 84.1584 356.418 84.259 cv
356.348 84.3791 355.918 85.4484 355.908 85.5392 cv
355.878 85.7385 355.928 85.9289 355.918 86.1193 cv
355.898 86.2385 355.818 86.3986 355.758 86.5187 cv
355.758 86.7189 355.777 86.8791 355.758 87.0685 cv
355.678 87.6691 355.388 88.2287 355.117 88.8185 cv
355.048 88.9592 354.888 89.0793 354.697 89.0793 cv
354.277 89.0793 354.078 88.6193 354.018 88.3391 cv
353.988 88.2092 354.008 88.0285 354.027 87.8693 cv
354.048 87.7385 354.138 87.6193 354.228 87.509 cv
354.258 87.3293 354.348 87.1389 354.458 86.9787 cv
354.678 86.6291 355.238 85.7189 355.287 85.3293 cv
355.298 85.1789 355.277 85.0187 355.277 84.8693 cv
355.258 84.7092 355.287 84.549 355.248 84.3693 cv
355.188 84.1584 355.048 84.4689 354.758 84.3586 cv
354.578 84.299 354.777 84.1193 354.848 84.0187 cv
354.908 83.9484 355.027 83.7492 355.098 83.5588 cv
355.138 83.4289 355.148 83.3088 355.178 83.1486 cv
355.218 82.9084 355.308 82.7092 355.558 82.7092 cv
355.738 82.7092 355.888 82.7785 355.848 82.9387 cv
355.838 83.009 355.798 83.0588 355.798 83.1291 cv
355.787 83.2092 355.818 83.2687 355.808 83.3488 cv
355.808 83.3488 355.708 84.0285 355.938 84.0285 cv
356.058 84.0285 356.107 83.8488 356.208 83.759 cv
356.228 83.5793 356.328 83.4689 356.408 83.3293 cv
356.478 83.2092 356.728 82.9191 356.857 82.8488 cv
356.978 82.799 357.178 82.759 357.298 82.7492 cv
357.378 82.7492 357.438 82.7492 357.518 82.759 cv
357.558 82.7687 357.658 82.8088 357.697 82.8088 cv
357.898 82.8088 358.037 82.799 358.208 82.8391 cv
358.458 82.8986 358.527 83.0988 358.518 83.2785 cv
358.527 83.3791 358.558 83.8488 358.548 83.9387 cv
358.548 83.9387 358.548 84.2287 358.488 84.3791 cv
358.508 84.6086 358.408 84.6691 358.378 84.7785 cv
358.318 84.9592 358.258 85.1486 358.228 85.3293 cv
358.218 85.4689 358.308 85.6486 358.518 85.6486 cv
358.688 85.6486 358.857 85.4992 358.938 85.3986 cv
359.128 85.0793 359.287 84.7385 359.488 84.5285 cv
359.518 84.3693 359.598 84.299 359.678 84.1291 cv
359.718 84.0187 359.787 83.9084 359.838 83.799 cv
359.878 83.7189 359.938 83.6486 360.048 83.6389 cv
360.218 83.6389 360.238 83.799 360.218 83.9191 cv
360.178 84.0685 360.107 84.2189 360.058 84.3391 cv
cp
f
355.058 87.0392 mo
354.798 87.0392 354.498 87.9992 354.478 88.2092 cv
354.458 88.3088 354.478 88.4387 354.648 88.4484 cv
354.708 88.4484 354.748 88.4191 354.808 88.3693 cv
354.857 88.2092 354.947 88.0392 355.008 87.8693 cv
355.058 87.7287 355.138 87.6584 355.158 87.4689 cv
355.197 87.3586 355.248 87.0392 355.058 87.0392 cv
cp
360.058 84.3391 mo
360.018 84.4689 359.928 84.6193 359.918 84.759 cv
359.898 84.8586 359.738 85.1193 359.678 85.2385 cv
359.537 85.4992 359.378 85.7492 359.138 85.8586 cv
358.998 86.0285 358.798 86.1291 358.598 86.1389 cv
358.328 86.1389 358.107 86.0392 357.857 86.0392 cv
357.508 86.0392 357.287 86.4592 356.908 86.4484 cv
356.878 86.4484 356.748 86.4191 356.718 86.4084 cv
356.548 86.3185 356.578 86.0793 356.617 85.9289 cv
356.578 85.7287 356.558 85.4689 356.678 85.2687 cv
356.718 85.1789 357.138 85.1291 357.238 85.1291 cv
357.338 85.1291 357.418 85.1691 357.508 85.1584 cv
357.718 85.1584 357.878 84.6984 357.908 84.5685 cv
357.928 84.4787 357.888 84.3488 357.888 84.259 cv
357.918 84.0588 358.008 83.3986 357.738 83.299 cv
357.688 83.2687 357.357 83.1984 357.328 83.1789 cv
357.248 83.1789 357.178 83.2189 357.107 83.2785 cv
356.938 83.4787 356.758 83.7092 356.678 83.9387 cv
356.638 84.049 356.488 84.1584 356.418 84.259 cv
356.348 84.3791 355.918 85.4484 355.908 85.5392 cv
355.878 85.7385 355.928 85.9289 355.918 86.1193 cv
355.898 86.2385 355.818 86.3986 355.758 86.5187 cv
355.758 86.7189 355.777 86.8791 355.758 87.0685 cv
355.678 87.6691 355.388 88.2287 355.117 88.8185 cv
355.048 88.9592 354.888 89.0793 354.697 89.0793 cv
354.277 89.0793 354.078 88.6193 354.018 88.3391 cv
353.988 88.2092 354.008 88.0285 354.027 87.8693 cv
354.048 87.7385 354.138 87.6193 354.228 87.509 cv
354.258 87.3293 354.348 87.1389 354.458 86.9787 cv
354.678 86.6291 355.238 85.7189 355.287 85.3293 cv
355.298 85.1789 355.277 85.0187 355.277 84.8693 cv
355.258 84.7092 355.287 84.549 355.248 84.3693 cv
355.188 84.1584 355.048 84.4689 354.758 84.3586 cv
354.578 84.299 354.777 84.1193 354.848 84.0187 cv
354.908 83.9484 355.027 83.7492 355.098 83.5588 cv
355.138 83.4289 355.148 83.3088 355.178 83.1486 cv
355.218 82.9084 355.308 82.7092 355.558 82.7092 cv
355.738 82.7092 355.888 82.7785 355.848 82.9387 cv
355.838 83.009 355.798 83.0588 355.798 83.1291 cv
355.787 83.2092 355.818 83.2687 355.808 83.3488 cv
355.808 83.3488 355.708 84.0285 355.938 84.0285 cv
356.058 84.0285 356.107 83.8488 356.208 83.759 cv
356.228 83.5793 356.328 83.4689 356.408 83.3293 cv
356.478 83.2092 356.728 82.9191 356.857 82.8488 cv
356.978 82.799 357.178 82.759 357.298 82.7492 cv
357.378 82.7492 357.438 82.7492 357.518 82.759 cv
357.558 82.7687 357.658 82.8088 357.697 82.8088 cv
357.898 82.8088 358.037 82.799 358.208 82.8391 cv
358.458 82.8986 358.527 83.0988 358.518 83.2785 cv
358.527 83.3791 358.558 83.8488 358.548 83.9387 cv
358.548 83.9387 358.548 84.2287 358.488 84.3791 cv
358.508 84.6086 358.408 84.6691 358.378 84.7785 cv
358.318 84.9592 358.258 85.1486 358.228 85.3293 cv
358.218 85.4689 358.308 85.6486 358.518 85.6486 cv
358.688 85.6486 358.857 85.4992 358.938 85.3986 cv
359.128 85.0793 359.287 84.7385 359.488 84.5285 cv
359.518 84.3693 359.598 84.299 359.678 84.1291 cv
359.718 84.0187 359.787 83.9084 359.838 83.799 cv
359.878 83.7189 359.938 83.6486 360.048 83.6389 cv
360.218 83.6389 360.238 83.799 360.218 83.9191 cv
360.178 84.0685 360.107 84.2189 360.058 84.3391 cv
cp
@
361.189 81.8088 mo
360.99 81.8088 360.8 81.6486 360.82 81.4787 cv
360.84 81.3391 361.06 81.1984 361.229 81.1984 cv
361.39 81.1984 361.56 81.3293 361.529 81.4689 cv
361.479 81.6389 361.4 81.8088 361.189 81.8088 cv
cp
362.09 85.259 mo
362.07 85.4689 361.08 86.509 360.83 86.6193 cv
360.699 86.6691 360.47 86.7785 360.32 86.7785 cv
360.14 86.7785 359.91 86.6984 359.869 86.5685 cv
359.76 86.3185 359.74 85.8986 359.8 85.6193 cv
359.77 85.4084 359.74 85.1691 359.709 84.9689 cv
359.709 84.9689 359.68 84.2785 359.74 83.7785 cv
359.779 83.549 359.869 83.3088 360.01 83.0588 cv
360.1 82.8986 360.34 82.7189 360.58 82.7189 cv
360.709 82.7189 360.82 82.7785 360.8 82.9191 cv
360.779 83.049 360.64 83.1291 360.6 83.259 cv
360.5 83.4689 360.459 83.9484 360.38 84.1193 cv
360.4 84.2492 360.41 84.3791 360.39 84.4992 cv
360.38 84.5685 360.34 84.6584 360.33 84.7492 cv
360.31 84.8791 360.4 85.0285 360.39 85.1584 cv
360.34 85.4689 li
360.33 85.549 360.38 85.9992 360.41 86.0793 cv
360.43 86.1193 360.5 86.2189 360.56 86.2189 cv
360.74 86.2189 361.07 85.8791 361.31 85.6789 cv
361.43 85.4484 362 84.7189 362.16 84.4387 cv
362.359 84.049 362.42 83.9592 362.67 83.9592 cv
362.89 83.9592 362.8 84.1584 362.72 84.3293 cv
362.57 84.6389 362.32 85.0793 362.09 85.259 cv
cp
f
361.189 81.8088 mo
360.99 81.8088 360.8 81.6486 360.82 81.4787 cv
360.84 81.3391 361.06 81.1984 361.229 81.1984 cv
361.39 81.1984 361.56 81.3293 361.529 81.4689 cv
361.479 81.6389 361.4 81.8088 361.189 81.8088 cv
cp
362.09 85.259 mo
362.07 85.4689 361.08 86.509 360.83 86.6193 cv
360.699 86.6691 360.47 86.7785 360.32 86.7785 cv
360.14 86.7785 359.91 86.6984 359.869 86.5685 cv
359.76 86.3185 359.74 85.8986 359.8 85.6193 cv
359.77 85.4084 359.74 85.1691 359.709 84.9689 cv
359.709 84.9689 359.68 84.2785 359.74 83.7785 cv
359.779 83.549 359.869 83.3088 360.01 83.0588 cv
360.1 82.8986 360.34 82.7189 360.58 82.7189 cv
360.709 82.7189 360.82 82.7785 360.8 82.9191 cv
360.779 83.049 360.64 83.1291 360.6 83.259 cv
360.5 83.4689 360.459 83.9484 360.38 84.1193 cv
360.4 84.2492 360.41 84.3791 360.39 84.4992 cv
360.38 84.5685 360.34 84.6584 360.33 84.7492 cv
360.31 84.8791 360.4 85.0285 360.39 85.1584 cv
360.34 85.4689 li
360.33 85.549 360.38 85.9992 360.41 86.0793 cv
360.43 86.1193 360.5 86.2189 360.56 86.2189 cv
360.74 86.2189 361.07 85.8791 361.31 85.6789 cv
361.43 85.4484 362 84.7189 362.16 84.4387 cv
362.359 84.049 362.42 83.9592 362.67 83.9592 cv
362.89 83.9592 362.8 84.1584 362.72 84.3293 cv
362.57 84.6389 362.32 85.0793 362.09 85.259 cv
cp
@
362.65 82.5685 mo
362.46 82.5685 362.35 82.9787 362.35 83.0793 cv
362.34 83.1584 362.33 83.3391 362.439 83.3488 cv
362.449 83.3488 362.479 83.3185 362.5 83.299 cv
362.56 83.2189 362.75 82.8185 362.76 82.7385 cv
362.77 82.6584 362.77 82.5685 362.65 82.5685 cv
cp
366.039 84.4689 mo
365.93 84.7492 365.609 85.1086 365.439 85.3488 cv
365.35 85.4689 365.039 85.8185 364.83 85.8791 cv
364.65 86.0793 364.46 86.2287 364.32 86.259 cv
364.279 86.2687 364.18 86.299 364.15 86.299 cv
363.68 86.299 363.58 85.7785 363.63 85.4689 cv
363.64 85.3986 363.68 85.3185 363.699 85.2492 cv
363.83 84.1584 li
363.84 84.0685 363.83 83.6486 363.77 83.5988 cv
363.479 83.7492 363.33 83.8293 363.07 83.9191 cv
362.979 84.009 362.859 84.0685 362.75 84.1291 cv
362.66 84.1691 362.46 84.799 362.27 84.8986 cv
362.25 84.9084 362.15 84.9289 362.119 84.9289 cv
362.01 84.9289 361.939 84.8293 361.93 84.7385 cv
361.93 84.6691 362.21 84.1193 362.22 84.009 cv
362.26 83.7189 361.74 83.7492 361.8 83.299 cv
361.83 83.1086 361.88 82.8693 361.96 82.6584 cv
362.01 82.5685 362.06 82.4787 362.16 82.4387 cv
362.26 82.2385 362.479 81.8791 362.72 81.8185 cv
362.76 81.8088 362.82 81.799 362.869 81.7785 cv
362.91 81.7785 362.939 81.799 362.97 81.8088 cv
363.33 81.8791 363.42 81.9992 363.369 82.3293 cv
363.33 82.5988 363.22 82.8391 363.18 83.1086 cv
363.17 83.1691 363.17 83.2385 363.26 83.2385 cv
363.3 83.2385 363.34 83.2287 363.359 83.1984 cv
363.46 83.1291 363.68 82.9084 363.75 82.8088 cv
363.83 82.6291 364.039 82.3488 364.32 82.3488 cv
364.439 82.3488 364.619 82.4084 364.57 82.5187 cv
364.56 82.5988 364.52 82.6789 364.52 82.7687 cv
364.51 82.8791 364.55 83.0588 364.529 83.2385 cv
364.51 83.4289 364.46 83.5588 364.369 83.7385 cv
364.4 84.009 364.33 84.4084 364.27 84.6984 cv
364.26 84.759 364.21 84.8391 364.18 84.9084 cv
364.15 85.1486 364.14 85.4191 364.16 85.6584 cv
364.17 85.7189 364.199 85.759 364.27 85.759 cv
364.32 85.759 364.34 85.759 364.369 85.7287 cv
364.67 85.5285 364.96 85.2092 365.14 85.0285 cv
365.18 84.8986 365.42 84.6584 365.479 84.549 cv
365.6 84.3488 365.65 84.1789 365.88 84.049 cv
365.939 84.0285 366.01 84.009 366.06 84.009 cv
366.16 84.009 366.3 84.0685 366.27 84.1584 cv
366.25 84.2687 366.1 84.3488 366.039 84.4689 cv
cp
f
362.65 82.5685 mo
362.46 82.5685 362.35 82.9787 362.35 83.0793 cv
362.34 83.1584 362.33 83.3391 362.439 83.3488 cv
362.449 83.3488 362.479 83.3185 362.5 83.299 cv
362.56 83.2189 362.75 82.8185 362.76 82.7385 cv
362.77 82.6584 362.77 82.5685 362.65 82.5685 cv
cp
366.039 84.4689 mo
365.93 84.7492 365.609 85.1086 365.439 85.3488 cv
365.35 85.4689 365.039 85.8185 364.83 85.8791 cv
364.65 86.0793 364.46 86.2287 364.32 86.259 cv
364.279 86.2687 364.18 86.299 364.15 86.299 cv
363.68 86.299 363.58 85.7785 363.63 85.4689 cv
363.64 85.3986 363.68 85.3185 363.699 85.2492 cv
363.83 84.1584 li
363.84 84.0685 363.83 83.6486 363.77 83.5988 cv
363.479 83.7492 363.33 83.8293 363.07 83.9191 cv
362.979 84.009 362.859 84.0685 362.75 84.1291 cv
362.66 84.1691 362.46 84.799 362.27 84.8986 cv
362.25 84.9084 362.15 84.9289 362.119 84.9289 cv
362.01 84.9289 361.939 84.8293 361.93 84.7385 cv
361.93 84.6691 362.21 84.1193 362.22 84.009 cv
362.26 83.7189 361.74 83.7492 361.8 83.299 cv
361.83 83.1086 361.88 82.8693 361.96 82.6584 cv
362.01 82.5685 362.06 82.4787 362.16 82.4387 cv
362.26 82.2385 362.479 81.8791 362.72 81.8185 cv
362.76 81.8088 362.82 81.799 362.869 81.7785 cv
362.91 81.7785 362.939 81.799 362.97 81.8088 cv
363.33 81.8791 363.42 81.9992 363.369 82.3293 cv
363.33 82.5988 363.22 82.8391 363.18 83.1086 cv
363.17 83.1691 363.17 83.2385 363.26 83.2385 cv
363.3 83.2385 363.34 83.2287 363.359 83.1984 cv
363.46 83.1291 363.68 82.9084 363.75 82.8088 cv
363.83 82.6291 364.039 82.3488 364.32 82.3488 cv
364.439 82.3488 364.619 82.4084 364.57 82.5187 cv
364.56 82.5988 364.52 82.6789 364.52 82.7687 cv
364.51 82.8791 364.55 83.0588 364.529 83.2385 cv
364.51 83.4289 364.46 83.5588 364.369 83.7385 cv
364.4 84.009 364.33 84.4084 364.27 84.6984 cv
364.26 84.759 364.21 84.8391 364.18 84.9084 cv
364.15 85.1486 364.14 85.4191 364.16 85.6584 cv
364.17 85.7189 364.199 85.759 364.27 85.759 cv
364.32 85.759 364.34 85.759 364.369 85.7287 cv
364.67 85.5285 364.96 85.2092 365.14 85.0285 cv
365.18 84.8986 365.42 84.6584 365.479 84.549 cv
365.6 84.3488 365.65 84.1789 365.88 84.049 cv
365.939 84.0285 366.01 84.009 366.06 84.009 cv
366.16 84.009 366.3 84.0685 366.27 84.1584 cv
366.25 84.2687 366.1 84.3488 366.039 84.4689 cv
cp
@
366.859 83.2092 mo
366.811 83.2092 366.74 83.2385 366.71 83.299 cv
366.561 83.5588 366.359 84.299 366.29 84.5793 cv
366.279 84.6486 366.311 84.7385 366.391 84.7385 cv
366.54 84.7385 366.859 84.2385 366.939 84.1486 cv
366.971 83.9689 367.061 83.6984 367.109 83.4787 cv
367.12 83.3488 367.09 83.2092 366.859 83.2092 cv
cp
368.82 84.9289 mo
368.439 85.3088 367.96 86.1086 367.74 86.2287 cv
367.561 86.509 367.32 86.6789 367.05 86.7687 cv
366.939 86.8088 366.859 86.8791 366.76 86.9191 cv
366.65 86.9592 366.37 86.9992 366.25 87.009 cv
365.85 87.009 365.73 86.6291 365.689 86.3586 cv
365.68 86.2687 365.63 86.1789 365.609 86.0988 cv
365.59 86.009 365.609 85.9191 365.63 85.8391 cv
365.62 85.6584 365.58 85.4787 365.609 85.3185 cv
365.641 85.0392 365.689 84.6984 365.811 84.4484 cv
365.811 84.2492 366.07 83.549 366.311 83.1193 cv
366.35 83.0285 366.45 82.9592 366.52 82.8693 cv
366.63 82.7287 366.88 82.5392 367.09 82.5392 cv
367.52 82.5392 367.73 83.0187 367.66 83.4289 cv
367.58 83.9084 367.359 84.1789 367.189 84.509 cv
367.17 84.5588 367.04 84.6691 366.98 84.6984 cv
366.88 84.8693 366.71 84.9787 366.43 85.0988 cv
366.391 85.1193 366.35 85.1486 366.32 85.1789 cv
366.27 85.2287 366.21 85.4484 366.189 85.509 cv
366.17 85.6584 366.279 86.4992 366.529 86.4992 cv
366.71 86.4992 367.05 86.3391 367.18 86.2189 cv
367.391 85.9992 367.641 85.6486 367.92 85.4387 cv
368.061 85.1486 368.42 84.7687 368.471 84.6984 cv
368.529 84.6193 368.52 84.509 368.58 84.4289 cv
368.66 84.3185 368.811 84.2189 368.95 84.2189 cv
369.07 84.2189 369.189 84.3088 369.17 84.4084 cv
369.141 84.6389 369.029 84.7385 368.82 84.9289 cv
cp
f
366.859 83.2092 mo
366.811 83.2092 366.74 83.2385 366.71 83.299 cv
366.561 83.5588 366.359 84.299 366.29 84.5793 cv
366.279 84.6486 366.311 84.7385 366.391 84.7385 cv
366.54 84.7385 366.859 84.2385 366.939 84.1486 cv
366.971 83.9689 367.061 83.6984 367.109 83.4787 cv
367.12 83.3488 367.09 83.2092 366.859 83.2092 cv
cp
368.82 84.9289 mo
368.439 85.3088 367.96 86.1086 367.74 86.2287 cv
367.561 86.509 367.32 86.6789 367.05 86.7687 cv
366.939 86.8088 366.859 86.8791 366.76 86.9191 cv
366.65 86.9592 366.37 86.9992 366.25 87.009 cv
365.85 87.009 365.73 86.6291 365.689 86.3586 cv
365.68 86.2687 365.63 86.1789 365.609 86.0988 cv
365.59 86.009 365.609 85.9191 365.63 85.8391 cv
365.62 85.6584 365.58 85.4787 365.609 85.3185 cv
365.641 85.0392 365.689 84.6984 365.811 84.4484 cv
365.811 84.2492 366.07 83.549 366.311 83.1193 cv
366.35 83.0285 366.45 82.9592 366.52 82.8693 cv
366.63 82.7287 366.88 82.5392 367.09 82.5392 cv
367.52 82.5392 367.73 83.0187 367.66 83.4289 cv
367.58 83.9084 367.359 84.1789 367.189 84.509 cv
367.17 84.5588 367.04 84.6691 366.98 84.6984 cv
366.88 84.8693 366.71 84.9787 366.43 85.0988 cv
366.391 85.1193 366.35 85.1486 366.32 85.1789 cv
366.27 85.2287 366.21 85.4484 366.189 85.509 cv
366.17 85.6584 366.279 86.4992 366.529 86.4992 cv
366.71 86.4992 367.05 86.3391 367.18 86.2189 cv
367.391 85.9992 367.641 85.6486 367.92 85.4387 cv
368.061 85.1486 368.42 84.7687 368.471 84.6984 cv
368.529 84.6193 368.52 84.509 368.58 84.4289 cv
368.66 84.3185 368.811 84.2189 368.95 84.2189 cv
369.07 84.2189 369.189 84.3088 369.17 84.4084 cv
369.141 84.6389 369.029 84.7385 368.82 84.9289 cv
cp
@
370.119 83.3693 mo
369.979 83.3693 369.88 83.5392 369.81 83.6193 cv
369.24 84.2189 368.97 84.8586 368.869 85.5988 cv
368.869 85.6486 368.859 85.8391 368.979 85.8391 cv
369.109 85.8391 369.6 85.0392 369.689 84.9191 cv
369.789 84.7785 369.92 84.6193 370 84.4992 cv
370.08 84.1789 370.209 83.9289 370.27 83.6291 cv
370.279 83.549 370.27 83.3693 370.119 83.3693 cv
cp
372.75 85.009 mo
372.609 85.1789 372.06 85.9484 371.88 86.0988 cv
371.84 86.2492 371.72 86.3693 371.65 86.4787 cv
371.58 86.6086 371.58 86.7492 371.449 86.8488 cv
371.32 86.9289 370.92 87.009 370.77 87.009 cv
370.34 87.009 370.3 86.5793 370.31 86.299 cv
370.31 86.2092 370.34 86.0392 370.369 85.9484 cv
370.31 85.7785 370.32 85.2687 370.15 85.2687 cv
370.09 85.2687 370.039 85.3185 370.01 85.3488 cv
369.72 85.7287 369.51 86.1389 369.15 86.4787 cv
369.07 86.549 368.89 86.5988 368.789 86.5988 cv
368.38 86.5988 368.18 86.0392 368.22 85.7492 cv
368.27 85.4592 368.369 85.1291 368.52 84.8986 cv
368.539 84.7492 368.55 84.6291 368.6 84.5187 cv
368.68 84.4084 368.75 84.259 368.84 84.1486 cv
368.88 84.009 368.949 83.8791 369.01 83.7492 cv
369.199 83.4289 369.699 82.8693 370.14 82.8391 cv
370.18 82.8293 370.25 82.8391 370.31 82.8391 cv
370.66 82.8391 370.699 82.4689 370.8 82.2492 cv
370.859 82.0793 371 81.9289 371.1 81.799 cv
371.14 81.4992 371.32 81.0285 371.77 81.0285 cv
371.89 81.0285 371.979 81.1086 371.97 81.2092 cv
371.949 81.3293 371.859 81.5285 371.77 81.6789 cv
371.74 81.7785 371.75 81.8986 371.709 81.9787 cv
371.609 82.2092 371.02 83.2785 371.01 83.3986 cv
370.869 84.4191 li
370.869 84.4484 370.84 84.4787 370.85 84.5392 cv
370.81 84.7492 370.89 84.9689 370.89 85.1789 cv
370.9 85.4289 370.89 85.6691 370.9 85.9191 cv
370.9 86.0187 370.88 86.1389 370.88 86.2385 cv
370.9 86.2785 370.949 86.3586 371 86.3488 cv
371.15 86.3488 371.289 86.1389 371.359 86.0685 cv
371.42 86.009 371.75 85.5685 371.81 85.5285 cv
372 85.2189 372.3 84.7687 372.6 84.4387 cv
372.68 84.3791 372.859 84.3293 372.959 84.3293 cv
373.07 84.3293 373.15 84.3791 373.119 84.4787 cv
373.1 84.6389 372.88 84.8293 372.75 85.009 cv
cp
f
370.119 83.3693 mo
369.979 83.3693 369.88 83.5392 369.81 83.6193 cv
369.24 84.2189 368.97 84.8586 368.869 85.5988 cv
368.869 85.6486 368.859 85.8391 368.979 85.8391 cv
369.109 85.8391 369.6 85.0392 369.689 84.9191 cv
369.789 84.7785 369.92 84.6193 370 84.4992 cv
370.08 84.1789 370.209 83.9289 370.27 83.6291 cv
370.279 83.549 370.27 83.3693 370.119 83.3693 cv
cp
372.75 85.009 mo
372.609 85.1789 372.06 85.9484 371.88 86.0988 cv
371.84 86.2492 371.72 86.3693 371.65 86.4787 cv
371.58 86.6086 371.58 86.7492 371.449 86.8488 cv
371.32 86.9289 370.92 87.009 370.77 87.009 cv
370.34 87.009 370.3 86.5793 370.31 86.299 cv
370.31 86.2092 370.34 86.0392 370.369 85.9484 cv
370.31 85.7785 370.32 85.2687 370.15 85.2687 cv
370.09 85.2687 370.039 85.3185 370.01 85.3488 cv
369.72 85.7287 369.51 86.1389 369.15 86.4787 cv
369.07 86.549 368.89 86.5988 368.789 86.5988 cv
368.38 86.5988 368.18 86.0392 368.22 85.7492 cv
368.27 85.4592 368.369 85.1291 368.52 84.8986 cv
368.539 84.7492 368.55 84.6291 368.6 84.5187 cv
368.68 84.4084 368.75 84.259 368.84 84.1486 cv
368.88 84.009 368.949 83.8791 369.01 83.7492 cv
369.199 83.4289 369.699 82.8693 370.14 82.8391 cv
370.18 82.8293 370.25 82.8391 370.31 82.8391 cv
370.66 82.8391 370.699 82.4689 370.8 82.2492 cv
370.859 82.0793 371 81.9289 371.1 81.799 cv
371.14 81.4992 371.32 81.0285 371.77 81.0285 cv
371.89 81.0285 371.979 81.1086 371.97 81.2092 cv
371.949 81.3293 371.859 81.5285 371.77 81.6789 cv
371.74 81.7785 371.75 81.8986 371.709 81.9787 cv
371.609 82.2092 371.02 83.2785 371.01 83.3986 cv
370.869 84.4191 li
370.869 84.4484 370.84 84.4787 370.85 84.5392 cv
370.81 84.7492 370.89 84.9689 370.89 85.1789 cv
370.9 85.4289 370.89 85.6691 370.9 85.9191 cv
370.9 86.0187 370.88 86.1389 370.88 86.2385 cv
370.9 86.2785 370.949 86.3586 371 86.3488 cv
371.15 86.3488 371.289 86.1389 371.359 86.0685 cv
371.42 86.009 371.75 85.5685 371.81 85.5285 cv
372 85.2189 372.3 84.7687 372.6 84.4387 cv
372.68 84.3791 372.859 84.3293 372.959 84.3293 cv
373.07 84.3293 373.15 84.3791 373.119 84.4787 cv
373.1 84.6389 372.88 84.8293 372.75 85.009 cv
cp
@
280.069 92.9191 mo
279.729 93.2492 279.77 92.9084 279.339 93.2687 cv
279.179 93.4084 279.189 93.7687 279.129 93.9484 cv
279.089 94.009 278.879 94.4191 278.779 94.4387 cv
278.549 94.7687 277.859 95.3293 277.509 95.509 cv
277.469 95.5392 277.169 95.6086 277.089 95.5988 cv
276.609 95.5988 276.679 95.0285 276.659 94.759 cv
276.659 94.6789 276.629 94.6086 276.629 94.5187 cv
276.6 94.2385 276.629 93.8693 276.609 93.5588 cv
276.609 93.509 276.589 93.3791 276.589 93.3293 cv
276.54 93.2785 li
276.449 93.4592 276.35 93.5392 276.259 93.5392 cv
276.08 93.5392 276.009 93.4787 276.04 93.4191 cv
276.069 93.2785 276.5 92.5187 276.64 92.2385 cv
276.729 92.0685 276.909 91.6086 276.949 91.3391 cv
276.989 91.0685 277.14 90.5988 277.279 90.4592 cv
277.299 90.3293 277.37 89.8986 277.54 89.6486 cv
277.6 89.5588 277.759 89.4787 277.879 89.4787 cv
278.04 89.4787 278.27 89.5793 278.239 89.7092 cv
278.229 89.7687 278.189 89.8693 278.159 89.9484 cv
278.009 90.2092 278.009 90.3586 277.969 90.6389 cv
277.929 90.9992 277.64 91.2687 277.489 91.549 cv
277.479 91.7189 277.479 91.8488 277.439 91.9992 cv
277.409 92.0685 277.359 92.1291 277.35 92.2189 cv
277.359 92.2687 277.189 93.2785 277.169 93.4689 cv
277.14 93.7092 277.189 94.6291 277.25 94.8791 cv
277.259 94.9387 277.29 95.009 277.399 95.009 cv
277.469 95.009 277.659 94.8693 277.79 94.8293 cv
277.859 94.7287 278.35 94.3185 278.409 94.2287 cv
278.5 94.1193 278.629 93.8088 278.649 93.6984 cv
278.699 93.2385 277.79 93.6389 277.909 92.759 cv
277.959 92.509 278.129 92.1789 278.31 91.9689 cv
278.39 91.8791 278.54 91.8391 278.649 91.8391 cv
279 91.8391 279.229 92.1984 279.279 92.4484 cv
279.29 92.5392 279.37 92.6584 279.489 92.6584 cv
279.58 92.6584 279.709 92.5793 279.839 92.5793 cv
279.979 92.5793 280.149 92.6486 280.129 92.799 cv
280.109 92.8488 280.1 92.8986 280.069 92.9191 cv
cp
f
280.069 92.9191 mo
279.729 93.2492 279.77 92.9084 279.339 93.2687 cv
279.179 93.4084 279.189 93.7687 279.129 93.9484 cv
279.089 94.009 278.879 94.4191 278.779 94.4387 cv
278.549 94.7687 277.859 95.3293 277.509 95.509 cv
277.469 95.5392 277.169 95.6086 277.089 95.5988 cv
276.609 95.5988 276.679 95.0285 276.659 94.759 cv
276.659 94.6789 276.629 94.6086 276.629 94.5187 cv
276.6 94.2385 276.629 93.8693 276.609 93.5588 cv
276.609 93.509 276.589 93.3791 276.589 93.3293 cv
276.54 93.2785 li
276.449 93.4592 276.35 93.5392 276.259 93.5392 cv
276.08 93.5392 276.009 93.4787 276.04 93.4191 cv
276.069 93.2785 276.5 92.5187 276.64 92.2385 cv
276.729 92.0685 276.909 91.6086 276.949 91.3391 cv
276.989 91.0685 277.14 90.5988 277.279 90.4592 cv
277.299 90.3293 277.37 89.8986 277.54 89.6486 cv
277.6 89.5588 277.759 89.4787 277.879 89.4787 cv
278.04 89.4787 278.27 89.5793 278.239 89.7092 cv
278.229 89.7687 278.189 89.8693 278.159 89.9484 cv
278.009 90.2092 278.009 90.3586 277.969 90.6389 cv
277.929 90.9992 277.64 91.2687 277.489 91.549 cv
277.479 91.7189 277.479 91.8488 277.439 91.9992 cv
277.409 92.0685 277.359 92.1291 277.35 92.2189 cv
277.359 92.2687 277.189 93.2785 277.169 93.4689 cv
277.14 93.7092 277.189 94.6291 277.25 94.8791 cv
277.259 94.9387 277.29 95.009 277.399 95.009 cv
277.469 95.009 277.659 94.8693 277.79 94.8293 cv
277.859 94.7287 278.35 94.3185 278.409 94.2287 cv
278.5 94.1193 278.629 93.8088 278.649 93.6984 cv
278.699 93.2385 277.79 93.6389 277.909 92.759 cv
277.959 92.509 278.129 92.1789 278.31 91.9689 cv
278.39 91.8791 278.54 91.8391 278.649 91.8391 cv
279 91.8391 279.229 92.1984 279.279 92.4484 cv
279.29 92.5392 279.37 92.6584 279.489 92.6584 cv
279.58 92.6584 279.709 92.5793 279.839 92.5793 cv
279.979 92.5793 280.149 92.6486 280.129 92.799 cv
280.109 92.8488 280.1 92.8986 280.069 92.9191 cv
cp
@
283.292 96.4084 mo
283.292 96.3791 283.261 96.3488 283.231 96.3488 cv
283.171 96.3488 282.812 96.6984 282.761 96.7492 cv
282.582 96.9689 282.481 97.0793 282.321 97.3293 cv
282.222 97.509 282.111 97.759 282.082 97.9484 cv
282.071 97.9992 282.042 98.0392 282.031 98.0793 cv
282.011 98.2287 282.091 98.4592 282.251 98.4592 cv
282.521 98.4592 282.921 98.2385 283.031 98.0392 cv
283.062 97.9787 283.261 97.5988 283.271 97.5685 cv
283.341 97.0685 li
283.352 97.009 283.312 96.4592 283.292 96.4084 cv
cp
284.651 95.2385 mo
284.491 95.5187 284.042 95.9689 283.972 96.0392 cv
283.972 96.2492 283.981 96.1691 283.952 96.5392 cv
283.912 96.8391 283.952 96.9084 283.881 97.2189 cv
283.861 97.3586 283.821 97.549 283.771 97.7189 cv
283.731 97.8185 283.642 97.9484 283.551 98.0285 cv
283.551 98.1291 283.531 98.2189 283.491 98.3088 cv
283.312 98.6584 282.521 98.8293 282.131 98.8293 cv
281.872 98.8293 281.521 98.6193 281.521 98.4084 cv
281.511 98.2687 281.491 98.1086 281.562 97.9787 cv
281.542 97.4387 281.991 97.009 282.472 96.4787 cv
282.711 96.2287 283.321 95.799 283.352 95.5685 cv
283.321 95.4484 283.341 94.9484 283.352 94.5793 cv
283.312 94.3293 283.292 93.9484 283.151 93.9484 cv
283.021 93.9484 282.432 94.7189 282.332 94.8391 cv
282.281 94.9084 282.281 95.009 282.241 95.0793 cv
282.031 95.3791 281.662 95.8293 281.211 95.8185 cv
280.731 95.8185 280.932 95.3986 280.961 95.1291 cv
280.981 95.0285 280.981 94.9387 281.021 94.8293 cv
280.981 94.7287 280.932 94.4992 281.021 94.3185 cv
281.011 93.8391 281.082 93.3986 281.171 93.1584 cv
281.222 92.8986 281.271 92.6984 281.332 92.4289 cv
281.341 92.3185 281.231 92.1984 281.082 92.1984 cv
280.722 92.1984 280.321 93.4787 279.961 93.4787 cv
279.841 93.4787 279.711 93.3693 279.731 93.2687 cv
279.761 93.0392 280.452 91.9191 280.832 91.7687 cv
280.921 91.7385 281.182 91.6984 281.261 91.6984 cv
281.551 91.6984 281.921 91.8088 281.912 92.0988 cv
281.892 92.4289 281.832 92.8293 281.731 93.0392 cv
281.741 93.3088 281.722 93.4387 281.662 93.6691 cv
281.642 93.799 281.582 93.8586 281.582 93.9484 cv
281.571 94.0588 281.531 94.8693 281.671 94.8693 cv
281.812 94.8693 282.711 93.6389 282.841 93.5187 cv
282.892 93.3391 283.021 93.1984 283.151 93.0588 cv
283.341 92.8391 283.521 92.5793 283.781 92.4084 cv
283.832 92.3791 283.921 92.3791 283.961 92.3791 cv
284.091 92.3791 284.222 92.4484 284.211 92.5685 cv
284.191 92.6291 284.151 92.6984 284.142 92.7492 cv
284.071 92.9592 283.972 93.1984 283.941 93.4289 cv
283.921 93.5988 283.892 95.2092 284.071 95.2092 cv
284.241 95.2092 284.991 94.0187 285.162 93.8986 cv
285.231 93.6389 285.491 93.2189 285.591 92.9689 cv
285.642 92.8293 285.841 92.8185 285.921 92.8391 cv
286.082 92.8791 286.051 93.009 285.991 93.2287 cv
285.821 93.9387 284.852 95.1486 284.651 95.2385 cv
cp
f
283.292 96.4084 mo
283.292 96.3791 283.261 96.3488 283.231 96.3488 cv
283.171 96.3488 282.812 96.6984 282.761 96.7492 cv
282.582 96.9689 282.481 97.0793 282.321 97.3293 cv
282.222 97.509 282.111 97.759 282.082 97.9484 cv
282.071 97.9992 282.042 98.0392 282.031 98.0793 cv
282.011 98.2287 282.091 98.4592 282.251 98.4592 cv
282.521 98.4592 282.921 98.2385 283.031 98.0392 cv
283.062 97.9787 283.261 97.5988 283.271 97.5685 cv
283.341 97.0685 li
283.352 97.009 283.312 96.4592 283.292 96.4084 cv
cp
284.651 95.2385 mo
284.491 95.5187 284.042 95.9689 283.972 96.0392 cv
283.972 96.2492 283.981 96.1691 283.952 96.5392 cv
283.912 96.8391 283.952 96.9084 283.881 97.2189 cv
283.861 97.3586 283.821 97.549 283.771 97.7189 cv
283.731 97.8185 283.642 97.9484 283.551 98.0285 cv
283.551 98.1291 283.531 98.2189 283.491 98.3088 cv
283.312 98.6584 282.521 98.8293 282.131 98.8293 cv
281.872 98.8293 281.521 98.6193 281.521 98.4084 cv
281.511 98.2687 281.491 98.1086 281.562 97.9787 cv
281.542 97.4387 281.991 97.009 282.472 96.4787 cv
282.711 96.2287 283.321 95.799 283.352 95.5685 cv
283.321 95.4484 283.341 94.9484 283.352 94.5793 cv
283.312 94.3293 283.292 93.9484 283.151 93.9484 cv
283.021 93.9484 282.432 94.7189 282.332 94.8391 cv
282.281 94.9084 282.281 95.009 282.241 95.0793 cv
282.031 95.3791 281.662 95.8293 281.211 95.8185 cv
280.731 95.8185 280.932 95.3986 280.961 95.1291 cv
280.981 95.0285 280.981 94.9387 281.021 94.8293 cv
280.981 94.7287 280.932 94.4992 281.021 94.3185 cv
281.011 93.8391 281.082 93.3986 281.171 93.1584 cv
281.222 92.8986 281.271 92.6984 281.332 92.4289 cv
281.341 92.3185 281.231 92.1984 281.082 92.1984 cv
280.722 92.1984 280.321 93.4787 279.961 93.4787 cv
279.841 93.4787 279.711 93.3693 279.731 93.2687 cv
279.761 93.0392 280.452 91.9191 280.832 91.7687 cv
280.921 91.7385 281.182 91.6984 281.261 91.6984 cv
281.551 91.6984 281.921 91.8088 281.912 92.0988 cv
281.892 92.4289 281.832 92.8293 281.731 93.0392 cv
281.741 93.3088 281.722 93.4387 281.662 93.6691 cv
281.642 93.799 281.582 93.8586 281.582 93.9484 cv
281.571 94.0588 281.531 94.8693 281.671 94.8693 cv
281.812 94.8693 282.711 93.6389 282.841 93.5187 cv
282.892 93.3391 283.021 93.1984 283.151 93.0588 cv
283.341 92.8391 283.521 92.5793 283.781 92.4084 cv
283.832 92.3791 283.921 92.3791 283.961 92.3791 cv
284.091 92.3791 284.222 92.4484 284.211 92.5685 cv
284.191 92.6291 284.151 92.6984 284.142 92.7492 cv
284.071 92.9592 283.972 93.1984 283.941 93.4289 cv
283.921 93.5988 283.892 95.2092 284.071 95.2092 cv
284.241 95.2092 284.991 94.0187 285.162 93.8986 cv
285.231 93.6389 285.491 93.2189 285.591 92.9689 cv
285.642 92.8293 285.841 92.8185 285.921 92.8391 cv
286.082 92.8791 286.051 93.009 285.991 93.2287 cv
285.821 93.9387 284.852 95.1486 284.651 95.2385 cv
cp
@
294.531 93.8293 mo
294.371 93.9387 294.171 94.4484 294.051 94.6086 cv
293.861 94.9191 293.651 95.1984 293.411 95.4992 cv
293.321 95.5988 293.312 95.7189 293.221 95.8293 cv
293.071 95.9992 292.751 96.3293 292.511 96.3185 cv
292.131 96.3185 291.951 95.9289 291.891 95.6691 cv
291.871 95.5685 291.891 95.4689 291.941 95.3986 cv
291.911 95.3088 291.852 95.1691 291.871 95.0793 cv
292.042 93.2385 li
292.042 93.2092 292.031 93.1691 292.042 93.1389 cv
292.042 93.0685 292.131 92.5988 292.011 92.5988 cv
291.991 92.5988 291.901 92.6789 291.891 92.6984 cv
291.531 93.1193 291.301 93.5793 290.951 94.009 cv
290.812 94.2092 290.701 94.4387 290.571 94.6486 cv
290.511 94.7687 290.312 94.9689 290.201 95.0285 cv
290.161 95.2385 289.961 95.509 289.792 95.7189 cv
289.661 95.8391 289.501 95.9191 289.401 96.0285 cv
289.171 96.2287 288.921 96.4191 288.602 96.4191 cv
288.371 96.4191 288.191 96.299 288.062 96.1691 cv
287.852 95.9484 287.832 95.7287 287.861 95.4387 cv
287.931 94.9084 288.151 94.3986 288.401 93.8693 cv
288.461 93.7785 288.501 93.6389 288.611 93.5285 cv
288.611 93.3693 288.832 92.8791 289.021 92.5685 cv
289.151 92.3391 289.301 92.1193 289.471 91.9484 cv
289.511 91.8185 289.602 91.6691 289.651 91.5685 cv
290.091 90.9689 290.521 90.3391 291.102 89.8293 cv
291.251 89.6789 291.841 89.509 292.051 89.4992 cv
292.352 89.4992 292.571 89.6584 292.631 89.9084 cv
292.641 89.9787 292.691 90.0685 292.671 90.1584 cv
292.661 90.2492 292.562 90.3586 292.431 90.3488 cv
292.171 90.3488 292.121 90.009 291.921 90.009 cv
291.671 90.009 291.221 90.4484 291.031 90.5187 cv
290.951 90.7189 290.812 90.8791 290.711 91.0187 cv
290.241 91.6086 289.861 92.2287 289.441 92.8488 cv
289.201 93.2492 288.521 94.8488 288.461 95.2687 cv
288.441 95.4084 288.441 95.9084 288.671 95.9084 cv
288.801 95.9084 289.051 95.6691 289.161 95.5988 cv
289.591 95.259 289.671 94.9992 289.941 94.5988 cv
290.111 94.3693 290.292 94.1584 290.451 93.9387 cv
290.861 93.3693 291.111 92.799 291.491 92.2287 cv
291.661 91.9484 291.852 91.6691 292.031 91.3986 cv
292.111 91.2687 292.141 91.1291 292.221 91.009 cv
292.251 90.9387 292.391 90.8488 292.461 90.8391 cv
292.771 90.8391 292.911 91.1584 292.871 91.3986 cv
292.761 92.1584 li
292.741 92.299 292.751 92.4289 292.731 92.5588 cv
292.701 92.7785 292.641 93.0187 292.571 93.2385 cv
292.551 93.3586 292.531 93.5187 292.441 93.6691 cv
292.511 93.8185 292.521 93.8791 292.511 93.9787 cv
292.451 94.3693 li
292.451 94.3986 292.461 94.4191 292.461 94.4387 cv
292.431 94.7189 li
292.411 94.8391 292.471 95.5392 292.621 95.5392 cv
292.852 95.5392 293.312 94.6984 293.501 94.5793 cv
293.562 94.3488 293.771 94.049 293.931 93.8185 cv
294.021 93.6984 294.102 93.549 294.201 93.4289 cv
294.241 93.3586 294.371 93.299 294.471 93.299 cv
294.602 93.299 294.731 93.3488 294.731 93.5392 cv
294.731 93.6486 294.631 93.7492 294.531 93.8293 cv
cp
f
294.531 93.8293 mo
294.371 93.9387 294.171 94.4484 294.051 94.6086 cv
293.861 94.9191 293.651 95.1984 293.411 95.4992 cv
293.321 95.5988 293.312 95.7189 293.221 95.8293 cv
293.071 95.9992 292.751 96.3293 292.511 96.3185 cv
292.131 96.3185 291.951 95.9289 291.891 95.6691 cv
291.871 95.5685 291.891 95.4689 291.941 95.3986 cv
291.911 95.3088 291.852 95.1691 291.871 95.0793 cv
292.042 93.2385 li
292.042 93.2092 292.031 93.1691 292.042 93.1389 cv
292.042 93.0685 292.131 92.5988 292.011 92.5988 cv
291.991 92.5988 291.901 92.6789 291.891 92.6984 cv
291.531 93.1193 291.301 93.5793 290.951 94.009 cv
290.812 94.2092 290.701 94.4387 290.571 94.6486 cv
290.511 94.7687 290.312 94.9689 290.201 95.0285 cv
290.161 95.2385 289.961 95.509 289.792 95.7189 cv
289.661 95.8391 289.501 95.9191 289.401 96.0285 cv
289.171 96.2287 288.921 96.4191 288.602 96.4191 cv
288.371 96.4191 288.191 96.299 288.062 96.1691 cv
287.852 95.9484 287.832 95.7287 287.861 95.4387 cv
287.931 94.9084 288.151 94.3986 288.401 93.8693 cv
288.461 93.7785 288.501 93.6389 288.611 93.5285 cv
288.611 93.3693 288.832 92.8791 289.021 92.5685 cv
289.151 92.3391 289.301 92.1193 289.471 91.9484 cv
289.511 91.8185 289.602 91.6691 289.651 91.5685 cv
290.091 90.9689 290.521 90.3391 291.102 89.8293 cv
291.251 89.6789 291.841 89.509 292.051 89.4992 cv
292.352 89.4992 292.571 89.6584 292.631 89.9084 cv
292.641 89.9787 292.691 90.0685 292.671 90.1584 cv
292.661 90.2492 292.562 90.3586 292.431 90.3488 cv
292.171 90.3488 292.121 90.009 291.921 90.009 cv
291.671 90.009 291.221 90.4484 291.031 90.5187 cv
290.951 90.7189 290.812 90.8791 290.711 91.0187 cv
290.241 91.6086 289.861 92.2287 289.441 92.8488 cv
289.201 93.2492 288.521 94.8488 288.461 95.2687 cv
288.441 95.4084 288.441 95.9084 288.671 95.9084 cv
288.801 95.9084 289.051 95.6691 289.161 95.5988 cv
289.591 95.259 289.671 94.9992 289.941 94.5988 cv
290.111 94.3693 290.292 94.1584 290.451 93.9387 cv
290.861 93.3693 291.111 92.799 291.491 92.2287 cv
291.661 91.9484 291.852 91.6691 292.031 91.3986 cv
292.111 91.2687 292.141 91.1291 292.221 91.009 cv
292.251 90.9387 292.391 90.8488 292.461 90.8391 cv
292.771 90.8391 292.911 91.1584 292.871 91.3986 cv
292.761 92.1584 li
292.741 92.299 292.751 92.4289 292.731 92.5588 cv
292.701 92.7785 292.641 93.0187 292.571 93.2385 cv
292.551 93.3586 292.531 93.5187 292.441 93.6691 cv
292.511 93.8185 292.521 93.8791 292.511 93.9787 cv
292.451 94.3693 li
292.451 94.3986 292.461 94.4191 292.461 94.4387 cv
292.431 94.7189 li
292.411 94.8391 292.471 95.5392 292.621 95.5392 cv
292.852 95.5392 293.312 94.6984 293.501 94.5793 cv
293.562 94.3488 293.771 94.049 293.931 93.8185 cv
294.021 93.6984 294.102 93.549 294.201 93.4289 cv
294.241 93.3586 294.371 93.299 294.471 93.299 cv
294.602 93.299 294.731 93.3488 294.731 93.5392 cv
294.731 93.6486 294.631 93.7492 294.531 93.8293 cv
cp
@
294.673 93.5392 mo
294.533 93.5392 294.433 93.4084 294.433 93.3185 cv
294.433 93.1486 294.533 92.9191 294.713 92.7092 cv
294.853 92.259 295.203 92.0685 295.513 92.0685 cv
296.233 92.0685 296.073 92.8586 296.353 92.8488 cv
296.453 92.8488 296.783 92.5988 297.143 92.6086 cv
297.653 92.6086 297.883 93.0392 297.953 93.0285 cv
298.003 93.0285 298.153 92.8791 298.333 92.8391 cv
298.483 92.7092 298.703 92.5793 298.953 92.5988 cv
299.073 92.5988 299.343 92.6691 299.413 92.7287 cv
299.583 92.8586 299.633 93.0685 299.673 93.259 cv
299.683 93.3088 299.673 93.4084 299.673 93.4484 cv
299.663 93.5187 299.613 93.5685 299.613 93.6291 cv
299.613 93.6291 299.483 94.7287 299.493 94.8693 cv
299.563 94.9592 299.613 94.9992 299.743 94.9992 cv
299.853 94.9992 300.003 94.8791 300.133 94.8488 cv
300.203 94.6789 300.513 94.1984 300.603 94.0187 cv
300.753 93.7385 300.883 93.5285 301.003 93.2492 cv
301.033 93.2189 301.053 93.1691 301.073 93.1389 cv
301.083 93.0685 301.243 92.9387 301.373 92.9689 cv
301.533 93.009 301.563 93.2092 301.463 93.3791 cv
301.313 93.6984 301.203 93.8791 301.093 94.2092 cv
301.033 94.3586 300.853 94.5392 300.733 94.6389 cv
300.703 94.7492 300.603 94.8986 300.563 94.9592 cv
300.453 95.1193 299.873 95.4787 299.463 95.4787 cv
299.403 95.4787 299.313 95.4592 299.253 95.4484 cv
299.093 95.3986 298.983 95.3586 298.903 95.2189 cv
298.763 95.0187 298.833 94.7492 298.873 94.5187 cv
298.893 94.3693 298.993 94.2287 299.043 94.1389 cv
299.033 94.009 299.003 93.8488 299.033 93.7385 cv
299.043 93.6486 299.073 93.5588 299.093 93.4592 cv
299.103 93.3586 298.953 93.049 298.803 93.0588 cv
298.653 93.0588 298.113 93.6193 298.053 93.7687 cv
298.043 93.8293 298.043 93.8586 298.053 93.9084 cv
298.033 94.0285 297.963 94.1389 297.903 94.2385 cv
297.863 94.3293 297.863 94.4289 297.843 94.4787 cv
297.703 94.8391 297.633 95.2092 297.483 95.4191 cv
297.493 95.509 297.453 95.6291 297.443 95.6691 cv
297.413 95.8693 297.313 96.2189 296.993 96.2092 cv
296.873 96.2092 296.733 96.1193 296.743 95.9992 cv
296.763 95.8986 296.813 95.7687 296.863 95.6584 cv
296.973 95.3293 297.083 95.009 297.213 94.6193 cv
297.193 94.3586 297.333 93.4992 297.333 93.4992 cv
297.343 93.3488 297.283 93.0187 297.063 93.0285 cv
296.583 93.0285 296.103 94.0793 296.063 94.3586 cv
296.053 94.4191 296.073 94.4592 296.063 94.5187 cv
296.043 94.6984 295.943 94.9289 295.873 95.1086 cv
295.793 95.3185 295.733 95.7785 295.353 95.799 cv
295.203 95.799 295.063 95.7385 295.083 95.5988 cv
295.113 95.3488 295.193 95.259 295.273 95.0392 cv
295.313 94.9191 295.343 94.799 295.363 94.6691 cv
295.383 94.5988 295.413 94.5187 295.473 94.4387 cv
295.483 94.3088 295.483 94.2189 295.513 94.0685 cv
295.543 93.9592 295.533 93.8693 295.593 93.7785 cv
295.543 93.6691 295.573 93.4689 295.593 93.3185 cv
295.613 92.9084 295.463 92.7189 295.333 92.7189 cv
295.193 92.7189 294.813 93.5392 294.673 93.5392 cv
cp
f
294.673 93.5392 mo
294.533 93.5392 294.433 93.4084 294.433 93.3185 cv
294.433 93.1486 294.533 92.9191 294.713 92.7092 cv
294.853 92.259 295.203 92.0685 295.513 92.0685 cv
296.233 92.0685 296.073 92.8586 296.353 92.8488 cv
296.453 92.8488 296.783 92.5988 297.143 92.6086 cv
297.653 92.6086 297.883 93.0392 297.953 93.0285 cv
298.003 93.0285 298.153 92.8791 298.333 92.8391 cv
298.483 92.7092 298.703 92.5793 298.953 92.5988 cv
299.073 92.5988 299.343 92.6691 299.413 92.7287 cv
299.583 92.8586 299.633 93.0685 299.673 93.259 cv
299.683 93.3088 299.673 93.4084 299.673 93.4484 cv
299.663 93.5187 299.613 93.5685 299.613 93.6291 cv
299.613 93.6291 299.483 94.7287 299.493 94.8693 cv
299.563 94.9592 299.613 94.9992 299.743 94.9992 cv
299.853 94.9992 300.003 94.8791 300.133 94.8488 cv
300.203 94.6789 300.513 94.1984 300.603 94.0187 cv
300.753 93.7385 300.883 93.5285 301.003 93.2492 cv
301.033 93.2189 301.053 93.1691 301.073 93.1389 cv
301.083 93.0685 301.243 92.9387 301.373 92.9689 cv
301.533 93.009 301.563 93.2092 301.463 93.3791 cv
301.313 93.6984 301.203 93.8791 301.093 94.2092 cv
301.033 94.3586 300.853 94.5392 300.733 94.6389 cv
300.703 94.7492 300.603 94.8986 300.563 94.9592 cv
300.453 95.1193 299.873 95.4787 299.463 95.4787 cv
299.403 95.4787 299.313 95.4592 299.253 95.4484 cv
299.093 95.3986 298.983 95.3586 298.903 95.2189 cv
298.763 95.0187 298.833 94.7492 298.873 94.5187 cv
298.893 94.3693 298.993 94.2287 299.043 94.1389 cv
299.033 94.009 299.003 93.8488 299.033 93.7385 cv
299.043 93.6486 299.073 93.5588 299.093 93.4592 cv
299.103 93.3586 298.953 93.049 298.803 93.0588 cv
298.653 93.0588 298.113 93.6193 298.053 93.7687 cv
298.043 93.8293 298.043 93.8586 298.053 93.9084 cv
298.033 94.0285 297.963 94.1389 297.903 94.2385 cv
297.863 94.3293 297.863 94.4289 297.843 94.4787 cv
297.703 94.8391 297.633 95.2092 297.483 95.4191 cv
297.493 95.509 297.453 95.6291 297.443 95.6691 cv
297.413 95.8693 297.313 96.2189 296.993 96.2092 cv
296.873 96.2092 296.733 96.1193 296.743 95.9992 cv
296.763 95.8986 296.813 95.7687 296.863 95.6584 cv
296.973 95.3293 297.083 95.009 297.213 94.6193 cv
297.193 94.3586 297.333 93.4992 297.333 93.4992 cv
297.343 93.3488 297.283 93.0187 297.063 93.0285 cv
296.583 93.0285 296.103 94.0793 296.063 94.3586 cv
296.053 94.4191 296.073 94.4592 296.063 94.5187 cv
296.043 94.6984 295.943 94.9289 295.873 95.1086 cv
295.793 95.3185 295.733 95.7785 295.353 95.799 cv
295.203 95.799 295.063 95.7385 295.083 95.5988 cv
295.113 95.3488 295.193 95.259 295.273 95.0392 cv
295.313 94.9191 295.343 94.799 295.363 94.6691 cv
295.383 94.5988 295.413 94.5187 295.473 94.4387 cv
295.483 94.3088 295.483 94.2189 295.513 94.0685 cv
295.543 93.9592 295.533 93.8693 295.593 93.7785 cv
295.543 93.6691 295.573 93.4689 295.593 93.3185 cv
295.613 92.9084 295.463 92.7189 295.333 92.7189 cv
295.193 92.7189 294.813 93.5392 294.673 93.5392 cv
cp
@
301.883 92.2092 mo
301.833 92.2092 301.764 92.2385 301.733 92.299 cv
301.583 92.5588 301.383 93.299 301.313 93.5793 cv
301.303 93.6486 301.333 93.7385 301.414 93.7385 cv
301.563 93.7385 301.883 93.2385 301.963 93.1486 cv
301.994 92.9689 302.083 92.6984 302.133 92.4787 cv
302.144 92.3488 302.113 92.2092 301.883 92.2092 cv
cp
303.843 93.9289 mo
303.463 94.3088 302.983 95.1086 302.764 95.2287 cv
302.583 95.509 302.343 95.6789 302.073 95.7687 cv
301.963 95.8088 301.883 95.8791 301.783 95.9191 cv
301.673 95.9592 301.394 95.9992 301.273 96.009 cv
300.874 96.009 300.753 95.6291 300.713 95.3586 cv
300.704 95.2687 300.653 95.1789 300.633 95.0988 cv
300.613 95.009 300.633 94.9191 300.653 94.8391 cv
300.644 94.6584 300.604 94.4787 300.633 94.3185 cv
300.664 94.0392 300.713 93.6984 300.833 93.4484 cv
300.833 93.2492 301.093 92.549 301.333 92.1193 cv
301.374 92.0285 301.474 91.9592 301.543 91.8693 cv
301.653 91.7287 301.903 91.5392 302.113 91.5392 cv
302.543 91.5392 302.753 92.0187 302.684 92.4289 cv
302.604 92.9084 302.383 93.1789 302.213 93.509 cv
302.193 93.5588 302.063 93.6691 302.003 93.6984 cv
301.903 93.8693 301.733 93.9787 301.454 94.0988 cv
301.414 94.1193 301.374 94.1486 301.343 94.1789 cv
301.293 94.2287 301.233 94.4484 301.213 94.509 cv
301.193 94.6584 301.303 95.4992 301.553 95.4992 cv
301.733 95.4992 302.073 95.3391 302.204 95.2189 cv
302.414 94.9992 302.664 94.6486 302.943 94.4387 cv
303.083 94.1486 303.443 93.7687 303.494 93.6984 cv
303.553 93.6193 303.543 93.509 303.604 93.4289 cv
303.684 93.3185 303.833 93.2189 303.974 93.2189 cv
304.093 93.2189 304.213 93.3088 304.193 93.4084 cv
304.164 93.6389 304.053 93.7385 303.843 93.9289 cv
cp
f
301.883 92.2092 mo
301.833 92.2092 301.764 92.2385 301.733 92.299 cv
301.583 92.5588 301.383 93.299 301.313 93.5793 cv
301.303 93.6486 301.333 93.7385 301.414 93.7385 cv
301.563 93.7385 301.883 93.2385 301.963 93.1486 cv
301.994 92.9689 302.083 92.6984 302.133 92.4787 cv
302.144 92.3488 302.113 92.2092 301.883 92.2092 cv
cp
303.843 93.9289 mo
303.463 94.3088 302.983 95.1086 302.764 95.2287 cv
302.583 95.509 302.343 95.6789 302.073 95.7687 cv
301.963 95.8088 301.883 95.8791 301.783 95.9191 cv
301.673 95.9592 301.394 95.9992 301.273 96.009 cv
300.874 96.009 300.753 95.6291 300.713 95.3586 cv
300.704 95.2687 300.653 95.1789 300.633 95.0988 cv
300.613 95.009 300.633 94.9191 300.653 94.8391 cv
300.644 94.6584 300.604 94.4787 300.633 94.3185 cv
300.664 94.0392 300.713 93.6984 300.833 93.4484 cv
300.833 93.2492 301.093 92.549 301.333 92.1193 cv
301.374 92.0285 301.474 91.9592 301.543 91.8693 cv
301.653 91.7287 301.903 91.5392 302.113 91.5392 cv
302.543 91.5392 302.753 92.0187 302.684 92.4289 cv
302.604 92.9084 302.383 93.1789 302.213 93.509 cv
302.193 93.5588 302.063 93.6691 302.003 93.6984 cv
301.903 93.8693 301.733 93.9787 301.454 94.0988 cv
301.414 94.1193 301.374 94.1486 301.343 94.1789 cv
301.293 94.2287 301.233 94.4484 301.213 94.509 cv
301.193 94.6584 301.303 95.4992 301.553 95.4992 cv
301.733 95.4992 302.073 95.3391 302.204 95.2189 cv
302.414 94.9992 302.664 94.6486 302.943 94.4387 cv
303.083 94.1486 303.443 93.7687 303.494 93.6984 cv
303.553 93.6193 303.543 93.509 303.604 93.4289 cv
303.684 93.3185 303.833 93.2189 303.974 93.2189 cv
304.093 93.2189 304.213 93.3088 304.193 93.4084 cv
304.164 93.6389 304.053 93.7385 303.843 93.9289 cv
cp
@
304.224 91.5685 mo
304.034 91.5685 303.923 91.9787 303.923 92.0793 cv
303.914 92.1584 303.903 92.3391 304.014 92.3488 cv
304.023 92.3488 304.054 92.3185 304.073 92.299 cv
304.133 92.2189 304.323 91.8185 304.333 91.7385 cv
304.343 91.6584 304.343 91.5685 304.224 91.5685 cv
cp
307.613 93.4689 mo
307.504 93.7492 307.184 94.1086 307.014 94.3488 cv
306.923 94.4689 306.613 94.8185 306.403 94.8791 cv
306.224 95.0793 306.034 95.2287 305.894 95.259 cv
305.854 95.2687 305.753 95.299 305.724 95.299 cv
305.253 95.299 305.153 94.7785 305.204 94.4689 cv
305.213 94.3986 305.253 94.3185 305.273 94.2492 cv
305.403 93.1584 li
305.414 93.0685 305.403 92.6486 305.343 92.5988 cv
305.054 92.7492 304.903 92.8293 304.644 92.9191 cv
304.554 93.009 304.434 93.0685 304.323 93.1291 cv
304.233 93.1691 304.034 93.799 303.843 93.8986 cv
303.823 93.9084 303.724 93.9289 303.693 93.9289 cv
303.583 93.9289 303.514 93.8293 303.503 93.7385 cv
303.503 93.6691 303.784 93.1193 303.793 93.009 cv
303.833 92.7189 303.313 92.7492 303.374 92.299 cv
303.403 92.1086 303.454 91.8693 303.534 91.6584 cv
303.583 91.5685 303.633 91.4787 303.733 91.4387 cv
303.833 91.2385 304.054 90.8791 304.293 90.8185 cv
304.333 90.8088 304.394 90.799 304.443 90.7785 cv
304.483 90.7785 304.514 90.799 304.543 90.8088 cv
304.903 90.8791 304.994 90.9992 304.943 91.3293 cv
304.903 91.5988 304.793 91.8391 304.753 92.1086 cv
304.744 92.1691 304.744 92.2385 304.833 92.2385 cv
304.874 92.2385 304.914 92.2287 304.934 92.1984 cv
305.034 92.1291 305.253 91.9084 305.323 91.8088 cv
305.403 91.6291 305.613 91.3488 305.894 91.3488 cv
306.014 91.3488 306.193 91.4084 306.144 91.5187 cv
306.133 91.5988 306.093 91.6789 306.093 91.7687 cv
306.083 91.8791 306.124 92.0588 306.104 92.2385 cv
306.083 92.4289 306.034 92.5588 305.943 92.7385 cv
305.974 93.009 305.903 93.4084 305.843 93.6984 cv
305.833 93.759 305.784 93.8391 305.753 93.9084 cv
305.724 94.1486 305.713 94.4191 305.733 94.6584 cv
305.744 94.7189 305.773 94.759 305.843 94.759 cv
305.894 94.759 305.914 94.759 305.943 94.7287 cv
306.244 94.5285 306.534 94.2092 306.713 94.0285 cv
306.753 93.8986 306.994 93.6584 307.054 93.549 cv
307.174 93.3488 307.224 93.1789 307.453 93.049 cv
307.514 93.0285 307.584 93.009 307.633 93.009 cv
307.733 93.009 307.873 93.0685 307.844 93.1584 cv
307.823 93.2687 307.674 93.3488 307.613 93.4689 cv
cp
f
304.224 91.5685 mo
304.034 91.5685 303.923 91.9787 303.923 92.0793 cv
303.914 92.1584 303.903 92.3391 304.014 92.3488 cv
304.023 92.3488 304.054 92.3185 304.073 92.299 cv
304.133 92.2189 304.323 91.8185 304.333 91.7385 cv
304.343 91.6584 304.343 91.5685 304.224 91.5685 cv
cp
307.613 93.4689 mo
307.504 93.7492 307.184 94.1086 307.014 94.3488 cv
306.923 94.4689 306.613 94.8185 306.403 94.8791 cv
306.224 95.0793 306.034 95.2287 305.894 95.259 cv
305.854 95.2687 305.753 95.299 305.724 95.299 cv
305.253 95.299 305.153 94.7785 305.204 94.4689 cv
305.213 94.3986 305.253 94.3185 305.273 94.2492 cv
305.403 93.1584 li
305.414 93.0685 305.403 92.6486 305.343 92.5988 cv
305.054 92.7492 304.903 92.8293 304.644 92.9191 cv
304.554 93.009 304.434 93.0685 304.323 93.1291 cv
304.233 93.1691 304.034 93.799 303.843 93.8986 cv
303.823 93.9084 303.724 93.9289 303.693 93.9289 cv
303.583 93.9289 303.514 93.8293 303.503 93.7385 cv
303.503 93.6691 303.784 93.1193 303.793 93.009 cv
303.833 92.7189 303.313 92.7492 303.374 92.299 cv
303.403 92.1086 303.454 91.8693 303.534 91.6584 cv
303.583 91.5685 303.633 91.4787 303.733 91.4387 cv
303.833 91.2385 304.054 90.8791 304.293 90.8185 cv
304.333 90.8088 304.394 90.799 304.443 90.7785 cv
304.483 90.7785 304.514 90.799 304.543 90.8088 cv
304.903 90.8791 304.994 90.9992 304.943 91.3293 cv
304.903 91.5988 304.793 91.8391 304.753 92.1086 cv
304.744 92.1691 304.744 92.2385 304.833 92.2385 cv
304.874 92.2385 304.914 92.2287 304.934 92.1984 cv
305.034 92.1291 305.253 91.9084 305.323 91.8088 cv
305.403 91.6291 305.613 91.3488 305.894 91.3488 cv
306.014 91.3488 306.193 91.4084 306.144 91.5187 cv
306.133 91.5988 306.093 91.6789 306.093 91.7687 cv
306.083 91.8791 306.124 92.0588 306.104 92.2385 cv
306.083 92.4289 306.034 92.5588 305.943 92.7385 cv
305.974 93.009 305.903 93.4084 305.843 93.6984 cv
305.833 93.759 305.784 93.8391 305.753 93.9084 cv
305.724 94.1486 305.713 94.4191 305.733 94.6584 cv
305.744 94.7189 305.773 94.759 305.843 94.759 cv
305.894 94.759 305.914 94.759 305.943 94.7287 cv
306.244 94.5285 306.534 94.2092 306.713 94.0285 cv
306.753 93.8986 306.994 93.6584 307.054 93.549 cv
307.174 93.3488 307.224 93.1789 307.453 93.049 cv
307.514 93.0285 307.584 93.009 307.633 93.009 cv
307.733 93.009 307.873 93.0685 307.844 93.1584 cv
307.823 93.2687 307.674 93.3488 307.613 93.4689 cv
cp
@
308.813 90.8088 mo
308.613 90.8088 308.424 90.6486 308.443 90.4787 cv
308.463 90.3391 308.684 90.1984 308.854 90.1984 cv
309.014 90.1984 309.184 90.3293 309.153 90.4689 cv
309.104 90.6389 309.023 90.8088 308.813 90.8088 cv
cp
309.713 94.259 mo
309.693 94.4689 308.703 95.509 308.453 95.6193 cv
308.323 95.6691 308.094 95.7785 307.943 95.7785 cv
307.764 95.7785 307.533 95.6984 307.493 95.5685 cv
307.383 95.3185 307.363 94.8986 307.424 94.6193 cv
307.393 94.4084 307.363 94.1691 307.333 93.9689 cv
307.333 93.9689 307.303 93.2785 307.363 92.7785 cv
307.403 92.549 307.493 92.3088 307.633 92.0588 cv
307.723 91.8986 307.963 91.7189 308.203 91.7189 cv
308.333 91.7189 308.443 91.7785 308.424 91.9191 cv
308.403 92.049 308.264 92.1291 308.223 92.259 cv
308.123 92.4689 308.083 92.9484 308.004 93.1193 cv
308.023 93.2492 308.033 93.3791 308.014 93.4992 cv
308.004 93.5685 307.963 93.6584 307.953 93.7492 cv
307.934 93.8791 308.023 94.0285 308.014 94.1584 cv
307.963 94.4689 li
307.953 94.549 308.004 94.9992 308.033 95.0793 cv
308.053 95.1193 308.123 95.2189 308.184 95.2189 cv
308.363 95.2189 308.693 94.8791 308.934 94.6789 cv
309.053 94.4484 309.623 93.7189 309.783 93.4387 cv
309.983 93.049 310.043 92.9592 310.293 92.9592 cv
310.514 92.9592 310.424 93.1584 310.344 93.3293 cv
310.193 93.6389 309.943 94.0793 309.713 94.259 cv
cp
f
308.813 90.8088 mo
308.613 90.8088 308.424 90.6486 308.443 90.4787 cv
308.463 90.3391 308.684 90.1984 308.854 90.1984 cv
309.014 90.1984 309.184 90.3293 309.153 90.4689 cv
309.104 90.6389 309.023 90.8088 308.813 90.8088 cv
cp
309.713 94.259 mo
309.693 94.4689 308.703 95.509 308.453 95.6193 cv
308.323 95.6691 308.094 95.7785 307.943 95.7785 cv
307.764 95.7785 307.533 95.6984 307.493 95.5685 cv
307.383 95.3185 307.363 94.8986 307.424 94.6193 cv
307.393 94.4084 307.363 94.1691 307.333 93.9689 cv
307.333 93.9689 307.303 93.2785 307.363 92.7785 cv
307.403 92.549 307.493 92.3088 307.633 92.0588 cv
307.723 91.8986 307.963 91.7189 308.203 91.7189 cv
308.333 91.7189 308.443 91.7785 308.424 91.9191 cv
308.403 92.049 308.264 92.1291 308.223 92.259 cv
308.123 92.4689 308.083 92.9484 308.004 93.1193 cv
308.023 93.2492 308.033 93.3791 308.014 93.4992 cv
308.004 93.5685 307.963 93.6584 307.953 93.7492 cv
307.934 93.8791 308.023 94.0285 308.014 94.1584 cv
307.963 94.4689 li
307.953 94.549 308.004 94.9992 308.033 95.0793 cv
308.053 95.1193 308.123 95.2189 308.184 95.2189 cv
308.363 95.2189 308.693 94.8791 308.934 94.6789 cv
309.053 94.4484 309.623 93.7189 309.783 93.4387 cv
309.983 93.049 310.043 92.9592 310.293 92.9592 cv
310.514 92.9592 310.424 93.1584 310.344 93.3293 cv
310.193 93.6389 309.943 94.0793 309.713 94.259 cv
cp
@
313.903 93.7687 mo
313.834 93.8791 313.773 94.0285 313.693 94.1389 cv
313.493 94.3986 313.143 94.759 312.793 94.9387 cv
312.363 95.3185 311.703 95.6389 311.123 95.6389 cv
311.004 95.6389 310.883 95.6193 310.793 95.5793 cv
310.243 95.3986 310.254 95.0988 310.243 94.6584 cv
310.283 93.8488 310.363 93.6584 310.473 93.3293 cv
310.334 93.4387 310.123 93.6691 310.043 93.6691 cv
309.924 93.6691 309.733 93.5588 309.754 93.4592 cv
309.764 93.3488 310.424 92.4484 310.803 92.1584 cv
311.163 91.5988 311.653 91.4484 311.834 91.3986 cv
312.004 91.3293 312.264 91.2687 312.463 91.2687 cv
312.693 91.2687 313.043 91.5588 312.983 91.759 cv
312.924 91.9484 312.783 92.2492 312.543 92.2492 cv
312.354 92.2492 312.254 91.8986 311.963 91.8986 cv
311.553 91.8986 311.334 92.509 311.153 92.759 cv
311.133 92.9484 311.023 93.3488 311.023 93.3488 cv
310.993 93.4484 310.983 93.6584 310.963 93.759 cv
310.934 93.8488 310.924 94.0685 310.854 94.2189 cv
310.873 94.509 310.863 94.6789 311.073 94.9387 cv
311.153 95.0285 311.373 95.0285 311.543 95.0285 cv
311.653 95.0285 311.873 94.9787 311.903 94.9689 cv
312.563 94.7785 313.334 93.799 313.553 93.4592 cv
313.584 93.3293 313.674 93.2092 313.764 93.1193 cv
313.834 93.0588 313.993 93.0285 314.073 93.0285 cv
314.203 93.0285 314.363 93.049 314.344 93.1984 cv
314.334 93.3693 314.043 93.5988 313.903 93.7687 cv
cp
f
313.903 93.7687 mo
313.834 93.8791 313.773 94.0285 313.693 94.1389 cv
313.493 94.3986 313.143 94.759 312.793 94.9387 cv
312.363 95.3185 311.703 95.6389 311.123 95.6389 cv
311.004 95.6389 310.883 95.6193 310.793 95.5793 cv
310.243 95.3986 310.254 95.0988 310.243 94.6584 cv
310.283 93.8488 310.363 93.6584 310.473 93.3293 cv
310.334 93.4387 310.123 93.6691 310.043 93.6691 cv
309.924 93.6691 309.733 93.5588 309.754 93.4592 cv
309.764 93.3488 310.424 92.4484 310.803 92.1584 cv
311.163 91.5988 311.653 91.4484 311.834 91.3986 cv
312.004 91.3293 312.264 91.2687 312.463 91.2687 cv
312.693 91.2687 313.043 91.5588 312.983 91.759 cv
312.924 91.9484 312.783 92.2492 312.543 92.2492 cv
312.354 92.2492 312.254 91.8986 311.963 91.8986 cv
311.553 91.8986 311.334 92.509 311.153 92.759 cv
311.133 92.9484 311.023 93.3488 311.023 93.3488 cv
310.993 93.4484 310.983 93.6584 310.963 93.759 cv
310.934 93.8488 310.924 94.0685 310.854 94.2189 cv
310.873 94.509 310.863 94.6789 311.073 94.9387 cv
311.153 95.0285 311.373 95.0285 311.543 95.0285 cv
311.653 95.0285 311.873 94.9787 311.903 94.9689 cv
312.563 94.7785 313.334 93.799 313.553 93.4592 cv
313.584 93.3293 313.674 93.2092 313.764 93.1193 cv
313.834 93.0588 313.993 93.0285 314.073 93.0285 cv
314.203 93.0285 314.363 93.049 314.344 93.1984 cv
314.334 93.3693 314.043 93.5988 313.903 93.7687 cv
cp
@
315.713 92.1486 mo
315.512 92.1486 315.282 92.3293 315.102 92.3586 cv
314.582 92.7492 313.932 93.7785 313.852 94.3488 cv
313.842 94.4592 313.842 95.049 314.022 95.0392 cv
314.242 95.0392 314.612 94.4787 314.762 94.3293 cv
314.912 94.1691 315.192 93.8391 315.362 93.6486 cv
315.512 93.4191 316.082 92.6691 316.122 92.3986 cv
316.133 92.2287 315.862 92.1486 315.713 92.1486 cv
cp
318.242 93.9191 mo
318.152 94.0793 317.633 94.9787 317.463 95.0685 cv
317.213 95.4689 316.842 95.8088 316.512 95.8088 cv
316.202 95.8088 315.832 95.5588 315.793 95.2785 cv
315.702 95.1486 315.692 94.9289 315.692 94.7687 cv
315.692 94.6486 315.752 94.4689 315.762 94.3586 cv
315.782 94.2785 315.752 94.1486 315.643 94.1486 cv
315.582 94.1486 315.492 94.2189 315.452 94.259 cv
315.122 94.6584 314.852 95.1193 314.412 95.4484 cv
314.313 95.5187 313.982 95.5793 313.842 95.5793 cv
313.442 95.5793 313.282 95.0685 313.242 94.8088 cv
313.213 94.5988 313.282 94.3586 313.313 94.1389 cv
313.342 93.9289 313.442 93.6789 313.582 93.4787 cv
313.803 92.8391 314.852 91.6291 315.692 91.6291 cv
315.883 91.6291 316.502 91.7492 316.502 91.9387 cv
316.502 91.9592 316.532 92.0793 316.532 92.0988 cv
316.612 92.1984 316.912 92.1984 316.862 92.4592 cv
316.852 92.5588 316.813 92.7092 316.752 92.799 cv
316.732 93.0285 316.682 93.2189 316.643 93.4289 cv
316.602 93.5793 316.512 93.7785 316.442 93.8986 cv
316.482 94.0392 316.412 94.3791 316.412 94.3791 cv
316.412 94.4484 316.352 94.5285 316.342 94.5685 cv
316.332 94.6984 316.383 95.2687 316.582 95.2687 cv
316.813 95.2687 317.223 94.6984 317.482 94.3986 cv
317.652 94.0187 317.862 93.7092 317.902 93.6486 cv
318.053 93.3791 318.122 93.0588 318.452 93.0588 cv
318.622 93.0588 318.662 93.1584 318.652 93.259 cv
318.633 93.3791 318.303 93.7785 318.242 93.9191 cv
cp
f
315.713 92.1486 mo
315.512 92.1486 315.282 92.3293 315.102 92.3586 cv
314.582 92.7492 313.932 93.7785 313.852 94.3488 cv
313.842 94.4592 313.842 95.049 314.022 95.0392 cv
314.242 95.0392 314.612 94.4787 314.762 94.3293 cv
314.912 94.1691 315.192 93.8391 315.362 93.6486 cv
315.512 93.4191 316.082 92.6691 316.122 92.3986 cv
316.133 92.2287 315.862 92.1486 315.713 92.1486 cv
cp
318.242 93.9191 mo
318.152 94.0793 317.633 94.9787 317.463 95.0685 cv
317.213 95.4689 316.842 95.8088 316.512 95.8088 cv
316.202 95.8088 315.832 95.5588 315.793 95.2785 cv
315.702 95.1486 315.692 94.9289 315.692 94.7687 cv
315.692 94.6486 315.752 94.4689 315.762 94.3586 cv
315.782 94.2785 315.752 94.1486 315.643 94.1486 cv
315.582 94.1486 315.492 94.2189 315.452 94.259 cv
315.122 94.6584 314.852 95.1193 314.412 95.4484 cv
314.313 95.5187 313.982 95.5793 313.842 95.5793 cv
313.442 95.5793 313.282 95.0685 313.242 94.8088 cv
313.213 94.5988 313.282 94.3586 313.313 94.1389 cv
313.342 93.9289 313.442 93.6789 313.582 93.4787 cv
313.803 92.8391 314.852 91.6291 315.692 91.6291 cv
315.883 91.6291 316.502 91.7492 316.502 91.9387 cv
316.502 91.9592 316.532 92.0793 316.532 92.0988 cv
316.612 92.1984 316.912 92.1984 316.862 92.4592 cv
316.852 92.5588 316.813 92.7092 316.752 92.799 cv
316.732 93.0285 316.682 93.2189 316.643 93.4289 cv
316.602 93.5793 316.512 93.7785 316.442 93.8986 cv
316.482 94.0392 316.412 94.3791 316.412 94.3791 cv
316.412 94.4484 316.352 94.5285 316.342 94.5685 cv
316.332 94.6984 316.383 95.2687 316.582 95.2687 cv
316.813 95.2687 317.223 94.6984 317.482 94.3986 cv
317.652 94.0187 317.862 93.7092 317.902 93.6486 cv
318.053 93.3791 318.122 93.0588 318.452 93.0588 cv
318.622 93.0588 318.662 93.1584 318.652 93.259 cv
318.633 93.3791 318.303 93.7785 318.242 93.9191 cv
cp
@
324.082 93.509 mo
324.032 93.5685 324.032 93.6389 323.992 93.7092 cv
323.893 93.8791 322.872 95.049 322.682 95.0988 cv
322.612 95.299 322.082 95.6389 321.922 95.6584 cv
321.883 95.6691 321.732 95.7092 321.702 95.7189 cv
321.482 95.7092 321.372 95.3391 321.322 95.1691 cv
321.313 95.0988 321.272 94.8986 321.282 94.7687 cv
321.293 94.6984 321.293 94.5588 321.372 94.4191 cv
321.303 94.2492 321.293 94.1193 321.313 93.9592 cv
321.353 93.6691 li
321.402 93.3791 321.342 93.0187 321.303 92.7287 cv
321.282 92.6789 321.223 92.6584 321.172 92.6584 cv
321.092 92.6584 320.992 92.7385 320.922 92.799 cv
320.432 93.1789 320.303 93.5588 320.103 93.7785 cv
320.112 93.9689 320.032 94.1389 319.932 94.3586 cv
319.742 94.7785 319.592 95.2092 319.432 95.6389 cv
319.402 95.7385 319.252 95.8293 319.133 95.8293 cv
318.973 95.8293 318.883 95.7287 318.902 95.5793 cv
318.902 95.5392 318.942 95.4787 318.952 95.4387 cv
319.002 95.1291 319.032 94.6486 319.152 94.4689 cv
319.072 94.3088 319.103 94.1486 319.122 94.009 cv
319.172 93.6984 li
319.192 93.5285 319.213 93.1691 319.202 92.9787 cv
319.192 92.8791 319.122 92.7092 318.973 92.7092 cv
318.803 92.7092 318.502 93.5392 318.322 93.5392 cv
318.202 93.5392 318.043 93.4191 318.053 93.3185 cv
318.082 93.1789 318.252 92.6086 318.482 92.4787 cv
318.512 92.3088 318.782 92.0793 318.952 92.0793 cv
319.012 92.0793 319.133 92.1193 319.182 92.1291 cv
319.702 92.3391 319.543 92.8488 319.772 93.1086 cv
319.772 93.1291 319.813 93.1389 319.832 93.1389 cv
319.973 93.1389 320.522 92.2492 321.252 92.2385 cv
321.293 92.2385 321.322 92.2492 321.353 92.259 cv
321.902 92.3791 321.793 92.4387 321.922 92.8088 cv
321.952 92.8986 322.002 92.9689 321.992 93.0793 cv
321.973 93.2785 321.902 93.4787 321.872 93.6789 cv
321.853 93.7687 321.912 94.8586 321.932 94.9592 cv
321.932 94.9992 321.973 95.0285 322.022 95.0285 cv
322.242 95.0285 322.922 94.2092 323.082 94.1486 cv
323.133 93.9289 323.603 93.3293 323.633 93.259 cv
323.692 93.1291 323.782 92.8693 323.973 92.8088 cv
324.032 92.7785 324.122 92.7687 324.182 92.759 cv
324.313 92.759 324.442 92.8293 324.422 92.9592 cv
324.412 92.9992 324.112 93.4289 324.082 93.509 cv
cp
f
324.082 93.509 mo
324.032 93.5685 324.032 93.6389 323.992 93.7092 cv
323.893 93.8791 322.872 95.049 322.682 95.0988 cv
322.612 95.299 322.082 95.6389 321.922 95.6584 cv
321.883 95.6691 321.732 95.7092 321.702 95.7189 cv
321.482 95.7092 321.372 95.3391 321.322 95.1691 cv
321.313 95.0988 321.272 94.8986 321.282 94.7687 cv
321.293 94.6984 321.293 94.5588 321.372 94.4191 cv
321.303 94.2492 321.293 94.1193 321.313 93.9592 cv
321.353 93.6691 li
321.402 93.3791 321.342 93.0187 321.303 92.7287 cv
321.282 92.6789 321.223 92.6584 321.172 92.6584 cv
321.092 92.6584 320.992 92.7385 320.922 92.799 cv
320.432 93.1789 320.303 93.5588 320.103 93.7785 cv
320.112 93.9689 320.032 94.1389 319.932 94.3586 cv
319.742 94.7785 319.592 95.2092 319.432 95.6389 cv
319.402 95.7385 319.252 95.8293 319.133 95.8293 cv
318.973 95.8293 318.883 95.7287 318.902 95.5793 cv
318.902 95.5392 318.942 95.4787 318.952 95.4387 cv
319.002 95.1291 319.032 94.6486 319.152 94.4689 cv
319.072 94.3088 319.103 94.1486 319.122 94.009 cv
319.172 93.6984 li
319.192 93.5285 319.213 93.1691 319.202 92.9787 cv
319.192 92.8791 319.122 92.7092 318.973 92.7092 cv
318.803 92.7092 318.502 93.5392 318.322 93.5392 cv
318.202 93.5392 318.043 93.4191 318.053 93.3185 cv
318.082 93.1789 318.252 92.6086 318.482 92.4787 cv
318.512 92.3088 318.782 92.0793 318.952 92.0793 cv
319.012 92.0793 319.133 92.1193 319.182 92.1291 cv
319.702 92.3391 319.543 92.8488 319.772 93.1086 cv
319.772 93.1291 319.813 93.1389 319.832 93.1389 cv
319.973 93.1389 320.522 92.2492 321.252 92.2385 cv
321.293 92.2385 321.322 92.2492 321.353 92.259 cv
321.902 92.3791 321.793 92.4387 321.922 92.8088 cv
321.952 92.8986 322.002 92.9689 321.992 93.0793 cv
321.973 93.2785 321.902 93.4787 321.872 93.6789 cv
321.853 93.7687 321.912 94.8586 321.932 94.9592 cv
321.932 94.9992 321.973 95.0285 322.022 95.0285 cv
322.242 95.0285 322.922 94.2092 323.082 94.1486 cv
323.133 93.9289 323.603 93.3293 323.633 93.259 cv
323.692 93.1291 323.782 92.8693 323.973 92.8088 cv
324.032 92.7785 324.122 92.7687 324.182 92.759 cv
324.313 92.759 324.442 92.8293 324.422 92.9592 cv
324.412 92.9992 324.112 93.4289 324.082 93.509 cv
cp
@
330.612 94.0793 mo
330.202 94.6789 329.202 95.6584 328.893 95.7287 cv
328.862 95.9084 328.383 96.1086 328.162 96.1789 cv
328.053 96.2287 327.643 96.3088 327.543 96.3088 cv
327.252 96.3088 326.963 96.2492 326.762 96.1193 cv
326.502 95.9992 326.242 95.5392 326.242 95.299 cv
326.213 95.1789 326.162 95.0285 326.182 94.9289 cv
326.342 93.9084 li
326.353 93.8391 326.373 93.759 326.402 93.6789 cv
326.473 93.4387 326.553 93.1789 326.633 92.9387 cv
326.652 92.8293 326.702 92.6486 326.793 92.6086 cv
326.782 92.4992 326.803 92.3586 326.862 92.2785 cv
326.982 92.0392 327.112 91.7785 327.202 91.5392 cv
327.442 91.0685 327.633 90.6584 327.932 90.2189 cv
328.053 90.0588 328.332 89.8693 328.532 89.8693 cv
328.752 89.8693 328.853 89.9191 329.032 90.0793 cv
329.252 90.009 329.902 90.5685 329.842 91.0392 cv
329.803 91.2385 329.732 91.9191 329.383 91.9191 cv
329.213 91.9191 329.092 91.8293 329.112 91.6789 cv
329.152 91.4787 329.313 91.2687 329.342 91.0988 cv
329.383 90.7785 329.092 90.4387 328.702 90.4387 cv
328.332 90.4387 328.162 91.0285 328.002 91.2492 cv
327.942 91.3693 327.853 91.4787 327.782 91.6193 cv
327.563 91.9289 327.502 92.2785 327.342 92.6086 cv
327.202 92.8586 327.092 93.1193 327.043 93.3791 cv
327.012 93.4592 327.012 93.5285 327.002 93.5793 cv
326.982 93.6691 326.893 93.7687 326.873 93.8488 cv
326.873 93.8488 326.862 94.3488 326.742 94.4387 cv
326.813 94.5685 326.742 94.9289 326.742 94.9289 cv
326.742 95.3088 326.932 95.9191 327.482 95.9191 cv
327.803 95.9191 328.272 95.6789 328.512 95.4787 cv
328.883 95.2287 329.732 94.509 329.893 94.1389 cv
329.942 94.0187 329.902 93.8693 330.053 93.7687 cv
330.103 93.7385 330.242 93.7189 330.313 93.7189 cv
330.412 93.7189 330.742 93.7785 330.713 93.8791 cv
330.713 93.9289 330.633 94.0588 330.612 94.0793 cv
cp
f
330.612 94.0793 mo
330.202 94.6789 329.202 95.6584 328.893 95.7287 cv
328.862 95.9084 328.383 96.1086 328.162 96.1789 cv
328.053 96.2287 327.643 96.3088 327.543 96.3088 cv
327.252 96.3088 326.963 96.2492 326.762 96.1193 cv
326.502 95.9992 326.242 95.5392 326.242 95.299 cv
326.213 95.1789 326.162 95.0285 326.182 94.9289 cv
326.342 93.9084 li
326.353 93.8391 326.373 93.759 326.402 93.6789 cv
326.473 93.4387 326.553 93.1789 326.633 92.9387 cv
326.652 92.8293 326.702 92.6486 326.793 92.6086 cv
326.782 92.4992 326.803 92.3586 326.862 92.2785 cv
326.982 92.0392 327.112 91.7785 327.202 91.5392 cv
327.442 91.0685 327.633 90.6584 327.932 90.2189 cv
328.053 90.0588 328.332 89.8693 328.532 89.8693 cv
328.752 89.8693 328.853 89.9191 329.032 90.0793 cv
329.252 90.009 329.902 90.5685 329.842 91.0392 cv
329.803 91.2385 329.732 91.9191 329.383 91.9191 cv
329.213 91.9191 329.092 91.8293 329.112 91.6789 cv
329.152 91.4787 329.313 91.2687 329.342 91.0988 cv
329.383 90.7785 329.092 90.4387 328.702 90.4387 cv
328.332 90.4387 328.162 91.0285 328.002 91.2492 cv
327.942 91.3693 327.853 91.4787 327.782 91.6193 cv
327.563 91.9289 327.502 92.2785 327.342 92.6086 cv
327.202 92.8586 327.092 93.1193 327.043 93.3791 cv
327.012 93.4592 327.012 93.5285 327.002 93.5793 cv
326.982 93.6691 326.893 93.7687 326.873 93.8488 cv
326.873 93.8488 326.862 94.3488 326.742 94.4387 cv
326.813 94.5685 326.742 94.9289 326.742 94.9289 cv
326.742 95.3088 326.932 95.9191 327.482 95.9191 cv
327.803 95.9191 328.272 95.6789 328.512 95.4787 cv
328.883 95.2287 329.732 94.509 329.893 94.1389 cv
329.942 94.0187 329.902 93.8693 330.053 93.7687 cv
330.103 93.7385 330.242 93.7189 330.313 93.7189 cv
330.412 93.7189 330.742 93.7785 330.713 93.8791 cv
330.713 93.9289 330.633 94.0588 330.612 94.0793 cv
cp
@
332.723 89.8586 mo
332.683 89.8586 332.643 89.8791 332.633 89.8791 cv
332.413 90.1193 332.223 90.9289 332.163 91.2092 cv
332.173 91.2385 332.143 91.4191 332.133 91.4289 cv
332.133 91.4787 332.203 91.5187 332.232 91.509 cv
332.463 91.3488 332.833 90.1691 332.813 89.9484 cv
332.813 89.8986 332.773 89.8586 332.723 89.8586 cv
cp
334.213 93.4992 mo
333.963 94.009 333.413 94.7385 333.242 94.799 cv
333.213 94.9191 333.023 95.1389 332.953 95.2092 cv
332.713 95.4484 332.104 95.8293 331.703 95.8293 cv
331.513 95.8293 331.322 95.7092 331.263 95.5588 cv
331.203 95.3088 331.152 95.2092 331.163 94.9689 cv
331.173 94.8586 331.203 94.7385 331.232 94.6486 cv
331.223 94.5793 331.173 94.4787 331.183 94.4387 cv
331.203 94.1789 331.173 93.9787 331.213 93.7287 cv
331.273 93.2785 331.013 93.299 331.043 93.049 cv
331.083 92.7492 331.354 92.8391 331.413 92.4992 cv
331.543 91.5392 li
331.553 91.4787 331.572 91.4289 331.643 91.3791 cv
331.683 91.0988 331.863 89.9787 332.033 89.7189 cv
332.123 89.5793 332.242 89.4992 332.373 89.4484 cv
332.482 89.2687 332.683 89.1691 332.854 89.1691 cv
333.253 89.1691 333.363 89.8185 333.322 90.0988 cv
333.083 91.759 331.863 92.9592 331.803 93.1789 cv
331.803 93.2385 331.773 93.4787 331.713 93.5588 cv
331.753 93.7287 331.783 93.9689 331.763 94.1584 cv
331.732 94.5285 331.572 95.3586 331.933 95.3586 cv
332.063 95.3586 332.463 95.049 332.643 94.9992 cv
332.742 94.759 333.322 94.0793 333.433 93.9387 cv
333.503 93.7785 333.643 93.5588 333.723 93.4191 cv
333.753 93.3488 333.803 93.2785 333.813 93.2092 cv
333.822 93.0988 334.013 93.0187 334.113 93.0187 cv
334.263 93.0187 334.273 93.1984 334.263 93.299 cv
334.253 93.3586 334.232 93.4387 334.213 93.4992 cv
cp
f
332.723 89.8586 mo
332.683 89.8586 332.643 89.8791 332.633 89.8791 cv
332.413 90.1193 332.223 90.9289 332.163 91.2092 cv
332.173 91.2385 332.143 91.4191 332.133 91.4289 cv
332.133 91.4787 332.203 91.5187 332.232 91.509 cv
332.463 91.3488 332.833 90.1691 332.813 89.9484 cv
332.813 89.8986 332.773 89.8586 332.723 89.8586 cv
cp
334.213 93.4992 mo
333.963 94.009 333.413 94.7385 333.242 94.799 cv
333.213 94.9191 333.023 95.1389 332.953 95.2092 cv
332.713 95.4484 332.104 95.8293 331.703 95.8293 cv
331.513 95.8293 331.322 95.7092 331.263 95.5588 cv
331.203 95.3088 331.152 95.2092 331.163 94.9689 cv
331.173 94.8586 331.203 94.7385 331.232 94.6486 cv
331.223 94.5793 331.173 94.4787 331.183 94.4387 cv
331.203 94.1789 331.173 93.9787 331.213 93.7287 cv
331.273 93.2785 331.013 93.299 331.043 93.049 cv
331.083 92.7492 331.354 92.8391 331.413 92.4992 cv
331.543 91.5392 li
331.553 91.4787 331.572 91.4289 331.643 91.3791 cv
331.683 91.0988 331.863 89.9787 332.033 89.7189 cv
332.123 89.5793 332.242 89.4992 332.373 89.4484 cv
332.482 89.2687 332.683 89.1691 332.854 89.1691 cv
333.253 89.1691 333.363 89.8185 333.322 90.0988 cv
333.083 91.759 331.863 92.9592 331.803 93.1789 cv
331.803 93.2385 331.773 93.4787 331.713 93.5588 cv
331.753 93.7287 331.783 93.9689 331.763 94.1584 cv
331.732 94.5285 331.572 95.3586 331.933 95.3586 cv
332.063 95.3586 332.463 95.049 332.643 94.9992 cv
332.742 94.759 333.322 94.0793 333.433 93.9387 cv
333.503 93.7785 333.643 93.5588 333.723 93.4191 cv
333.753 93.3488 333.803 93.2785 333.813 93.2092 cv
333.822 93.0988 334.013 93.0187 334.113 93.0187 cv
334.263 93.0187 334.273 93.1984 334.263 93.299 cv
334.253 93.3586 334.232 93.4387 334.213 93.4992 cv
cp
@
335.852 92.1486 mo
335.65 92.1486 335.421 92.3293 335.24 92.3586 cv
334.721 92.7492 334.07 93.7785 333.99 94.3488 cv
333.98 94.4592 333.98 95.049 334.161 95.0392 cv
334.381 95.0392 334.751 94.4787 334.9 94.3293 cv
335.051 94.1691 335.331 93.8391 335.501 93.6486 cv
335.65 93.4191 336.221 92.6691 336.261 92.3986 cv
336.271 92.2287 336.001 92.1486 335.852 92.1486 cv
cp
338.381 93.9191 mo
338.291 94.0793 337.771 94.9787 337.602 95.0685 cv
337.352 95.4689 336.98 95.8088 336.65 95.8088 cv
336.341 95.8088 335.971 95.5588 335.932 95.2785 cv
335.841 95.1486 335.831 94.9289 335.831 94.7687 cv
335.831 94.6486 335.891 94.4689 335.9 94.3586 cv
335.921 94.2785 335.891 94.1486 335.781 94.1486 cv
335.721 94.1486 335.631 94.2189 335.591 94.259 cv
335.261 94.6584 334.99 95.1193 334.551 95.4484 cv
334.451 95.5187 334.121 95.5793 333.98 95.5793 cv
333.581 95.5793 333.421 95.0685 333.381 94.8088 cv
333.352 94.5988 333.421 94.3586 333.451 94.1389 cv
333.48 93.9289 333.581 93.6789 333.721 93.4787 cv
333.941 92.8391 334.99 91.6291 335.831 91.6291 cv
336.021 91.6291 336.641 91.7492 336.641 91.9387 cv
336.641 91.9592 336.671 92.0793 336.671 92.0988 cv
336.751 92.1984 337.051 92.1984 337.001 92.4592 cv
336.99 92.5588 336.951 92.7092 336.891 92.799 cv
336.871 93.0285 336.82 93.2189 336.781 93.4289 cv
336.74 93.5793 336.65 93.7785 336.581 93.8986 cv
336.621 94.0392 336.551 94.3791 336.551 94.3791 cv
336.551 94.4484 336.49 94.5285 336.48 94.5685 cv
336.471 94.6984 336.521 95.2687 336.721 95.2687 cv
336.951 95.2687 337.361 94.6984 337.621 94.3986 cv
337.791 94.0187 338.001 93.7092 338.041 93.6486 cv
338.191 93.3791 338.261 93.0588 338.591 93.0588 cv
338.761 93.0588 338.801 93.1584 338.791 93.259 cv
338.771 93.3791 338.441 93.7785 338.381 93.9191 cv
cp
f
335.852 92.1486 mo
335.65 92.1486 335.421 92.3293 335.24 92.3586 cv
334.721 92.7492 334.07 93.7785 333.99 94.3488 cv
333.98 94.4592 333.98 95.049 334.161 95.0392 cv
334.381 95.0392 334.751 94.4787 334.9 94.3293 cv
335.051 94.1691 335.331 93.8391 335.501 93.6486 cv
335.65 93.4191 336.221 92.6691 336.261 92.3986 cv
336.271 92.2287 336.001 92.1486 335.852 92.1486 cv
cp
338.381 93.9191 mo
338.291 94.0793 337.771 94.9787 337.602 95.0685 cv
337.352 95.4689 336.98 95.8088 336.65 95.8088 cv
336.341 95.8088 335.971 95.5588 335.932 95.2785 cv
335.841 95.1486 335.831 94.9289 335.831 94.7687 cv
335.831 94.6486 335.891 94.4689 335.9 94.3586 cv
335.921 94.2785 335.891 94.1486 335.781 94.1486 cv
335.721 94.1486 335.631 94.2189 335.591 94.259 cv
335.261 94.6584 334.99 95.1193 334.551 95.4484 cv
334.451 95.5187 334.121 95.5793 333.98 95.5793 cv
333.581 95.5793 333.421 95.0685 333.381 94.8088 cv
333.352 94.5988 333.421 94.3586 333.451 94.1389 cv
333.48 93.9289 333.581 93.6789 333.721 93.4787 cv
333.941 92.8391 334.99 91.6291 335.831 91.6291 cv
336.021 91.6291 336.641 91.7492 336.641 91.9387 cv
336.641 91.9592 336.671 92.0793 336.671 92.0988 cv
336.751 92.1984 337.051 92.1984 337.001 92.4592 cv
336.99 92.5588 336.951 92.7092 336.891 92.799 cv
336.871 93.0285 336.82 93.2189 336.781 93.4289 cv
336.74 93.5793 336.65 93.7785 336.581 93.8986 cv
336.621 94.0392 336.551 94.3791 336.551 94.3791 cv
336.551 94.4484 336.49 94.5285 336.48 94.5685 cv
336.471 94.6984 336.521 95.2687 336.721 95.2687 cv
336.951 95.2687 337.361 94.6984 337.621 94.3986 cv
337.791 94.0187 338.001 93.7092 338.041 93.6486 cv
338.191 93.3791 338.261 93.0588 338.591 93.0588 cv
338.761 93.0588 338.801 93.1584 338.791 93.259 cv
338.771 93.3791 338.441 93.7785 338.381 93.9191 cv
cp
@
339.62 94.9992 mo
339.48 94.9992 339.101 95.3088 339.09 95.4289 cv
339.08 95.509 339.101 95.6486 339.17 95.7092 cv
339.2 95.7092 339.24 95.7287 339.271 95.7287 cv
339.461 95.7287 339.62 95.4992 339.641 95.3391 cv
339.65 95.2687 339.7 95.1291 339.721 95.049 cv
339.721 95.0285 339.69 94.9992 339.62 94.9992 cv
cp
341.041 93.9787 mo
340.971 94.1193 340.891 94.2189 340.801 94.3088 cv
340.59 94.4992 340.42 94.6291 340.28 94.7189 cv
340.271 94.799 340.25 95.1389 340.25 95.1691 cv
340.23 95.3185 340.141 95.7492 339.891 95.8293 cv
339.76 96.0187 339.45 96.1389 339.26 96.1389 cv
339.041 96.1389 338.461 95.759 338.48 95.6086 cv
338.541 95.2785 338.83 94.9289 339.12 94.799 cv
339.26 94.5793 339.561 94.4289 339.67 94.3693 cv
339.68 94.299 339.601 94.0392 339.58 93.7785 cv
339.48 93.6291 339.37 93.3693 339.33 93.2687 cv
339.28 93.1984 339.23 92.9689 339.12 92.9689 cv
339.08 92.9689 339.061 92.9689 339.041 93.0187 cv
338.94 93.1086 338.45 93.8293 338.33 93.9084 cv
338.28 94.009 338.23 94.1389 338.061 94.1789 cv
338.03 94.1984 338.021 94.2189 337.971 94.2189 cv
337.69 94.2385 337.801 93.9689 337.82 93.8586 cv
337.84 93.7287 338.541 92.8185 338.68 92.7385 cv
338.74 92.5588 338.87 92.4084 339.021 92.299 cv
339.381 91.9787 339.271 91.1486 339.93 91.1486 cv
340.101 91.1486 340.25 91.2189 340.25 91.3693 cv
340.25 91.6086 339.92 91.8185 339.83 91.9484 cv
339.851 92.049 339.73 92.4484 339.74 92.4787 cv
339.73 92.6789 339.791 92.9484 339.78 93.1193 cv
339.93 93.3088 339.971 93.6584 340.12 93.8791 cv
340.18 94.009 340.141 94.0793 340.32 94.0793 cv
340.42 94.0187 340.7 93.6789 340.971 93.4787 cv
341.07 93.2785 341.291 93.1086 341.301 93.0685 cv
341.4 92.9084 341.721 93.0392 341.721 93.2287 cv
341.721 93.3986 341.24 93.8391 341.041 93.9787 cv
cp
f
339.62 94.9992 mo
339.48 94.9992 339.101 95.3088 339.09 95.4289 cv
339.08 95.509 339.101 95.6486 339.17 95.7092 cv
339.2 95.7092 339.24 95.7287 339.271 95.7287 cv
339.461 95.7287 339.62 95.4992 339.641 95.3391 cv
339.65 95.2687 339.7 95.1291 339.721 95.049 cv
339.721 95.0285 339.69 94.9992 339.62 94.9992 cv
cp
341.041 93.9787 mo
340.971 94.1193 340.891 94.2189 340.801 94.3088 cv
340.59 94.4992 340.42 94.6291 340.28 94.7189 cv
340.271 94.799 340.25 95.1389 340.25 95.1691 cv
340.23 95.3185 340.141 95.7492 339.891 95.8293 cv
339.76 96.0187 339.45 96.1389 339.26 96.1389 cv
339.041 96.1389 338.461 95.759 338.48 95.6086 cv
338.541 95.2785 338.83 94.9289 339.12 94.799 cv
339.26 94.5793 339.561 94.4289 339.67 94.3693 cv
339.68 94.299 339.601 94.0392 339.58 93.7785 cv
339.48 93.6291 339.37 93.3693 339.33 93.2687 cv
339.28 93.1984 339.23 92.9689 339.12 92.9689 cv
339.08 92.9689 339.061 92.9689 339.041 93.0187 cv
338.94 93.1086 338.45 93.8293 338.33 93.9084 cv
338.28 94.009 338.23 94.1389 338.061 94.1789 cv
338.03 94.1984 338.021 94.2189 337.971 94.2189 cv
337.69 94.2385 337.801 93.9689 337.82 93.8586 cv
337.84 93.7287 338.541 92.8185 338.68 92.7385 cv
338.74 92.5588 338.87 92.4084 339.021 92.299 cv
339.381 91.9787 339.271 91.1486 339.93 91.1486 cv
340.101 91.1486 340.25 91.2189 340.25 91.3693 cv
340.25 91.6086 339.92 91.8185 339.83 91.9484 cv
339.851 92.049 339.73 92.4484 339.74 92.4787 cv
339.73 92.6789 339.791 92.9484 339.78 93.1193 cv
339.93 93.3088 339.971 93.6584 340.12 93.8791 cv
340.18 94.009 340.141 94.0793 340.32 94.0793 cv
340.42 94.0187 340.7 93.6789 340.971 93.4787 cv
341.07 93.2785 341.291 93.1086 341.301 93.0685 cv
341.4 92.9084 341.721 93.0392 341.721 93.2287 cv
341.721 93.3986 341.24 93.8391 341.041 93.9787 cv
cp
@
342.4 94.9992 mo
342.261 94.9992 341.881 95.3088 341.871 95.4289 cv
341.861 95.509 341.881 95.6486 341.951 95.7092 cv
341.98 95.7092 342.021 95.7287 342.051 95.7287 cv
342.24 95.7287 342.4 95.4992 342.42 95.3391 cv
342.431 95.2687 342.48 95.1291 342.5 95.049 cv
342.5 95.0285 342.471 94.9992 342.4 94.9992 cv
cp
343.82 93.9787 mo
343.75 94.1193 343.67 94.2189 343.58 94.3088 cv
343.371 94.4992 343.201 94.6291 343.061 94.7189 cv
343.051 94.799 343.031 95.1389 343.031 95.1691 cv
343.011 95.3185 342.92 95.7492 342.67 95.8293 cv
342.541 96.0187 342.23 96.1389 342.041 96.1389 cv
341.82 96.1389 341.24 95.759 341.261 95.6086 cv
341.32 95.2785 341.611 94.9289 341.9 94.799 cv
342.041 94.5793 342.341 94.4289 342.451 94.3693 cv
342.461 94.299 342.381 94.0392 342.361 93.7785 cv
342.261 93.6291 342.15 93.3693 342.111 93.2687 cv
342.061 93.1984 342.011 92.9689 341.9 92.9689 cv
341.861 92.9689 341.841 92.9689 341.82 93.0187 cv
341.721 93.1086 341.23 93.8293 341.111 93.9084 cv
341.061 94.009 341.011 94.1389 340.841 94.1789 cv
340.811 94.1984 340.801 94.2189 340.75 94.2189 cv
340.471 94.2385 340.58 93.9689 340.601 93.8586 cv
340.621 93.7287 341.32 92.8185 341.461 92.7385 cv
341.521 92.5588 341.65 92.4084 341.801 92.299 cv
342.16 91.9787 342.051 91.1486 342.711 91.1486 cv
342.881 91.1486 343.031 91.2189 343.031 91.3693 cv
343.031 91.6086 342.701 91.8185 342.611 91.9484 cv
342.631 92.049 342.511 92.4484 342.521 92.4787 cv
342.511 92.6789 342.57 92.9484 342.561 93.1193 cv
342.711 93.3088 342.75 93.6584 342.9 93.8791 cv
342.961 94.009 342.92 94.0793 343.101 94.0793 cv
343.201 94.0187 343.48 93.6789 343.75 93.4787 cv
343.851 93.2785 344.07 93.1086 344.08 93.0685 cv
344.181 92.9084 344.5 93.0392 344.5 93.2287 cv
344.5 93.3986 344.021 93.8391 343.82 93.9787 cv
cp
f
342.4 94.9992 mo
342.261 94.9992 341.881 95.3088 341.871 95.4289 cv
341.861 95.509 341.881 95.6486 341.951 95.7092 cv
341.98 95.7092 342.021 95.7287 342.051 95.7287 cv
342.24 95.7287 342.4 95.4992 342.42 95.3391 cv
342.431 95.2687 342.48 95.1291 342.5 95.049 cv
342.5 95.0285 342.471 94.9992 342.4 94.9992 cv
cp
343.82 93.9787 mo
343.75 94.1193 343.67 94.2189 343.58 94.3088 cv
343.371 94.4992 343.201 94.6291 343.061 94.7189 cv
343.051 94.799 343.031 95.1389 343.031 95.1691 cv
343.011 95.3185 342.92 95.7492 342.67 95.8293 cv
342.541 96.0187 342.23 96.1389 342.041 96.1389 cv
341.82 96.1389 341.24 95.759 341.261 95.6086 cv
341.32 95.2785 341.611 94.9289 341.9 94.799 cv
342.041 94.5793 342.341 94.4289 342.451 94.3693 cv
342.461 94.299 342.381 94.0392 342.361 93.7785 cv
342.261 93.6291 342.15 93.3693 342.111 93.2687 cv
342.061 93.1984 342.011 92.9689 341.9 92.9689 cv
341.861 92.9689 341.841 92.9689 341.82 93.0187 cv
341.721 93.1086 341.23 93.8293 341.111 93.9084 cv
341.061 94.009 341.011 94.1389 340.841 94.1789 cv
340.811 94.1984 340.801 94.2189 340.75 94.2189 cv
340.471 94.2385 340.58 93.9689 340.601 93.8586 cv
340.621 93.7287 341.32 92.8185 341.461 92.7385 cv
341.521 92.5588 341.65 92.4084 341.801 92.299 cv
342.16 91.9787 342.051 91.1486 342.711 91.1486 cv
342.881 91.1486 343.031 91.2189 343.031 91.3693 cv
343.031 91.6086 342.701 91.8185 342.611 91.9484 cv
342.631 92.049 342.511 92.4484 342.521 92.4787 cv
342.511 92.6789 342.57 92.9484 342.561 93.1193 cv
342.711 93.3088 342.75 93.6584 342.9 93.8791 cv
342.961 94.009 342.92 94.0793 343.101 94.0793 cv
343.201 94.0187 343.48 93.6789 343.75 93.4787 cv
343.851 93.2785 344.07 93.1086 344.08 93.0685 cv
344.181 92.9084 344.5 93.0392 344.5 93.2287 cv
344.5 93.3986 344.021 93.8391 343.82 93.9787 cv
cp
@
345.719 90.8088 mo
345.519 90.8088 345.328 90.6486 345.349 90.4787 cv
345.369 90.3391 345.588 90.1984 345.758 90.1984 cv
345.918 90.1984 346.088 90.3293 346.059 90.4689 cv
346.008 90.6389 345.929 90.8088 345.719 90.8088 cv
cp
346.619 94.259 mo
346.599 94.4689 345.608 95.509 345.358 95.6193 cv
345.229 95.6691 344.998 95.7785 344.849 95.7785 cv
344.668 95.7785 344.438 95.6984 344.398 95.5685 cv
344.289 95.3185 344.269 94.8986 344.328 94.6193 cv
344.299 94.4084 344.269 94.1691 344.238 93.9689 cv
344.238 93.9689 344.209 93.2785 344.269 92.7785 cv
344.309 92.549 344.398 92.3088 344.539 92.0588 cv
344.629 91.8986 344.869 91.7189 345.108 91.7189 cv
345.238 91.7189 345.349 91.7785 345.328 91.9191 cv
345.309 92.049 345.168 92.1291 345.129 92.259 cv
345.028 92.4689 344.988 92.9484 344.908 93.1193 cv
344.929 93.2492 344.938 93.3791 344.918 93.4992 cv
344.908 93.5685 344.869 93.6584 344.858 93.7492 cv
344.838 93.8791 344.929 94.0285 344.918 94.1584 cv
344.869 94.4689 li
344.858 94.549 344.908 94.9992 344.938 95.0793 cv
344.959 95.1193 345.028 95.2189 345.088 95.2189 cv
345.269 95.2189 345.599 94.8791 345.838 94.6789 cv
345.959 94.4484 346.528 93.7189 346.688 93.4387 cv
346.889 93.049 346.949 92.9592 347.199 92.9592 cv
347.418 92.9592 347.328 93.1584 347.248 93.3293 cv
347.099 93.6389 346.849 94.0793 346.619 94.259 cv
cp
f
345.719 90.8088 mo
345.519 90.8088 345.328 90.6486 345.349 90.4787 cv
345.369 90.3391 345.588 90.1984 345.758 90.1984 cv
345.918 90.1984 346.088 90.3293 346.059 90.4689 cv
346.008 90.6389 345.929 90.8088 345.719 90.8088 cv
cp
346.619 94.259 mo
346.599 94.4689 345.608 95.509 345.358 95.6193 cv
345.229 95.6691 344.998 95.7785 344.849 95.7785 cv
344.668 95.7785 344.438 95.6984 344.398 95.5685 cv
344.289 95.3185 344.269 94.8986 344.328 94.6193 cv
344.299 94.4084 344.269 94.1691 344.238 93.9689 cv
344.238 93.9689 344.209 93.2785 344.269 92.7785 cv
344.309 92.549 344.398 92.3088 344.539 92.0588 cv
344.629 91.8986 344.869 91.7189 345.108 91.7189 cv
345.238 91.7189 345.349 91.7785 345.328 91.9191 cv
345.309 92.049 345.168 92.1291 345.129 92.259 cv
345.028 92.4689 344.988 92.9484 344.908 93.1193 cv
344.929 93.2492 344.938 93.3791 344.918 93.4992 cv
344.908 93.5685 344.869 93.6584 344.858 93.7492 cv
344.838 93.8791 344.929 94.0285 344.918 94.1584 cv
344.869 94.4689 li
344.858 94.549 344.908 94.9992 344.938 95.0793 cv
344.959 95.1193 345.028 95.2189 345.088 95.2189 cv
345.269 95.2189 345.599 94.8791 345.838 94.6789 cv
345.959 94.4484 346.528 93.7189 346.688 93.4387 cv
346.889 93.049 346.949 92.9592 347.199 92.9592 cv
347.418 92.9592 347.328 93.1584 347.248 93.3293 cv
347.099 93.6389 346.849 94.0793 346.619 94.259 cv
cp
@
350.809 93.7687 mo
350.738 93.8791 350.679 94.0285 350.599 94.1389 cv
350.398 94.3986 350.049 94.759 349.699 94.9387 cv
349.269 95.3185 348.608 95.6389 348.028 95.6389 cv
347.908 95.6389 347.789 95.6193 347.699 95.5793 cv
347.148 95.3986 347.158 95.0988 347.148 94.6584 cv
347.188 93.8488 347.269 93.6584 347.379 93.3293 cv
347.238 93.4387 347.028 93.6691 346.949 93.6691 cv
346.828 93.6691 346.639 93.5588 346.658 93.4592 cv
346.668 93.3488 347.328 92.4484 347.709 92.1584 cv
348.068 91.5988 348.559 91.4484 348.738 91.3986 cv
348.908 91.3293 349.168 91.2687 349.369 91.2687 cv
349.599 91.2687 349.949 91.5588 349.889 91.759 cv
349.828 91.9484 349.688 92.2492 349.449 92.2492 cv
349.259 92.2492 349.158 91.8986 348.869 91.8986 cv
348.459 91.8986 348.238 92.509 348.059 92.759 cv
348.039 92.9484 347.929 93.3488 347.929 93.3488 cv
347.898 93.4484 347.889 93.6584 347.869 93.759 cv
347.838 93.8488 347.828 94.0685 347.759 94.2189 cv
347.778 94.509 347.769 94.6789 347.979 94.9387 cv
348.059 95.0285 348.278 95.0285 348.449 95.0285 cv
348.559 95.0285 348.778 94.9787 348.809 94.9689 cv
349.469 94.7785 350.238 93.799 350.459 93.4592 cv
350.488 93.3293 350.578 93.2092 350.668 93.1193 cv
350.738 93.0588 350.898 93.0285 350.979 93.0285 cv
351.108 93.0285 351.269 93.049 351.248 93.1984 cv
351.238 93.3693 350.949 93.5988 350.809 93.7687 cv
cp
f
350.809 93.7687 mo
350.738 93.8791 350.679 94.0285 350.599 94.1389 cv
350.398 94.3986 350.049 94.759 349.699 94.9387 cv
349.269 95.3185 348.608 95.6389 348.028 95.6389 cv
347.908 95.6389 347.789 95.6193 347.699 95.5793 cv
347.148 95.3986 347.158 95.0988 347.148 94.6584 cv
347.188 93.8488 347.269 93.6584 347.379 93.3293 cv
347.238 93.4387 347.028 93.6691 346.949 93.6691 cv
346.828 93.6691 346.639 93.5588 346.658 93.4592 cv
346.668 93.3488 347.328 92.4484 347.709 92.1584 cv
348.068 91.5988 348.559 91.4484 348.738 91.3986 cv
348.908 91.3293 349.168 91.2687 349.369 91.2687 cv
349.599 91.2687 349.949 91.5588 349.889 91.759 cv
349.828 91.9484 349.688 92.2492 349.449 92.2492 cv
349.259 92.2492 349.158 91.8986 348.869 91.8986 cv
348.459 91.8986 348.238 92.509 348.059 92.759 cv
348.039 92.9484 347.929 93.3488 347.929 93.3488 cv
347.898 93.4484 347.889 93.6584 347.869 93.759 cv
347.838 93.8488 347.828 94.0685 347.759 94.2189 cv
347.778 94.509 347.769 94.6789 347.979 94.9387 cv
348.059 95.0285 348.278 95.0285 348.449 95.0285 cv
348.559 95.0285 348.778 94.9787 348.809 94.9689 cv
349.469 94.7785 350.238 93.799 350.459 93.4592 cv
350.488 93.3293 350.578 93.2092 350.668 93.1193 cv
350.738 93.0588 350.898 93.0285 350.979 93.0285 cv
351.108 93.0285 351.269 93.049 351.248 93.1984 cv
351.238 93.3693 350.949 93.5988 350.809 93.7687 cv
cp
@
351.958 94.9992 mo
351.818 94.9992 351.438 95.3088 351.428 95.4289 cv
351.418 95.509 351.438 95.6486 351.508 95.7092 cv
351.538 95.7092 351.578 95.7287 351.608 95.7287 cv
351.799 95.7287 351.958 95.4992 351.979 95.3391 cv
351.988 95.2687 352.038 95.1291 352.059 95.049 cv
352.059 95.0285 352.028 94.9992 351.958 94.9992 cv
cp
353.379 93.9787 mo
353.309 94.1193 353.229 94.2189 353.139 94.3088 cv
352.928 94.4992 352.758 94.6291 352.618 94.7189 cv
352.608 94.799 352.588 95.1389 352.588 95.1691 cv
352.568 95.3185 352.479 95.7492 352.229 95.8293 cv
352.098 96.0187 351.788 96.1389 351.598 96.1389 cv
351.379 96.1389 350.799 95.759 350.818 95.6086 cv
350.879 95.2785 351.168 94.9289 351.458 94.799 cv
351.598 94.5793 351.898 94.4289 352.008 94.3693 cv
352.018 94.299 351.938 94.0392 351.918 93.7785 cv
351.818 93.6291 351.708 93.3693 351.668 93.2687 cv
351.618 93.1984 351.568 92.9689 351.458 92.9689 cv
351.418 92.9689 351.398 92.9689 351.379 93.0187 cv
351.278 93.1086 350.788 93.8293 350.668 93.9084 cv
350.618 94.009 350.568 94.1389 350.398 94.1789 cv
350.368 94.1984 350.358 94.2189 350.309 94.2189 cv
350.028 94.2385 350.139 93.9689 350.158 93.8586 cv
350.178 93.7287 350.879 92.8185 351.018 92.7385 cv
351.078 92.5588 351.208 92.4084 351.358 92.299 cv
351.719 91.9787 351.608 91.1486 352.268 91.1486 cv
352.438 91.1486 352.588 91.2189 352.588 91.3693 cv
352.588 91.6086 352.258 91.8185 352.168 91.9484 cv
352.188 92.049 352.068 92.4484 352.078 92.4787 cv
352.068 92.6789 352.129 92.9484 352.118 93.1193 cv
352.268 93.3088 352.309 93.6584 352.458 93.8791 cv
352.518 94.009 352.479 94.0793 352.658 94.0793 cv
352.758 94.0187 353.038 93.6789 353.309 93.4787 cv
353.408 93.2785 353.629 93.1086 353.639 93.0685 cv
353.738 92.9084 354.059 93.0392 354.059 93.2287 cv
354.059 93.3986 353.578 93.8391 353.379 93.9787 cv
cp
f
351.958 94.9992 mo
351.818 94.9992 351.438 95.3088 351.428 95.4289 cv
351.418 95.509 351.438 95.6486 351.508 95.7092 cv
351.538 95.7092 351.578 95.7287 351.608 95.7287 cv
351.799 95.7287 351.958 95.4992 351.979 95.3391 cv
351.988 95.2687 352.038 95.1291 352.059 95.049 cv
352.059 95.0285 352.028 94.9992 351.958 94.9992 cv
cp
353.379 93.9787 mo
353.309 94.1193 353.229 94.2189 353.139 94.3088 cv
352.928 94.4992 352.758 94.6291 352.618 94.7189 cv
352.608 94.799 352.588 95.1389 352.588 95.1691 cv
352.568 95.3185 352.479 95.7492 352.229 95.8293 cv
352.098 96.0187 351.788 96.1389 351.598 96.1389 cv
351.379 96.1389 350.799 95.759 350.818 95.6086 cv
350.879 95.2785 351.168 94.9289 351.458 94.799 cv
351.598 94.5793 351.898 94.4289 352.008 94.3693 cv
352.018 94.299 351.938 94.0392 351.918 93.7785 cv
351.818 93.6291 351.708 93.3693 351.668 93.2687 cv
351.618 93.1984 351.568 92.9689 351.458 92.9689 cv
351.418 92.9689 351.398 92.9689 351.379 93.0187 cv
351.278 93.1086 350.788 93.8293 350.668 93.9084 cv
350.618 94.009 350.568 94.1389 350.398 94.1789 cv
350.368 94.1984 350.358 94.2189 350.309 94.2189 cv
350.028 94.2385 350.139 93.9689 350.158 93.8586 cv
350.178 93.7287 350.879 92.8185 351.018 92.7385 cv
351.078 92.5588 351.208 92.4084 351.358 92.299 cv
351.719 91.9787 351.608 91.1486 352.268 91.1486 cv
352.438 91.1486 352.588 91.2189 352.588 91.3693 cv
352.588 91.6086 352.258 91.8185 352.168 91.9484 cv
352.188 92.049 352.068 92.4484 352.078 92.4787 cv
352.068 92.6789 352.129 92.9484 352.118 93.1193 cv
352.268 93.3088 352.309 93.6584 352.458 93.8791 cv
352.518 94.009 352.479 94.0793 352.658 94.0793 cv
352.758 94.0187 353.038 93.6789 353.309 93.4787 cv
353.408 93.2785 353.629 93.1086 353.639 93.0685 cv
353.738 92.9084 354.059 93.0392 354.059 93.2287 cv
354.059 93.3986 353.578 93.8391 353.379 93.9787 cv
cp
@
354.658 95.8791 mo
354.368 95.8791 353.969 95.6691 353.988 95.4289 cv
354.018 95.2092 354.348 94.8693 354.618 94.799 cv
354.719 94.759 354.788 94.759 354.889 94.759 cv
355.209 94.759 355.488 94.8791 355.448 95.1984 cv
355.389 95.5392 355.129 95.8986 354.658 95.8791 cv
cp
f
354.658 95.8791 mo
354.368 95.8791 353.969 95.6691 353.988 95.4289 cv
354.018 95.2092 354.348 94.8693 354.618 94.799 cv
354.719 94.759 354.788 94.759 354.889 94.759 cv
355.209 94.759 355.488 94.8791 355.448 95.1984 cv
355.389 95.5392 355.129 95.8986 354.658 95.8791 cv
cp
@
277.123 106.568 mo
276.953 106.658 276.549 106.771 276.039 106.771 cv
274.571 106.771 273.815 105.748 273.815 104.398 cv
273.815 102.787 274.849 101.899 276.134 101.899 cv
276.631 101.899 277.009 102.011 277.179 102.109 cv
276.978 102.948 li
276.789 102.858 276.518 102.774 276.171 102.774 cv
275.416 102.774 274.823 103.284 274.823 104.342 cv
274.823 105.286 275.327 105.882 276.178 105.882 cv
276.474 105.882 276.789 105.819 276.984 105.728 cv
277.123 106.568 li
cp
f
277.709 101.724 mo
278.667 101.724 li
278.667 103.684 li
278.679 103.684 li
278.78 103.529 278.906 103.41 279.057 103.326 cv
279.202 103.242 279.378 103.194 279.555 103.194 cv
280.166 103.194 280.632 103.662 280.632 104.698 cv
280.632 106.694 li
279.675 106.694 li
279.675 104.811 li
279.675 104.362 279.536 104.055 279.177 104.055 cv
278.925 104.055 278.768 104.237 278.698 104.433 cv
278.673 104.495 278.667 104.586 278.667 104.663 cv
278.667 106.694 li
277.709 106.694 li
277.709 101.724 li
cp
f
283.266 104.586 mo
283.266 104.334 283.165 103.894 282.73 103.894 cv
282.321 103.894 282.157 104.307 282.132 104.586 cv
283.266 104.586 li
cp
282.138 105.315 mo
282.169 105.763 282.56 105.973 283.007 105.973 cv
283.335 105.973 283.6 105.924 283.858 105.825 cv
283.984 106.546 li
283.669 106.694 283.285 106.764 282.869 106.764 cv
281.823 106.764 281.225 106.092 281.225 105.014 cv
281.225 104.146 281.716 103.187 282.781 103.187 cv
283.776 103.187 284.154 104.047 284.154 104.895 cv
284.154 105.076 284.135 105.237 284.123 105.321 cv
282.138 105.315 li
cp
f
284.721 105.77 mo
284.897 105.889 285.263 106.022 285.546 106.022 cv
285.836 106.022 285.956 105.916 285.956 105.741 cv
285.956 105.56 285.861 105.476 285.508 105.343 cv
284.866 105.112 284.62 104.72 284.626 104.32 cv
284.626 103.677 285.118 103.194 285.88 103.194 cv
286.239 103.194 286.554 103.291 286.743 103.397 cv
286.579 104.124 li
286.44 104.047 286.17 103.936 285.912 103.936 cv
285.678 103.936 285.546 104.04 285.546 104.208 cv
285.546 104.376 285.666 104.46 286.044 104.608 cv
286.63 104.824 286.869 105.16 286.875 105.657 cv
286.875 106.302 286.428 106.771 285.546 106.771 cv
285.143 106.771 284.784 106.665 284.551 106.526 cv
284.721 105.77 li
cp
f
288.532 102.34 mo
288.532 103.271 li
289.219 103.271 li
289.219 104.055 li
288.532 104.055 li
288.532 105.301 li
288.532 105.713 288.627 105.903 288.911 105.903 cv
289.043 105.903 289.106 105.896 289.194 105.874 cv
289.2 106.68 li
289.081 106.729 288.848 106.771 288.583 106.771 cv
288.274 106.771 288.016 106.652 287.858 106.477 cv
287.682 106.274 287.594 105.945 287.594 105.461 cv
287.594 104.055 li
287.184 104.055 li
287.184 103.271 li
287.594 103.271 li
287.594 102.626 li
288.532 102.34 li
cp
f
291.607 104.586 mo
291.607 104.334 291.507 103.894 291.072 103.894 cv
290.663 103.894 290.499 104.307 290.474 104.586 cv
291.607 104.586 li
cp
290.48 105.315 mo
290.511 105.763 290.902 105.973 291.349 105.973 cv
291.677 105.973 291.941 105.924 292.2 105.825 cv
292.326 106.546 li
292.011 106.694 291.626 106.764 291.21 106.764 cv
290.165 106.764 289.566 106.092 289.566 105.014 cv
289.566 104.146 290.058 103.187 291.123 103.187 cv
292.118 103.187 292.496 104.047 292.496 104.895 cv
292.496 105.076 292.477 105.237 292.464 105.321 cv
290.48 105.315 li
cp
f
293.075 104.398 mo
293.075 103.894 293.069 103.565 293.05 103.271 cv
293.869 103.271 li
293.907 103.907 li
293.932 103.907 li
294.089 103.404 294.461 103.194 294.764 103.194 cv
294.852 103.194 294.896 103.2 294.965 103.215 cv
294.965 104.216 li
294.883 104.201 294.808 104.188 294.701 104.188 cv
294.348 104.188 294.108 104.391 294.045 104.727 cv
294.033 104.796 294.026 104.873 294.026 104.965 cv
294.026 106.694 li
293.069 106.694 li
293.075 104.398 li
cp
f
296.798 105.602 mo
297.05 105.748 297.454 105.896 297.863 105.896 cv
298.304 105.896 298.537 105.693 298.537 105.377 cv
298.537 105.091 298.335 104.915 297.825 104.72 cv
297.12 104.44 296.653 104.006 296.653 103.313 cv
296.653 102.508 297.265 101.899 298.26 101.899 cv
298.745 101.899 299.091 102.003 299.344 102.137 cv
299.129 102.99 li
298.965 102.9 298.657 102.767 298.248 102.767 cv
297.832 102.767 297.63 102.984 297.63 103.222 cv
297.63 103.523 297.863 103.655 298.417 103.894 cv
299.167 104.201 299.514 104.636 299.514 105.308 cv
299.514 106.099 298.972 106.771 297.806 106.771 cv
297.321 106.771 296.842 106.623 296.603 106.477 cv
296.798 105.602 li
cp
f
301.083 105.224 mo
301.083 105.308 301.089 105.377 301.102 105.447 cv
301.165 105.735 301.385 105.951 301.662 105.951 cv
302.078 105.951 302.324 105.567 302.324 104.986 cv
302.324 104.44 302.103 104.027 301.675 104.027 cv
301.404 104.027 301.165 104.25 301.102 104.566 cv
301.089 104.621 301.083 104.692 301.083 104.754 cv
301.083 105.224 li
cp
300.125 104.418 mo
300.125 103.971 300.112 103.593 300.1 103.271 cv
300.932 103.271 li
300.976 103.746 li
300.988 103.746 li
301.215 103.39 301.568 103.194 302.015 103.194 cv
302.689 103.194 303.294 103.845 303.294 104.937 cv
303.294 106.183 302.582 106.771 301.896 106.771 cv
301.523 106.771 301.234 106.603 301.095 106.378 cv
301.083 106.378 li
301.083 108.079 li
300.125 108.079 li
300.125 104.418 li
cp
f
303.899 104.398 mo
303.899 103.894 303.893 103.565 303.874 103.271 cv
304.693 103.271 li
304.73 103.907 li
304.756 103.907 li
304.913 103.404 305.285 103.194 305.587 103.194 cv
305.675 103.194 305.72 103.2 305.789 103.215 cv
305.789 104.216 li
305.707 104.201 305.631 104.188 305.524 104.188 cv
305.171 104.188 304.932 104.391 304.869 104.727 cv
304.856 104.796 304.85 104.873 304.85 104.965 cv
304.85 106.694 li
303.893 106.694 li
303.899 104.398 li
cp
f
306.274 106.694 mo
306.274 103.271 li
307.231 103.271 li
307.231 106.694 li
306.274 106.694 li
cp
306.747 102.822 mo
306.425 102.822 306.217 102.57 306.217 102.256 cv
306.217 101.934 306.432 101.689 306.759 101.689 cv
307.086 101.689 307.288 101.934 307.295 102.256 cv
307.295 102.57 307.086 102.822 306.753 102.822 cv
306.747 102.822 li
cp
f
308 104.362 mo
308 103.936 307.987 103.578 307.975 103.271 cv
308.807 103.271 li
308.851 103.746 li
308.869 103.746 li
308.996 103.523 309.305 103.194 309.82 103.194 cv
310.451 103.194 310.924 103.662 310.924 104.67 cv
310.924 106.694 li
309.966 106.694 li
309.966 104.796 li
309.966 104.356 309.827 104.055 309.48 104.055 cv
309.216 104.055 309.059 104.258 308.989 104.453 cv
308.964 104.524 308.957 104.621 308.957 104.72 cv
308.957 106.694 li
308 106.694 li
308 104.362 li
cp
f
313.651 104.663 mo
313.651 104.601 313.645 104.53 313.633 104.468 cv
313.563 104.188 313.381 103.998 313.115 103.998 cv
312.763 103.998 312.486 104.349 312.486 104.972 cv
312.486 105.483 312.713 105.882 313.109 105.882 cv
313.361 105.882 313.557 105.699 313.619 105.454 cv
313.645 105.37 313.651 105.259 313.651 105.167 cv
313.651 104.663 li
cp
314.609 106.196 mo
314.609 106.855 314.489 107.394 314.137 107.737 cv
313.803 108.059 313.342 108.156 312.889 108.156 cv
312.479 108.156 312.057 108.066 311.78 107.898 cv
311.969 107.085 li
312.164 107.211 312.498 107.345 312.863 107.345 cv
313.317 107.345 313.664 107.078 313.664 106.442 cv
313.664 106.225 li
313.651 106.225 li
313.469 106.504 313.172 106.665 312.82 106.665 cv
312.057 106.665 311.516 105.98 311.516 104.999 cv
311.516 103.894 312.152 103.194 312.914 103.194 cv
313.336 103.194 313.601 103.397 313.758 103.677 cv
313.771 103.677 li
313.803 103.271 li
314.634 103.271 li
314.621 103.494 314.609 103.781 314.609 104.292 cv
314.609 106.196 li
cp
f
315.371 105.77 mo
315.547 105.889 315.913 106.022 316.196 106.022 cv
316.486 106.022 316.605 105.916 316.605 105.741 cv
316.605 105.56 316.512 105.476 316.158 105.343 cv
315.516 105.112 315.271 104.72 315.277 104.32 cv
315.277 103.677 315.768 103.194 316.53 103.194 cv
316.89 103.194 317.205 103.291 317.394 103.397 cv
317.229 104.124 li
317.091 104.047 316.82 103.936 316.563 103.936 cv
316.328 103.936 316.196 104.04 316.196 104.208 cv
316.196 104.376 316.316 104.46 316.694 104.608 cv
317.28 104.824 317.52 105.16 317.525 105.657 cv
317.525 106.302 317.078 106.771 316.196 106.771 cv
315.793 106.771 315.434 106.665 315.201 106.526 cv
315.371 105.77 li
cp
f
323.354 105.987 mo
323.688 105.987 323.9 105.644 323.9 105.182 cv
323.9 104.762 323.699 104.398 323.29 104.398 cv
323.031 104.398 322.817 104.572 322.729 104.796 cv
322.697 104.86 322.686 104.944 322.686 105.07 cv
322.704 105.553 322.912 105.987 323.347 105.987 cv
323.354 105.987 li
cp
324.424 102.9 mo
324.316 102.893 324.203 102.9 324.053 102.913 cv
323.201 102.984 322.824 103.474 322.717 103.998 cv
322.736 103.998 li
322.938 103.775 323.227 103.642 323.605 103.642 cv
324.291 103.642 324.871 104.181 324.871 105.125 cv
324.871 106.029 324.248 106.771 323.365 106.771 cv
322.27 106.771 321.734 105.867 321.734 104.782 cv
321.734 103.929 322.018 103.215 322.465 102.752 cv
322.867 102.34 323.403 102.122 324.039 102.087 cv
324.217 102.067 324.336 102.073 324.424 102.08 cv
324.424 102.9 li
cp
f
326.527 103.088 mo
326.516 103.088 li
325.734 103.501 li
325.576 102.703 li
326.666 102.144 li
327.454 102.144 li
327.454 106.694 li
326.527 106.694 li
326.527 103.088 li
cp
f
330.289 105.966 mo
330.66 105.966 330.862 105.447 330.862 104.411 cv
330.862 103.404 330.667 102.871 330.283 102.871 cv
329.924 102.871 329.697 103.383 329.697 104.411 cv
329.69 105.461 329.918 105.966 330.283 105.966 cv
330.289 105.966 li
cp
330.276 106.771 mo
329.218 106.771 328.752 105.713 328.746 104.426 cv
328.746 103.103 329.243 102.067 330.302 102.067 cv
331.392 102.067 331.826 103.152 331.826 104.398 cv
331.826 105.797 331.316 106.771 330.283 106.771 cv
330.276 106.771 li
cp
f
333.578 106.694 mo
333.578 106.05 li
334.101 105.525 li
335.002 104.628 335.436 104.117 335.442 103.585 cv
335.442 103.215 335.247 102.92 334.774 102.92 cv
334.422 102.92 334.113 103.116 333.898 103.291 cv
333.628 102.535 li
333.93 102.277 334.416 102.067 334.963 102.067 cv
335.896 102.067 336.4 102.668 336.4 103.494 cv
336.4 104.258 335.908 104.866 335.311 105.454 cv
334.932 105.805 li
334.932 105.819 li
336.482 105.819 li
336.482 106.694 li
333.578 106.694 li
cp
f
338.555 102.787 mo
338.227 102.787 338.063 103.032 338.063 103.313 cv
338.063 103.62 338.309 103.817 338.637 103.929 cv
338.857 103.859 339.053 103.635 339.053 103.355 cv
339.053 103.068 338.907 102.787 338.561 102.787 cv
338.555 102.787 li
cp
338.567 106.035 mo
338.9 106.035 339.128 105.79 339.128 105.469 cv
339.128 105.07 338.857 104.831 338.485 104.72 cv
338.17 104.818 337.988 105.07 337.988 105.399 cv
337.981 105.728 338.208 106.035 338.561 106.035 cv
338.567 106.035 li
cp
338.586 102.067 mo
339.543 102.067 339.94 102.683 339.94 103.236 cv
339.94 103.627 339.752 104.013 339.342 104.237 cv
339.342 104.258 li
339.745 104.426 340.098 104.804 340.098 105.385 cv
340.098 106.21 339.475 106.771 338.523 106.771 cv
337.483 106.771 337.005 106.119 337.005 105.503 cv
337.005 104.957 337.288 104.579 337.736 104.362 cv
337.736 104.349 li
337.339 104.117 337.144 103.746 337.144 103.348 cv
337.144 102.577 337.768 102.067 338.58 102.067 cv
338.586 102.067 li
cp
f
342.051 105.966 mo
342.423 105.966 342.625 105.447 342.625 104.411 cv
342.625 103.404 342.43 102.871 342.045 102.871 cv
341.686 102.871 341.459 103.383 341.459 104.411 cv
341.453 105.461 341.68 105.966 342.045 105.966 cv
342.051 105.966 li
cp
342.039 106.771 mo
340.98 106.771 340.514 105.713 340.508 104.426 cv
340.508 103.103 341.006 102.067 342.064 102.067 cv
343.154 102.067 343.588 103.152 343.588 104.398 cv
343.588 105.797 343.078 106.771 342.045 106.771 cv
342.039 106.771 li
cp
f
345.635 104.502 mo
345.635 105.209 li
343.984 105.209 li
343.984 104.502 li
345.635 104.502 li
cp
f
347.576 105.966 mo
347.947 105.966 348.149 105.447 348.149 104.411 cv
348.149 103.404 347.954 102.871 347.57 102.871 cv
347.211 102.871 346.984 103.383 346.984 104.411 cv
346.978 105.461 347.205 105.966 347.57 105.966 cv
347.576 105.966 li
cp
347.563 106.771 mo
346.505 106.771 346.039 105.713 346.033 104.426 cv
346.033 103.103 346.53 102.067 347.589 102.067 cv
348.679 102.067 349.113 103.152 349.113 104.398 cv
349.113 105.797 348.604 106.771 347.57 106.771 cv
347.563 106.771 li
cp
f
351.072 102.787 mo
350.744 102.787 350.58 103.032 350.58 103.313 cv
350.58 103.62 350.826 103.817 351.154 103.929 cv
351.375 103.859 351.57 103.635 351.57 103.355 cv
351.57 103.068 351.425 102.787 351.078 102.787 cv
351.072 102.787 li
cp
351.085 106.035 mo
351.418 106.035 351.646 105.79 351.646 105.469 cv
351.646 105.07 351.375 104.831 351.003 104.72 cv
350.688 104.818 350.506 105.07 350.506 105.399 cv
350.499 105.728 350.726 106.035 351.078 106.035 cv
351.085 106.035 li
cp
351.104 102.067 mo
352.061 102.067 352.458 102.683 352.458 103.236 cv
352.458 103.627 352.27 104.013 351.859 104.237 cv
351.859 104.258 li
352.263 104.426 352.615 104.804 352.615 105.385 cv
352.615 106.21 351.992 106.771 351.041 106.771 cv
350.001 106.771 349.522 106.119 349.522 105.503 cv
349.522 104.957 349.806 104.579 350.254 104.362 cv
350.254 104.349 li
349.856 104.117 349.661 103.746 349.661 103.348 cv
349.661 102.577 350.285 102.067 351.098 102.067 cv
351.104 102.067 li
cp
f
354.568 105.966 mo
354.94 105.966 355.143 105.447 355.143 104.411 cv
355.143 103.404 354.947 102.871 354.563 102.871 cv
354.203 102.871 353.977 103.383 353.977 104.411 cv
353.971 105.461 354.197 105.966 354.563 105.966 cv
354.568 105.966 li
cp
354.557 106.771 mo
353.498 106.771 353.031 105.713 353.025 104.426 cv
353.025 103.103 353.523 102.067 354.582 102.067 cv
355.672 102.067 356.105 103.152 356.105 104.398 cv
356.105 105.797 355.596 106.771 354.563 106.771 cv
354.557 106.771 li
cp
f
358.065 105.966 mo
358.438 105.966 358.639 105.447 358.639 104.411 cv
358.639 103.404 358.443 102.871 358.059 102.871 cv
357.699 102.871 357.473 103.383 357.473 104.411 cv
357.467 105.461 357.693 105.966 358.059 105.966 cv
358.065 105.966 li
cp
358.053 106.771 mo
356.994 106.771 356.528 105.713 356.521 104.426 cv
356.521 103.103 357.02 102.067 358.078 102.067 cv
359.168 102.067 359.603 103.152 359.603 104.398 cv
359.603 105.797 359.092 106.771 358.059 106.771 cv
358.053 106.771 li
cp
f
254.076 110.417 mo
253.093 110.417 li
253.093 109.65 li
255.89 109.65 li
255.89 110.417 li
254.897 110.417 li
254.897 113.694 li
254.076 113.694 li
254.076 110.417 li
cp
f
256.236 109.434 mo
257.057 109.434 li
257.057 111.113 li
257.068 111.113 li
257.154 110.982 257.262 110.879 257.392 110.808 cv
257.516 110.736 257.667 110.694 257.818 110.694 cv
258.342 110.694 258.742 111.096 258.742 111.984 cv
258.742 113.694 li
257.921 113.694 li
257.921 112.079 li
257.921 111.695 257.802 111.432 257.494 111.432 cv
257.278 111.432 257.143 111.587 257.084 111.755 cv
257.063 111.81 257.057 111.888 257.057 111.953 cv
257.057 113.694 li
256.236 113.694 li
256.236 109.434 li
cp
f
260.999 111.888 mo
260.999 111.671 260.913 111.293 260.54 111.293 cv
260.189 111.293 260.049 111.648 260.027 111.888 cv
260.999 111.888 li
cp
260.033 112.512 mo
260.06 112.896 260.394 113.075 260.778 113.075 cv
261.059 113.075 261.285 113.033 261.507 112.949 cv
261.615 113.568 li
261.345 113.694 261.015 113.753 260.659 113.753 cv
259.763 113.753 259.25 113.178 259.25 112.253 cv
259.25 111.51 259.671 110.688 260.583 110.688 cv
261.437 110.688 261.76 111.426 261.76 112.152 cv
261.76 112.308 261.744 112.445 261.733 112.518 cv
260.033 112.512 li
cp
f
263.396 112.758 mo
263.613 112.884 263.958 113.01 264.309 113.01 cv
264.687 113.01 264.887 112.835 264.887 112.566 cv
264.887 112.32 264.714 112.169 264.277 112.001 cv
263.672 111.762 263.272 111.39 263.272 110.795 cv
263.272 110.106 263.796 109.583 264.649 109.583 cv
265.065 109.583 265.362 109.673 265.578 109.787 cv
265.395 110.52 li
265.254 110.442 264.99 110.327 264.639 110.327 cv
264.282 110.327 264.109 110.514 264.109 110.718 cv
264.109 110.976 264.309 111.089 264.784 111.293 cv
265.427 111.558 265.724 111.93 265.724 112.505 cv
265.724 113.184 265.26 113.76 264.261 113.76 cv
263.845 113.76 263.435 113.634 263.229 113.508 cv
263.396 112.758 li
cp
f
266.237 109.434 mo
267.058 109.434 li
267.058 111.113 li
267.069 111.113 li
267.155 110.982 267.263 110.879 267.393 110.808 cv
267.517 110.736 267.668 110.694 267.819 110.694 cv
268.343 110.694 268.743 111.096 268.743 111.984 cv
268.743 113.694 li
267.922 113.694 li
267.922 112.079 li
267.922 111.695 267.803 111.432 267.495 111.432 cv
267.279 111.432 267.144 111.587 267.085 111.755 cv
267.063 111.81 267.058 111.888 267.058 111.953 cv
267.058 113.694 li
266.237 113.694 li
266.237 109.434 li
cp
f
270.633 113.106 mo
270.957 113.106 271.157 112.751 271.157 112.224 cv
271.157 111.791 271.005 111.348 270.633 111.348 cv
270.244 111.348 270.093 111.791 270.093 112.23 cv
270.093 112.728 270.282 113.106 270.627 113.106 cv
270.633 113.106 li
cp
270.617 113.76 mo
269.844 113.76 269.25 113.195 269.25 112.247 cv
269.25 111.3 269.812 110.694 270.665 110.694 cv
271.47 110.694 272.01 111.312 272.01 112.199 cv
272.01 113.268 271.324 113.76 270.622 113.76 cv
270.617 113.76 li
cp
f
273.338 112.434 mo
273.338 112.505 273.344 112.566 273.354 112.625 cv
273.408 112.871 273.597 113.058 273.835 113.058 cv
274.191 113.058 274.402 112.728 274.402 112.23 cv
274.402 111.762 274.213 111.407 273.846 111.407 cv
273.614 111.407 273.408 111.6 273.354 111.869 cv
273.344 111.917 273.338 111.978 273.338 112.031 cv
273.338 112.434 li
cp
272.518 111.743 mo
272.518 111.36 272.506 111.035 272.496 110.76 cv
273.208 110.76 li
273.247 111.167 li
273.257 111.167 li
273.452 110.862 273.754 110.694 274.137 110.694 cv
274.715 110.694 275.233 111.251 275.233 112.188 cv
275.233 113.255 274.624 113.76 274.035 113.76 cv
273.716 113.76 273.468 113.615 273.349 113.424 cv
273.338 113.424 li
273.338 114.882 li
272.518 114.882 li
272.518 111.743 li
cp
f
275.741 112.902 mo
275.892 113.003 276.206 113.117 276.448 113.117 cv
276.697 113.117 276.799 113.028 276.799 112.877 cv
276.799 112.722 276.718 112.65 276.416 112.535 cv
275.865 112.337 275.655 112.001 275.66 111.659 cv
275.66 111.108 276.081 110.694 276.734 110.694 cv
277.042 110.694 277.313 110.778 277.474 110.867 cv
277.334 111.491 li
277.215 111.426 276.983 111.329 276.762 111.329 cv
276.562 111.329 276.448 111.419 276.448 111.564 cv
276.448 111.707 276.551 111.779 276.875 111.905 cv
277.377 112.092 277.583 112.379 277.588 112.806 cv
277.588 113.358 277.205 113.76 276.448 113.76 cv
276.103 113.76 275.795 113.669 275.595 113.55 cv
275.741 112.902 li
cp
f
280.585 112.308 mo
280.153 112.308 279.818 112.421 279.818 112.77 cv
279.818 113.003 279.958 113.117 280.142 113.117 cv
280.342 113.117 280.515 112.968 280.569 112.781 cv
280.58 112.734 280.585 112.68 280.585 112.625 cv
280.585 112.308 li
cp
281.379 112.986 mo
281.379 113.262 281.39 113.531 281.422 113.694 cv
280.682 113.694 li
280.633 113.4 li
280.617 113.4 li
280.444 113.634 280.174 113.76 279.861 113.76 cv
279.327 113.76 279.008 113.327 279.008 112.86 cv
279.008 112.098 279.624 111.737 280.558 111.737 cv
280.558 111.701 li
280.558 111.545 280.482 111.323 280.077 111.323 cv
279.807 111.323 279.521 111.426 279.348 111.539 cv
279.197 110.957 li
279.381 110.844 279.743 110.694 280.223 110.694 cv
281.104 110.694 281.379 111.27 281.379 111.959 cv
281.379 112.986 li
cp
f
282.908 109.961 mo
282.908 110.76 li
283.497 110.76 li
283.497 111.432 li
282.908 111.432 li
282.908 112.499 li
282.908 112.854 282.989 113.016 283.232 113.016 cv
283.345 113.016 283.399 113.01 283.475 112.991 cv
283.48 113.682 li
283.378 113.724 283.178 113.76 282.951 113.76 cv
282.687 113.76 282.465 113.657 282.33 113.508 cv
282.179 113.333 282.104 113.052 282.104 112.638 cv
282.104 111.432 li
281.752 111.432 li
281.752 110.76 li
282.104 110.76 li
282.104 110.207 li
282.908 109.961 li
cp
f
285.095 109.65 mo
285.916 109.65 li
285.916 112.926 li
287.363 112.926 li
287.363 113.694 li
285.095 113.694 li
285.095 109.65 li
cp
f
287.822 113.694 mo
287.822 110.76 li
288.643 110.76 li
288.643 113.694 li
287.822 113.694 li
cp
288.227 110.375 mo
287.951 110.375 287.773 110.159 287.773 109.89 cv
287.773 109.613 287.957 109.404 288.237 109.404 cv
288.518 109.404 288.691 109.613 288.696 109.89 cv
288.696 110.159 288.518 110.375 288.232 110.375 cv
288.227 110.375 li
cp
f
290.532 113.106 mo
290.856 113.106 291.056 112.751 291.056 112.224 cv
291.056 111.791 290.905 111.348 290.532 111.348 cv
290.144 111.348 289.992 111.791 289.992 112.23 cv
289.992 112.728 290.181 113.106 290.527 113.106 cv
290.532 113.106 li
cp
290.516 113.76 mo
289.744 113.76 289.15 113.195 289.15 112.247 cv
289.15 111.3 289.711 110.694 290.564 110.694 cv
291.369 110.694 291.909 111.312 291.909 112.199 cv
291.909 113.268 291.224 113.76 290.521 113.76 cv
290.516 113.76 li
cp
f
292.417 111.695 mo
292.417 111.329 292.406 111.024 292.395 110.76 cv
293.108 110.76 li
293.146 111.167 li
293.162 111.167 li
293.27 110.976 293.535 110.694 293.978 110.694 cv
294.518 110.694 294.922 111.096 294.922 111.959 cv
294.922 113.694 li
294.102 113.694 li
294.102 112.068 li
294.102 111.69 293.983 111.432 293.686 111.432 cv
293.459 111.432 293.324 111.606 293.265 111.774 cv
293.243 111.833 293.238 111.917 293.238 112.001 cv
293.238 113.694 li
292.417 113.694 li
292.417 111.695 li
cp
f
296.09 110.76 mo
296.446 112.121 li
296.511 112.367 296.554 112.602 296.598 112.835 cv
296.614 112.835 li
296.657 112.596 296.7 112.373 296.76 112.121 cv
297.1 110.76 li
297.964 110.76 li
296.981 113.694 li
296.16 113.694 li
295.199 110.76 li
296.09 110.76 li
cp
f
298.342 113.694 mo
298.342 110.76 li
299.163 110.76 li
299.163 113.694 li
298.342 113.694 li
cp
298.747 110.375 mo
298.472 110.375 298.293 110.159 298.293 109.89 cv
298.293 109.613 298.477 109.404 298.758 109.404 cv
299.039 109.404 299.211 109.613 299.217 109.89 cv
299.217 110.159 299.039 110.375 298.752 110.375 cv
298.747 110.375 li
cp
f
299.822 109.434 mo
300.643 109.434 li
300.643 113.694 li
299.822 113.694 li
299.822 109.434 li
cp
f
301.301 109.434 mo
302.122 109.434 li
302.122 113.694 li
301.301 113.694 li
301.301 109.434 li
cp
f
304.379 111.888 mo
304.379 111.671 304.292 111.293 303.92 111.293 cv
303.569 111.293 303.429 111.648 303.407 111.888 cv
304.379 111.888 li
cp
303.413 112.512 mo
303.439 112.896 303.774 113.075 304.158 113.075 cv
304.438 113.075 304.665 113.033 304.887 112.949 cv
304.995 113.568 li
304.725 113.694 304.395 113.753 304.039 113.753 cv
303.143 113.753 302.629 113.178 302.629 112.253 cv
302.629 111.51 303.051 110.688 303.963 110.688 cv
304.816 110.688 305.14 111.426 305.14 112.152 cv
305.14 112.308 305.124 112.445 305.113 112.518 cv
303.413 112.512 li
cp
f
306.776 112.758 mo
306.993 112.884 307.338 113.01 307.689 113.01 cv
308.066 113.01 308.268 112.835 308.268 112.566 cv
308.268 112.32 308.094 112.169 307.656 112.001 cv
307.052 111.762 306.652 111.39 306.652 110.795 cv
306.652 110.106 307.176 109.583 308.029 109.583 cv
308.445 109.583 308.742 109.673 308.958 109.787 cv
308.774 110.52 li
308.635 110.442 308.369 110.327 308.019 110.327 cv
307.662 110.327 307.489 110.514 307.489 110.718 cv
307.489 110.976 307.689 111.089 308.164 111.293 cv
308.807 111.558 309.104 111.93 309.104 112.505 cv
309.104 113.184 308.64 113.76 307.641 113.76 cv
307.225 113.76 306.814 113.634 306.609 113.508 cv
306.776 112.758 li
cp
f
310.53 109.961 mo
310.53 110.76 li
311.119 110.76 li
311.119 111.432 li
310.53 111.432 li
310.53 112.499 li
310.53 112.854 310.611 113.016 310.854 113.016 cv
310.967 113.016 311.021 113.01 311.098 112.991 cv
311.103 113.682 li
311 113.724 310.801 113.76 310.573 113.76 cv
310.309 113.76 310.088 113.657 309.952 113.508 cv
309.801 113.333 309.726 113.052 309.726 112.638 cv
309.726 111.432 li
309.375 111.432 li
309.375 110.76 li
309.726 110.76 li
309.726 110.207 li
310.53 109.961 li
cp
f
312.998 112.308 mo
312.565 112.308 312.23 112.421 312.23 112.77 cv
312.23 113.003 312.371 113.117 312.555 113.117 cv
312.754 113.117 312.928 112.968 312.981 112.781 cv
312.992 112.734 312.998 112.68 312.998 112.625 cv
312.998 112.308 li
cp
313.791 112.986 mo
313.791 113.262 313.803 113.531 313.834 113.694 cv
313.095 113.694 li
313.046 113.4 li
313.029 113.4 li
312.857 113.634 312.587 113.76 312.273 113.76 cv
311.739 113.76 311.421 113.327 311.421 112.86 cv
311.421 112.098 312.036 111.737 312.971 111.737 cv
312.971 111.701 li
312.971 111.545 312.895 111.323 312.49 111.323 cv
312.22 111.323 311.934 111.426 311.761 111.539 cv
311.609 110.957 li
311.793 110.844 312.155 110.694 312.636 110.694 cv
313.516 110.694 313.791 111.27 313.791 111.959 cv
313.791 112.986 li
cp
f
315.32 109.961 mo
315.32 110.76 li
315.909 110.76 li
315.909 111.432 li
315.32 111.432 li
315.32 112.499 li
315.32 112.854 315.402 113.016 315.645 113.016 cv
315.758 113.016 315.813 113.01 315.888 112.991 cv
315.893 113.682 li
315.791 113.724 315.591 113.76 315.363 113.76 cv
315.1 113.76 314.878 113.657 314.742 113.508 cv
314.592 113.333 314.516 113.052 314.516 112.638 cv
314.516 111.432 li
314.165 111.432 li
314.165 110.76 li
314.516 110.76 li
314.516 110.207 li
315.32 109.961 li
cp
f
316.385 113.694 mo
316.385 110.76 li
317.205 110.76 li
317.205 113.694 li
316.385 113.694 li
cp
316.789 110.375 mo
316.514 110.375 316.336 110.159 316.336 109.89 cv
316.336 109.613 316.52 109.404 316.801 109.404 cv
317.081 109.404 317.254 109.613 317.26 109.89 cv
317.26 110.159 317.081 110.375 316.795 110.375 cv
316.789 110.375 li
cp
f
319.096 113.106 mo
319.42 113.106 319.619 112.751 319.619 112.224 cv
319.619 111.791 319.468 111.348 319.096 111.348 cv
318.707 111.348 318.555 111.791 318.555 112.23 cv
318.555 112.728 318.744 113.106 319.09 113.106 cv
319.096 113.106 li
cp
319.079 113.76 mo
318.307 113.76 317.713 113.195 317.713 112.247 cv
317.713 111.3 318.274 110.694 319.127 110.694 cv
319.932 110.694 320.473 111.312 320.473 112.199 cv
320.473 113.268 319.787 113.76 319.084 113.76 cv
319.079 113.76 li
cp
f
320.98 111.695 mo
320.98 111.329 320.969 111.024 320.958 110.76 cv
321.671 110.76 li
321.709 111.167 li
321.725 111.167 li
321.833 110.976 322.098 110.694 322.541 110.694 cv
323.08 110.694 323.485 111.096 323.485 111.959 cv
323.485 113.694 li
322.664 113.694 li
322.664 112.068 li
322.664 111.69 322.546 111.432 322.248 111.432 cv
322.021 111.432 321.887 111.606 321.828 111.774 cv
321.807 111.833 321.801 111.917 321.801 112.001 cv
321.801 113.694 li
320.98 113.694 li
320.98 111.695 li
cp
f
323.82 114.407 mo
323.993 113.873 324.139 113.249 324.215 112.703 cv
325.051 112.644 li
324.873 113.255 324.631 113.886 324.371 114.354 cv
323.82 114.407 li
cp
f
327.671 112.079 mo
327.671 111.215 li
327.671 110.982 327.682 110.741 327.693 110.489 cv
327.676 110.489 li
327.563 110.741 327.466 110.97 327.348 111.215 cv
326.883 112.068 li
326.877 112.079 li
327.671 112.079 li
cp
327.671 113.694 mo
327.671 112.764 li
326.115 112.764 li
326.115 112.169 li
327.439 109.793 li
328.449 109.793 li
328.449 112.079 li
328.864 112.079 li
328.864 112.764 li
328.449 112.764 li
328.449 113.694 li
327.671 113.694 li
cp
f
330.447 110.394 mo
330.172 110.394 329.967 110.669 329.967 111.077 cv
329.967 111.413 330.133 111.701 330.463 111.701 cv
330.695 111.701 330.846 111.587 330.928 111.449 cv
330.955 111.39 330.965 111.329 330.965 111.215 cv
330.971 110.802 330.824 110.394 330.452 110.394 cv
330.447 110.394 li
cp
329.469 113.033 mo
329.577 113.052 329.664 113.045 329.826 113.033 cv
330.08 113.022 330.334 112.938 330.522 112.793 cv
330.754 112.625 330.906 112.367 330.965 112.073 cv
330.955 112.068 li
330.793 112.247 330.565 112.35 330.242 112.35 cv
329.647 112.35 329.15 111.894 329.15 111.131 cv
329.15 110.369 329.701 109.728 330.474 109.728 cv
331.375 109.728 331.803 110.495 331.803 111.407 cv
331.803 112.224 331.57 112.812 331.191 113.201 cv
330.857 113.543 330.393 113.724 329.842 113.747 cv
329.707 113.76 329.566 113.753 329.469 113.747 cv
329.469 113.033 li
cp
f
333.443 110.394 mo
333.168 110.394 332.963 110.669 332.963 111.077 cv
332.963 111.413 333.131 111.701 333.46 111.701 cv
333.692 111.701 333.844 111.587 333.924 111.449 cv
333.951 111.39 333.963 111.329 333.963 111.215 cv
333.968 110.802 333.822 110.394 333.449 110.394 cv
333.443 110.394 li
cp
332.467 113.033 mo
332.574 113.052 332.66 113.045 332.822 113.033 cv
333.076 113.022 333.33 112.938 333.52 112.793 cv
333.752 112.625 333.902 112.367 333.963 112.073 cv
333.951 112.068 li
333.789 112.247 333.563 112.35 333.238 112.35 cv
332.645 112.35 332.148 111.894 332.148 111.131 cv
332.148 110.369 332.699 109.728 333.471 109.728 cv
334.373 109.728 334.799 110.495 334.799 111.407 cv
334.799 112.224 334.566 112.812 334.189 113.201 cv
333.854 113.543 333.39 113.724 332.839 113.747 cv
332.704 113.76 332.563 113.753 332.467 113.747 cv
332.467 113.033 li
cp
f
338.596 111.984 mo
337.256 111.984 li
337.256 112.944 li
338.752 112.944 li
338.752 113.694 li
336.436 113.694 li
336.436 109.65 li
338.676 109.65 li
338.676 110.4 li
337.256 110.4 li
337.256 111.239 li
338.596 111.239 li
338.596 111.984 li
cp
f
340.686 112.308 mo
340.253 112.308 339.918 112.421 339.918 112.77 cv
339.918 113.003 340.059 113.117 340.242 113.117 cv
340.441 113.117 340.615 112.968 340.669 112.781 cv
340.68 112.734 340.686 112.68 340.686 112.625 cv
340.686 112.308 li
cp
341.479 112.986 mo
341.479 113.262 341.49 113.531 341.521 113.694 cv
340.782 113.694 li
340.733 113.4 li
340.717 113.4 li
340.545 113.634 340.274 113.76 339.961 113.76 cv
339.427 113.76 339.108 113.327 339.108 112.86 cv
339.108 112.098 339.724 111.737 340.658 111.737 cv
340.658 111.701 li
340.658 111.545 340.582 111.323 340.178 111.323 cv
339.907 111.323 339.621 111.426 339.448 111.539 cv
339.297 110.957 li
339.48 110.844 339.843 110.694 340.323 110.694 cv
341.203 110.694 341.479 111.27 341.479 111.959 cv
341.479 112.986 li
cp
f
342.127 112.902 mo
342.277 113.003 342.592 113.117 342.834 113.117 cv
343.082 113.117 343.186 113.028 343.186 112.877 cv
343.186 112.722 343.104 112.65 342.802 112.535 cv
342.251 112.337 342.041 112.001 342.046 111.659 cv
342.046 111.108 342.467 110.694 343.12 110.694 cv
343.428 110.694 343.698 110.778 343.859 110.867 cv
343.72 111.491 li
343.602 111.426 343.369 111.329 343.147 111.329 cv
342.947 111.329 342.834 111.419 342.834 111.564 cv
342.834 111.707 342.937 111.779 343.261 111.905 cv
343.763 112.092 343.969 112.379 343.974 112.806 cv
343.974 113.358 343.59 113.76 342.834 113.76 cv
342.488 113.76 342.181 113.669 341.98 113.55 cv
342.127 112.902 li
cp
f
345.395 109.961 mo
345.395 110.76 li
345.982 110.76 li
345.982 111.432 li
345.395 111.432 li
345.395 112.499 li
345.395 112.854 345.475 113.016 345.718 113.016 cv
345.831 113.016 345.885 113.01 345.961 112.991 cv
345.967 113.682 li
345.863 113.724 345.664 113.76 345.438 113.76 cv
345.172 113.76 344.951 113.657 344.816 113.508 cv
344.665 113.333 344.59 113.052 344.59 112.638 cv
344.59 111.432 li
344.238 111.432 li
344.238 110.76 li
344.59 110.76 li
344.59 110.207 li
345.395 109.961 li
cp
f
348.396 109.65 mo
348.396 111.972 li
348.396 112.674 348.639 113.028 349.055 113.028 cv
349.486 113.028 349.725 112.692 349.725 111.972 cv
349.725 109.65 li
350.545 109.65 li
350.545 111.917 li
350.545 113.165 349.979 113.76 349.027 113.76 cv
348.109 113.76 347.575 113.19 347.575 111.905 cv
347.575 109.65 li
348.396 109.65 li
cp
f
351.798 110.76 mo
352.014 111.966 li
352.063 112.266 352.116 112.589 352.16 112.926 cv
352.176 112.926 li
352.225 112.596 352.305 112.26 352.365 111.972 cv
352.646 110.76 li
353.293 110.76 li
353.559 111.93 li
353.634 112.266 353.704 112.589 353.752 112.926 cv
353.764 112.926 li
353.801 112.596 353.855 112.26 353.92 111.924 cv
354.141 110.76 li
354.945 110.76 li
354.136 113.694 li
353.369 113.694 li
353.121 112.667 li
353.051 112.379 353.002 112.115 352.947 111.749 cv
352.938 111.749 li
352.889 112.115 352.834 112.392 352.77 112.661 cv
352.506 113.694 li
351.732 113.694 li
350.961 110.76 li
351.798 110.76 li
cp
f
357.246 113.621 mo
357.102 113.699 356.826 113.76 356.512 113.76 cv
355.659 113.76 355.113 113.178 355.113 112.253 cv
355.113 111.396 355.643 110.694 356.625 110.694 cv
356.842 110.694 357.079 110.736 357.252 110.808 cv
357.123 111.486 li
357.025 111.438 356.879 111.396 356.664 111.396 cv
356.231 111.396 355.951 111.737 355.956 112.218 cv
355.956 112.758 356.28 113.045 356.68 113.045 cv
356.874 113.045 357.025 113.01 357.149 112.949 cv
357.246 113.621 li
cp
f
357.7 109.434 mo
358.521 109.434 li
358.521 111.113 li
358.531 111.113 li
358.618 110.982 358.727 110.879 358.855 110.808 cv
358.98 110.736 359.131 110.694 359.282 110.694 cv
359.807 110.694 360.205 111.096 360.205 111.984 cv
360.205 113.694 li
359.385 113.694 li
359.385 112.079 li
359.385 111.695 359.266 111.432 358.958 111.432 cv
358.742 111.432 358.607 111.587 358.548 111.755 cv
358.526 111.81 358.521 111.888 358.521 111.953 cv
358.521 113.694 li
357.7 113.694 li
357.7 109.434 li
cp
f
360.865 109.434 mo
361.686 109.434 li
361.686 113.694 li
360.865 113.694 li
360.865 109.434 li
cp
f
363.748 112.308 mo
363.316 112.308 362.981 112.421 362.981 112.77 cv
362.981 113.003 363.121 113.117 363.305 113.117 cv
363.505 113.117 363.678 112.968 363.732 112.781 cv
363.742 112.734 363.748 112.68 363.748 112.625 cv
363.748 112.308 li
cp
364.542 112.986 mo
364.542 113.262 364.553 113.531 364.585 113.694 cv
363.846 113.694 li
363.797 113.4 li
363.78 113.4 li
363.607 113.634 363.338 113.76 363.024 113.76 cv
362.49 113.76 362.172 113.327 362.172 112.86 cv
362.172 112.098 362.787 111.737 363.721 111.737 cv
363.721 111.701 li
363.721 111.545 363.646 111.323 363.24 111.323 cv
362.971 111.323 362.684 111.426 362.512 111.539 cv
362.36 110.957 li
362.544 110.844 362.906 110.694 363.387 110.694 cv
364.267 110.694 364.542 111.27 364.542 111.959 cv
364.542 112.986 li
cp
f
365.195 111.695 mo
365.195 111.329 365.184 111.024 365.174 110.76 cv
365.887 110.76 li
365.924 111.167 li
365.94 111.167 li
366.049 110.976 366.313 110.694 366.756 110.694 cv
367.296 110.694 367.701 111.096 367.701 111.959 cv
367.701 113.694 li
366.88 113.694 li
366.88 112.068 li
366.88 111.69 366.762 111.432 366.464 111.432 cv
366.237 111.432 366.102 111.606 366.043 111.774 cv
366.021 111.833 366.016 111.917 366.016 112.001 cv
366.016 113.694 li
365.195 113.694 li
365.195 111.695 li
cp
f
371.243 111.972 mo
371.017 111.113 li
370.957 110.873 370.893 110.568 370.838 110.333 cv
370.822 110.333 li
370.773 110.573 370.714 110.879 370.66 111.113 cv
370.438 111.972 li
371.243 111.972 li
cp
370.32 112.655 mo
370.066 113.694 li
369.213 113.694 li
370.325 109.65 li
371.4 109.65 li
372.533 113.694 li
371.648 113.694 li
371.367 112.655 li
370.32 112.655 li
cp
f
373.36 110.76 mo
373.717 112.121 li
373.781 112.367 373.824 112.602 373.868 112.835 cv
373.885 112.835 li
373.928 112.596 373.971 112.373 374.03 112.121 cv
374.37 110.76 li
375.234 110.76 li
374.252 113.694 li
373.431 113.694 li
372.47 110.76 li
373.36 110.76 li
cp
f
377.109 111.888 mo
377.109 111.671 377.022 111.293 376.65 111.293 cv
376.299 111.293 376.158 111.648 376.137 111.888 cv
377.109 111.888 li
cp
376.143 112.512 mo
376.17 112.896 376.504 113.075 376.888 113.075 cv
377.168 113.075 377.395 113.033 377.617 112.949 cv
377.725 113.568 li
377.455 113.694 377.125 113.753 376.769 113.753 cv
375.873 113.753 375.359 113.178 375.359 112.253 cv
375.359 111.51 375.781 110.688 376.693 110.688 cv
377.547 110.688 377.87 111.426 377.87 112.152 cv
377.87 112.308 377.854 112.445 377.844 112.518 cv
376.143 112.512 li
cp
f
378.691 113.76 mo
378.416 113.76 378.217 113.526 378.217 113.207 cv
378.217 112.877 378.416 112.65 378.703 112.65 cv
378.983 112.65 379.178 112.871 379.184 113.207 cv
379.184 113.526 378.988 113.76 378.697 113.76 cv
378.691 113.76 li
cp
f
285.883 123.477 mo
285.586 123.588 285.026 123.742 284.465 123.742 cv
283.69 123.742 283.129 123.526 282.739 123.112 cv
282.354 122.699 282.141 122.083 282.141 121.391 cv
282.146 119.822 283.174 118.927 284.566 118.927 cv
285.114 118.927 285.536 119.045 285.744 119.151 cv
285.542 120.012 li
285.309 119.893 285.026 119.809 284.56 119.809 cv
283.759 119.809 283.148 120.313 283.148 121.334 cv
283.148 122.315 283.703 122.882 284.49 122.882 cv
284.705 122.882 284.881 122.854 284.957 122.819 cv
284.957 121.824 li
284.301 121.824 li
284.301 120.991 li
285.883 120.991 li
285.883 123.477 li
cp
f
286.619 118.724 mo
287.577 118.724 li
287.577 123.694 li
286.619 123.694 li
286.619 118.724 li
cp
f
290.21 121.586 mo
290.21 121.334 290.109 120.894 289.674 120.894 cv
289.265 120.894 289.101 121.307 289.076 121.586 cv
290.21 121.586 li
cp
289.083 122.315 mo
289.114 122.763 289.504 122.973 289.952 122.973 cv
290.279 122.973 290.544 122.924 290.802 122.825 cv
290.928 123.546 li
290.613 123.694 290.229 123.764 289.813 123.764 cv
288.767 123.764 288.169 123.092 288.169 122.014 cv
288.169 121.146 288.66 120.187 289.725 120.187 cv
290.72 120.187 291.098 121.047 291.098 121.895 cv
291.098 122.076 291.08 122.237 291.067 122.321 cv
289.083 122.315 li
cp
f
291.672 121.362 mo
291.672 120.936 291.659 120.578 291.646 120.271 cv
292.479 120.271 li
292.522 120.746 li
292.542 120.746 li
292.667 120.523 292.976 120.194 293.493 120.194 cv
294.123 120.194 294.595 120.662 294.595 121.67 cv
294.595 123.694 li
293.638 123.694 li
293.638 121.796 li
293.638 121.356 293.499 121.055 293.152 121.055 cv
292.888 121.055 292.73 121.258 292.661 121.453 cv
292.636 121.524 292.629 121.621 292.629 121.72 cv
292.629 123.694 li
291.672 123.694 li
291.672 121.362 li
cp
f
300.259 121.888 mo
300.24 121.32 300.221 120.642 300.221 119.948 cv
300.208 119.948 li
300.07 120.551 299.894 121.223 299.729 121.776 cv
299.213 123.616 li
298.463 123.616 li
298.01 121.796 li
297.871 121.237 297.732 120.571 297.625 119.948 cv
297.613 119.948 li
297.594 120.585 297.569 121.314 297.543 121.902 cv
297.461 123.694 li
296.573 123.694 li
296.844 118.976 li
298.123 118.976 li
298.539 120.558 li
298.677 121.097 298.803 121.685 298.898 122.237 cv
298.923 122.237 li
299.037 121.692 299.182 121.075 299.326 120.543 cv
299.773 118.976 li
301.034 118.976 li
301.26 123.694 li
300.328 123.694 li
300.259 121.888 li
cp
f
302.002 123.694 mo
302.002 120.271 li
302.96 120.271 li
302.96 123.694 li
302.002 123.694 li
cp
302.475 119.822 mo
302.154 119.822 301.946 119.57 301.946 119.256 cv
301.946 118.934 302.16 118.689 302.488 118.689 cv
302.815 118.689 303.017 118.934 303.023 119.256 cv
303.023 119.57 302.815 119.822 302.481 119.822 cv
302.475 119.822 li
cp
f
303.729 118.724 mo
304.686 118.724 li
304.686 123.694 li
303.729 123.694 li
303.729 118.724 li
cp
f
305.455 118.724 mo
306.413 118.724 li
306.413 123.694 li
305.455 123.694 li
305.455 118.724 li
cp
f
307.175 122.77 mo
307.352 122.889 307.717 123.022 308 123.022 cv
308.29 123.022 308.41 122.916 308.41 122.741 cv
308.41 122.56 308.314 122.476 307.963 122.343 cv
307.32 122.112 307.074 121.72 307.08 121.32 cv
307.08 120.677 307.572 120.194 308.334 120.194 cv
308.693 120.194 309.008 120.291 309.197 120.397 cv
309.033 121.124 li
308.895 121.047 308.624 120.936 308.365 120.936 cv
308.133 120.936 308 121.04 308 121.208 cv
308 121.376 308.119 121.46 308.498 121.608 cv
309.084 121.824 309.323 122.16 309.33 122.657 cv
309.33 123.302 308.883 123.771 308 123.771 cv
307.598 123.771 307.238 123.665 307.005 123.526 cv
307.175 122.77 li
cp
f
315.156 122.987 mo
315.49 122.987 315.705 122.644 315.705 122.182 cv
315.705 121.762 315.504 121.398 315.094 121.398 cv
314.836 121.398 314.621 121.572 314.533 121.796 cv
314.502 121.86 314.488 121.944 314.488 122.07 cv
314.508 122.553 314.716 122.987 315.15 122.987 cv
315.156 122.987 li
cp
316.228 119.9 mo
316.121 119.893 316.008 119.9 315.855 119.913 cv
315.006 119.984 314.627 120.474 314.521 120.998 cv
314.539 120.998 li
314.74 120.775 315.031 120.642 315.408 120.642 cv
316.096 120.642 316.675 121.181 316.675 122.125 cv
316.675 123.029 316.051 123.771 315.17 123.771 cv
314.073 123.771 313.537 122.867 313.537 121.782 cv
313.537 120.929 313.821 120.215 314.269 119.752 cv
314.672 119.34 315.207 119.122 315.844 119.087 cv
316.02 119.067 316.14 119.073 316.228 119.08 cv
316.228 119.9 li
cp
f
318.332 120.088 mo
318.319 120.088 li
317.538 120.501 li
317.381 119.703 li
318.471 119.144 li
319.258 119.144 li
319.258 123.694 li
318.332 123.694 li
318.332 120.088 li
cp
f
322.093 122.966 mo
322.465 122.966 322.666 122.447 322.666 121.411 cv
322.666 120.404 322.471 119.871 322.086 119.871 cv
321.727 119.871 321.5 120.383 321.5 121.411 cv
321.494 122.461 321.721 122.966 322.086 122.966 cv
322.093 122.966 li
cp
322.08 123.771 mo
321.021 123.771 320.556 122.713 320.549 121.426 cv
320.549 120.103 321.047 119.067 322.105 119.067 cv
323.195 119.067 323.63 120.152 323.63 121.398 cv
323.63 122.797 323.119 123.771 322.086 123.771 cv
322.08 123.771 li
cp
f
328.109 120.019 mo
326.521 120.019 li
326.434 120.711 li
326.521 120.704 326.598 120.697 326.697 120.697 cv
327.088 120.697 327.492 120.795 327.775 121.027 cv
328.084 121.258 328.273 121.636 328.273 122.175 cv
328.273 123.022 327.617 123.771 326.516 123.771 cv
326.018 123.771 325.602 123.645 325.375 123.512 cv
325.551 122.713 li
325.728 122.812 326.1 122.938 326.471 122.938 cv
326.868 122.938 327.29 122.728 327.29 122.244 cv
327.29 121.769 326.956 121.482 326.137 121.482 cv
325.91 121.482 325.753 121.495 325.59 121.524 cv
325.854 119.144 li
328.109 119.144 li
328.109 120.019 li
cp
f
331.605 120.019 mo
330.018 120.019 li
329.93 120.711 li
330.018 120.704 330.094 120.697 330.194 120.697 cv
330.585 120.697 330.988 120.795 331.271 121.027 cv
331.58 121.258 331.77 121.636 331.77 122.175 cv
331.77 123.022 331.114 123.771 330.012 123.771 cv
329.514 123.771 329.098 123.645 328.871 123.512 cv
329.048 122.713 li
329.225 122.812 329.596 122.938 329.968 122.938 cv
330.365 122.938 330.787 122.728 330.787 122.244 cv
330.787 121.769 330.453 121.482 329.634 121.482 cv
329.407 121.482 329.25 121.495 329.086 121.524 cv
329.35 119.144 li
331.605 119.144 li
331.605 120.019 li
cp
f
333.855 119.787 mo
333.527 119.787 333.363 120.032 333.363 120.313 cv
333.363 120.62 333.609 120.817 333.938 120.929 cv
334.157 120.859 334.353 120.635 334.353 120.355 cv
334.353 120.068 334.207 119.787 333.861 119.787 cv
333.855 119.787 li
cp
333.867 123.035 mo
334.201 123.035 334.428 122.79 334.428 122.469 cv
334.428 122.07 334.157 121.831 333.785 121.72 cv
333.471 121.818 333.288 122.07 333.288 122.399 cv
333.281 122.728 333.508 123.035 333.861 123.035 cv
333.867 123.035 li
cp
333.887 119.067 mo
334.844 119.067 335.24 119.683 335.24 120.236 cv
335.24 120.627 335.052 121.013 334.643 121.237 cv
334.643 121.258 li
335.045 121.426 335.398 121.804 335.398 122.385 cv
335.398 123.21 334.775 123.771 333.823 123.771 cv
332.783 123.771 332.305 123.119 332.305 122.503 cv
332.305 121.957 332.588 121.579 333.036 121.362 cv
333.036 121.349 li
332.639 121.117 332.443 120.746 332.443 120.348 cv
332.443 119.577 333.067 119.067 333.88 119.067 cv
333.887 119.067 li
cp
f
337.439 121.502 mo
337.439 122.209 li
335.789 122.209 li
335.789 121.502 li
337.439 121.502 li
cp
f
339.33 119.844 mo
339.008 119.844 338.769 120.165 338.769 120.642 cv
338.769 121.033 338.964 121.369 339.348 121.369 cv
339.619 121.369 339.795 121.237 339.891 121.075 cv
339.922 121.006 339.934 120.936 339.934 120.803 cv
339.94 120.32 339.771 119.844 339.336 119.844 cv
339.33 119.844 li
cp
338.189 122.924 mo
338.314 122.945 338.416 122.938 338.605 122.924 cv
338.9 122.909 339.197 122.812 339.418 122.644 cv
339.688 122.447 339.865 122.147 339.934 121.804 cv
339.922 121.796 li
339.732 122.007 339.468 122.125 339.09 122.125 cv
338.396 122.125 337.817 121.594 337.817 120.704 cv
337.817 119.816 338.46 119.067 339.361 119.067 cv
340.413 119.067 340.91 119.962 340.91 121.027 cv
340.91 121.979 340.64 122.664 340.199 123.119 cv
339.809 123.519 339.267 123.729 338.624 123.756 cv
338.467 123.771 338.303 123.764 338.189 123.756 cv
338.189 122.924 li
cp
f
342.826 119.844 mo
342.504 119.844 342.265 120.165 342.265 120.642 cv
342.265 121.033 342.46 121.369 342.844 121.369 cv
343.115 121.369 343.291 121.237 343.387 121.075 cv
343.418 121.006 343.43 120.936 343.43 120.803 cv
343.437 120.32 343.267 119.844 342.832 119.844 cv
342.826 119.844 li
cp
341.686 122.924 mo
341.811 122.945 341.912 122.938 342.102 122.924 cv
342.396 122.909 342.693 122.812 342.914 122.644 cv
343.185 122.447 343.361 122.147 343.43 121.804 cv
343.418 121.796 li
343.229 122.007 342.964 122.125 342.586 122.125 cv
341.893 122.125 341.313 121.594 341.313 120.704 cv
341.313 119.816 341.956 119.067 342.857 119.067 cv
343.909 119.067 344.406 119.962 344.406 121.027 cv
344.406 121.979 344.136 122.664 343.695 123.119 cv
343.305 123.519 342.763 123.729 342.12 123.756 cv
341.963 123.771 341.799 123.764 341.686 123.756 cv
341.686 122.924 li
cp
f
346.373 122.966 mo
346.744 122.966 346.945 122.447 346.945 121.411 cv
346.945 120.404 346.75 119.871 346.366 119.871 cv
346.008 119.871 345.78 120.383 345.78 121.411 cv
345.773 122.461 346.001 122.966 346.366 122.966 cv
346.373 122.966 li
cp
346.359 123.771 mo
345.301 123.771 344.836 122.713 344.829 121.426 cv
344.829 120.103 345.326 119.067 346.385 119.067 cv
347.475 119.067 347.91 120.152 347.91 121.398 cv
347.91 122.797 347.399 123.771 346.366 123.771 cv
346.359 123.771 li
cp
f
349.869 122.966 mo
350.24 122.966 350.442 122.447 350.442 121.411 cv
350.442 120.404 350.247 119.871 349.863 119.871 cv
349.504 119.871 349.277 120.383 349.277 121.411 cv
349.271 122.461 349.498 122.966 349.863 122.966 cv
349.869 122.966 li
cp
349.856 123.771 mo
348.798 123.771 348.332 122.713 348.326 121.426 cv
348.326 120.103 348.823 119.067 349.882 119.067 cv
350.972 119.067 351.406 120.152 351.406 121.398 cv
351.406 122.797 350.896 123.771 349.863 123.771 cv
349.856 123.771 li
cp
f
259.601 127.417 mo
258.618 127.417 li
258.618 126.65 li
261.415 126.65 li
261.415 127.417 li
260.421 127.417 li
260.421 130.694 li
259.601 130.694 li
259.601 127.417 li
cp
f
261.761 126.434 mo
262.582 126.434 li
262.582 128.113 li
262.592 128.113 li
262.679 127.982 262.787 127.879 262.916 127.808 cv
263.041 127.736 263.191 127.694 263.343 127.694 cv
263.867 127.694 264.266 128.096 264.266 128.984 cv
264.266 130.694 li
263.445 130.694 li
263.445 129.079 li
263.445 128.695 263.327 128.432 263.019 128.432 cv
262.803 128.432 262.667 128.587 262.608 128.755 cv
262.587 128.81 262.582 128.888 262.582 128.953 cv
262.582 130.694 li
261.761 130.694 li
261.761 126.434 li
cp
f
266.523 128.888 mo
266.523 128.671 266.437 128.293 266.064 128.293 cv
265.713 128.293 265.573 128.648 265.551 128.888 cv
266.523 128.888 li
cp
265.557 129.512 mo
265.584 129.896 265.918 130.075 266.302 130.075 cv
266.583 130.075 266.81 130.033 267.031 129.949 cv
267.139 130.568 li
266.869 130.694 266.54 130.753 266.183 130.753 cv
265.287 130.753 264.774 130.178 264.774 129.253 cv
264.774 128.51 265.195 127.688 266.108 127.688 cv
266.961 127.688 267.285 128.426 267.285 129.152 cv
267.285 129.308 267.269 129.445 267.258 129.518 cv
265.557 129.512 li
cp
f
268.921 129.758 mo
269.137 129.884 269.482 130.01 269.833 130.01 cv
270.211 130.01 270.412 129.835 270.412 129.566 cv
270.412 129.32 270.239 129.169 269.801 129.001 cv
269.196 128.762 268.797 128.39 268.797 127.795 cv
268.797 127.106 269.321 126.583 270.174 126.583 cv
270.589 126.583 270.887 126.673 271.103 126.787 cv
270.919 127.52 li
270.779 127.442 270.514 127.327 270.163 127.327 cv
269.807 127.327 269.634 127.514 269.634 127.718 cv
269.634 127.976 269.833 128.089 270.309 128.293 cv
270.951 128.558 271.249 128.93 271.249 129.505 cv
271.249 130.184 270.784 130.76 269.785 130.76 cv
269.369 130.76 268.959 130.634 268.753 130.508 cv
268.921 129.758 li
cp
f
271.762 126.434 mo
272.583 126.434 li
272.583 128.113 li
272.593 128.113 li
272.68 127.982 272.788 127.879 272.917 127.808 cv
273.042 127.736 273.192 127.694 273.344 127.694 cv
273.868 127.694 274.267 128.096 274.267 128.984 cv
274.267 130.694 li
273.446 130.694 li
273.446 129.079 li
273.446 128.695 273.328 128.432 273.02 128.432 cv
272.804 128.432 272.668 128.587 272.609 128.755 cv
272.588 128.81 272.583 128.888 272.583 128.953 cv
272.583 130.694 li
271.762 130.694 li
271.762 126.434 li
cp
f
276.157 130.106 mo
276.481 130.106 276.681 129.751 276.681 129.224 cv
276.681 128.791 276.53 128.348 276.157 128.348 cv
275.769 128.348 275.617 128.791 275.617 129.23 cv
275.617 129.728 275.806 130.106 276.152 130.106 cv
276.157 130.106 li
cp
276.141 130.76 mo
275.369 130.76 274.775 130.195 274.775 129.247 cv
274.775 128.3 275.336 127.694 276.189 127.694 cv
276.994 127.694 277.534 128.312 277.534 129.199 cv
277.534 130.268 276.849 130.76 276.146 130.76 cv
276.141 130.76 li
cp
f
278.863 129.434 mo
278.863 129.505 278.868 129.566 278.879 129.625 cv
278.933 129.871 279.122 130.058 279.359 130.058 cv
279.716 130.058 279.926 129.728 279.926 129.23 cv
279.926 128.762 279.737 128.407 279.37 128.407 cv
279.138 128.407 278.933 128.6 278.879 128.869 cv
278.868 128.917 278.863 128.978 278.863 129.031 cv
278.863 129.434 li
cp
278.042 128.743 mo
278.042 128.36 278.031 128.035 278.02 127.76 cv
278.733 127.76 li
278.771 128.167 li
278.782 128.167 li
278.976 127.862 279.278 127.694 279.662 127.694 cv
280.24 127.694 280.758 128.251 280.758 129.188 cv
280.758 130.255 280.148 130.76 279.559 130.76 cv
279.241 130.76 278.992 130.615 278.874 130.424 cv
278.863 130.424 li
278.863 131.882 li
278.042 131.882 li
278.042 128.743 li
cp
f
282.092 129.434 mo
282.092 129.505 282.097 129.566 282.108 129.625 cv
282.162 129.871 282.351 130.058 282.588 130.058 cv
282.945 130.058 283.155 129.728 283.155 129.23 cv
283.155 128.762 282.966 128.407 282.599 128.407 cv
282.367 128.407 282.162 128.6 282.108 128.869 cv
282.097 128.917 282.092 128.978 282.092 129.031 cv
282.092 129.434 li
cp
281.271 128.743 mo
281.271 128.36 281.26 128.035 281.249 127.76 cv
281.962 127.76 li
282 128.167 li
282.011 128.167 li
282.205 127.862 282.507 127.694 282.891 127.694 cv
283.469 127.694 283.987 128.251 283.987 129.188 cv
283.987 130.255 283.377 130.76 282.788 130.76 cv
282.47 130.76 282.221 130.615 282.103 130.424 cv
282.092 130.424 li
282.092 131.882 li
281.271 131.882 li
281.271 128.743 li
cp
f
286.114 128.888 mo
286.114 128.671 286.028 128.293 285.655 128.293 cv
285.304 128.293 285.164 128.648 285.142 128.888 cv
286.114 128.888 li
cp
285.148 129.512 mo
285.175 129.896 285.509 130.075 285.893 130.075 cv
286.174 130.075 286.4 130.033 286.622 129.949 cv
286.73 130.568 li
286.46 130.694 286.13 130.753 285.774 130.753 cv
284.878 130.753 284.365 130.178 284.365 129.253 cv
284.365 128.51 284.786 127.688 285.699 127.688 cv
286.552 127.688 286.875 128.426 286.875 129.152 cv
286.875 129.308 286.859 129.445 286.849 129.518 cv
285.148 129.512 li
cp
f
287.362 129.902 mo
287.513 130.003 287.826 130.117 288.069 130.117 cv
288.317 130.117 288.42 130.028 288.42 129.877 cv
288.42 129.722 288.339 129.65 288.037 129.535 cv
287.486 129.337 287.275 129.001 287.281 128.659 cv
287.281 128.108 287.702 127.694 288.355 127.694 cv
288.663 127.694 288.933 127.778 289.095 127.867 cv
288.955 128.491 li
288.836 128.426 288.604 128.329 288.382 128.329 cv
288.182 128.329 288.069 128.419 288.069 128.564 cv
288.069 128.707 288.171 128.779 288.496 128.905 cv
288.998 129.092 289.203 129.379 289.208 129.806 cv
289.208 130.358 288.825 130.76 288.069 130.76 cv
287.723 130.76 287.416 130.669 287.216 130.55 cv
287.362 129.902 li
cp
f
292.206 129.308 mo
291.773 129.308 291.439 129.421 291.439 129.77 cv
291.439 130.003 291.579 130.117 291.763 130.117 cv
291.962 130.117 292.135 129.968 292.189 129.781 cv
292.2 129.734 292.206 129.68 292.206 129.625 cv
292.206 129.308 li
cp
293 129.986 mo
293 130.262 293.01 130.531 293.042 130.694 cv
292.303 130.694 li
292.254 130.4 li
292.238 130.4 li
292.065 130.634 291.795 130.76 291.482 130.76 cv
290.947 130.76 290.629 130.327 290.629 129.86 cv
290.629 129.098 291.244 128.737 292.179 128.737 cv
292.179 128.701 li
292.179 128.545 292.103 128.323 291.698 128.323 cv
291.428 128.323 291.142 128.426 290.969 128.539 cv
290.818 127.957 li
291.001 127.844 291.363 127.694 291.844 127.694 cv
292.724 127.694 293 128.27 293 128.959 cv
293 129.986 li
cp
f
294.529 126.961 mo
294.529 127.76 li
295.117 127.76 li
295.117 128.432 li
294.529 128.432 li
294.529 129.499 li
294.529 129.854 294.61 130.016 294.853 130.016 cv
294.966 130.016 295.02 130.01 295.096 129.991 cv
295.101 130.682 li
294.999 130.724 294.799 130.76 294.572 130.76 cv
294.307 130.76 294.086 130.657 293.951 130.508 cv
293.8 130.333 293.724 130.052 293.724 129.638 cv
293.724 128.432 li
293.373 128.432 li
293.373 127.76 li
293.724 127.76 li
293.724 127.207 li
294.529 126.961 li
cp
f
297.525 130.045 mo
297.606 130.064 297.704 130.064 297.844 130.064 cv
298.216 130.064 298.546 129.902 298.546 129.476 cv
298.546 129.068 298.216 128.905 297.806 128.905 cv
297.525 128.905 li
297.525 130.045 li
cp
297.525 128.251 mo
297.795 128.251 li
298.233 128.251 298.459 128.054 298.459 127.753 cv
298.459 127.447 298.249 127.285 297.876 127.285 cv
297.693 127.285 297.59 127.297 297.525 127.316 cv
297.525 128.251 li
cp
296.71 126.709 mo
296.926 126.661 297.358 126.619 297.774 126.619 cv
298.276 126.619 298.583 126.673 298.848 126.848 cv
299.102 126.997 299.28 127.274 299.28 127.646 cv
299.28 127.999 299.091 128.329 298.686 128.503 cv
298.686 128.516 li
299.102 128.636 299.41 128.989 299.41 129.512 cv
299.41 129.884 299.259 130.171 299.032 130.369 cv
298.767 130.604 298.325 130.736 297.601 130.736 cv
297.196 130.736 296.894 130.705 296.71 130.676 cv
296.71 126.709 li
cp
f
299.95 128.726 mo
299.95 128.293 299.945 128.012 299.928 127.76 cv
300.63 127.76 li
300.663 128.306 li
300.685 128.306 li
300.819 127.873 301.138 127.694 301.397 127.694 cv
301.473 127.694 301.511 127.699 301.57 127.711 cv
301.57 128.57 li
301.5 128.558 301.435 128.545 301.343 128.545 cv
301.041 128.545 300.835 128.72 300.782 129.008 cv
300.771 129.068 300.766 129.134 300.766 129.211 cv
300.766 130.694 li
299.945 130.694 li
299.95 128.726 li
cp
f
301.986 130.694 mo
301.986 127.76 li
302.807 127.76 li
302.807 130.694 li
301.986 130.694 li
cp
302.391 127.375 mo
302.115 127.375 301.937 127.159 301.937 126.89 cv
301.937 126.613 302.121 126.404 302.401 126.404 cv
302.682 126.404 302.855 126.613 302.86 126.89 cv
302.86 127.159 302.682 127.375 302.396 127.375 cv
302.391 127.375 li
cp
f
303.466 128.695 mo
303.466 128.329 303.455 128.024 303.444 127.76 cv
304.157 127.76 li
304.195 128.167 li
304.211 128.167 li
304.319 127.976 304.583 127.694 305.026 127.694 cv
305.566 127.694 305.971 128.096 305.971 128.959 cv
305.971 130.694 li
305.15 130.694 li
305.15 129.068 li
305.15 128.69 305.032 128.432 304.734 128.432 cv
304.508 128.432 304.373 128.606 304.313 128.774 cv
304.292 128.833 304.287 128.917 304.287 129.001 cv
304.287 130.694 li
303.466 130.694 li
303.466 128.695 li
cp
f
307.516 126.961 mo
307.516 127.76 li
308.104 127.76 li
308.104 128.432 li
307.516 128.432 li
307.516 129.499 li
307.516 129.854 307.598 130.016 307.84 130.016 cv
307.953 130.016 308.008 130.01 308.083 129.991 cv
308.088 130.682 li
307.986 130.724 307.786 130.76 307.559 130.76 cv
307.295 130.76 307.073 130.657 306.938 130.508 cv
306.787 130.333 306.711 130.052 306.711 129.638 cv
306.711 128.432 li
306.36 128.432 li
306.36 127.76 li
306.711 127.76 li
306.711 127.207 li
307.516 126.961 li
cp
f
309.785 130.106 mo
310.109 130.106 310.309 129.751 310.309 129.224 cv
310.309 128.791 310.157 128.348 309.785 128.348 cv
309.396 128.348 309.244 128.791 309.244 129.23 cv
309.244 129.728 309.434 130.106 309.779 130.106 cv
309.785 130.106 li
cp
309.769 130.76 mo
308.996 130.76 308.402 130.195 308.402 129.247 cv
308.402 128.3 308.964 127.694 309.816 127.694 cv
310.621 127.694 311.162 128.312 311.162 129.199 cv
311.162 130.268 310.477 130.76 309.773 130.76 cv
309.769 130.76 li
cp
f
311.67 128.695 mo
311.67 128.329 311.658 128.024 311.647 127.76 cv
312.36 127.76 li
312.398 128.167 li
312.414 128.167 li
312.522 127.976 312.787 127.694 313.23 127.694 cv
313.77 127.694 314.175 128.096 314.175 128.959 cv
314.175 130.694 li
313.354 130.694 li
313.354 129.068 li
313.354 128.69 313.235 128.432 312.938 128.432 cv
312.711 128.432 312.576 128.606 312.518 128.774 cv
312.496 128.833 312.49 128.917 312.49 129.001 cv
312.49 130.694 li
311.67 130.694 li
311.67 128.695 li
cp
f
315.957 126.65 mo
316.777 126.65 li
316.777 129.926 li
318.225 129.926 li
318.225 130.694 li
315.957 130.694 li
315.957 126.65 li
cp
f
320.109 129.308 mo
319.677 129.308 319.342 129.421 319.342 129.77 cv
319.342 130.003 319.482 130.117 319.666 130.117 cv
319.865 130.117 320.039 129.968 320.093 129.781 cv
320.104 129.734 320.109 129.68 320.109 129.625 cv
320.109 129.308 li
cp
320.902 129.986 mo
320.902 130.262 320.914 130.531 320.945 130.694 cv
320.206 130.694 li
320.157 130.4 li
320.141 130.4 li
319.969 130.634 319.698 130.76 319.385 130.76 cv
318.851 130.76 318.532 130.327 318.532 129.86 cv
318.532 129.098 319.147 128.737 320.082 128.737 cv
320.082 128.701 li
320.082 128.545 320.006 128.323 319.602 128.323 cv
319.331 128.323 319.045 128.426 318.872 128.539 cv
318.721 127.957 li
318.904 127.844 319.267 127.694 319.747 127.694 cv
320.627 127.694 320.902 128.27 320.902 128.959 cv
320.902 129.986 li
cp
f
322.377 129.001 mo
322.388 129.001 li
322.447 128.875 322.512 128.755 322.576 128.648 cv
323.111 127.76 li
324.1 127.76 li
323.154 128.947 li
324.234 130.694 li
323.225 130.694 li
322.582 129.487 li
322.377 129.781 li
322.377 130.694 li
321.557 130.694 li
321.557 126.434 li
322.377 126.434 li
322.377 129.001 li
cp
f
326.017 128.888 mo
326.017 128.671 325.93 128.293 325.558 128.293 cv
325.207 128.293 325.066 128.648 325.045 128.888 cv
326.017 128.888 li
cp
325.051 129.512 mo
325.077 129.896 325.412 130.075 325.795 130.075 cv
326.076 130.075 326.303 130.033 326.524 129.949 cv
326.633 130.568 li
326.362 130.694 326.033 130.753 325.676 130.753 cv
324.78 130.753 324.268 130.178 324.268 129.253 cv
324.268 128.51 324.688 127.688 325.602 127.688 cv
326.454 127.688 326.777 128.426 326.777 129.152 cv
326.777 129.308 326.762 129.445 326.751 129.518 cv
325.051 129.512 li
cp
f
326.832 131.407 mo
327.005 130.873 327.15 130.249 327.227 129.703 cv
328.063 129.644 li
327.885 130.255 327.643 130.886 327.383 131.354 cv
326.832 131.407 li
cp
f
330.461 127.394 mo
330.186 127.394 329.98 127.669 329.98 128.077 cv
329.98 128.413 330.148 128.701 330.478 128.701 cv
330.71 128.701 330.861 128.587 330.941 128.449 cv
330.969 128.39 330.98 128.329 330.98 128.215 cv
330.985 127.802 330.84 127.394 330.467 127.394 cv
330.461 127.394 li
cp
329.484 130.033 mo
329.592 130.052 329.678 130.045 329.84 130.033 cv
330.094 130.022 330.348 129.938 330.537 129.793 cv
330.77 129.625 330.92 129.367 330.98 129.073 cv
330.969 129.068 li
330.807 129.247 330.58 129.35 330.256 129.35 cv
329.662 129.35 329.166 128.894 329.166 128.131 cv
329.166 127.369 329.717 126.728 330.488 126.728 cv
331.391 126.728 331.816 127.495 331.816 128.407 cv
331.816 129.224 331.584 129.812 331.207 130.201 cv
330.871 130.543 330.407 130.724 329.856 130.747 cv
329.722 130.76 329.581 130.753 329.484 130.747 cv
329.484 130.033 li
cp
f
333.502 127.346 mo
333.221 127.346 333.08 127.556 333.08 127.795 cv
333.08 128.06 333.291 128.228 333.572 128.323 cv
333.761 128.264 333.928 128.071 333.928 127.831 cv
333.928 127.585 333.805 127.346 333.507 127.346 cv
333.502 127.346 li
cp
333.513 130.129 mo
333.799 130.129 333.993 129.919 333.993 129.644 cv
333.993 129.302 333.761 129.098 333.442 129.001 cv
333.172 129.085 333.016 129.302 333.016 129.583 cv
333.01 129.865 333.205 130.129 333.507 130.129 cv
333.513 130.129 li
cp
333.529 126.728 mo
334.35 126.728 334.689 127.255 334.689 127.73 cv
334.689 128.066 334.527 128.396 334.177 128.587 cv
334.177 128.606 li
334.522 128.749 334.824 129.073 334.824 129.571 cv
334.824 130.279 334.29 130.76 333.475 130.76 cv
332.584 130.76 332.174 130.201 332.174 129.674 cv
332.174 129.205 332.416 128.881 332.8 128.695 cv
332.8 128.684 li
332.459 128.486 332.292 128.167 332.292 127.825 cv
332.292 127.165 332.826 126.728 333.523 126.728 cv
333.529 126.728 li
cp
f
336.271 127.604 mo
336.262 127.604 li
335.592 127.957 li
335.457 127.274 li
336.391 126.793 li
337.066 126.793 li
337.066 130.694 li
336.271 130.694 li
336.271 127.604 li
cp
f
340.257 130.045 mo
340.338 130.064 340.436 130.064 340.575 130.064 cv
340.947 130.064 341.277 129.902 341.277 129.476 cv
341.277 129.068 340.947 128.905 340.537 128.905 cv
340.257 128.905 li
340.257 130.045 li
cp
340.257 128.251 mo
340.527 128.251 li
340.965 128.251 341.191 128.054 341.191 127.753 cv
341.191 127.447 340.98 127.285 340.607 127.285 cv
340.424 127.285 340.322 127.297 340.257 127.316 cv
340.257 128.251 li
cp
339.441 126.709 mo
339.657 126.661 340.09 126.619 340.506 126.619 cv
341.008 126.619 341.314 126.673 341.58 126.848 cv
341.834 126.997 342.012 127.274 342.012 127.646 cv
342.012 127.999 341.822 128.329 341.418 128.503 cv
341.418 128.516 li
341.834 128.636 342.141 128.989 342.141 129.512 cv
342.141 129.884 341.99 130.171 341.764 130.369 cv
341.498 130.604 341.057 130.736 340.332 130.736 cv
339.928 130.736 339.625 130.705 339.441 130.676 cv
339.441 126.709 li
cp
f
344.096 129.308 mo
343.664 129.308 343.329 129.421 343.329 129.77 cv
343.329 130.003 343.469 130.117 343.652 130.117 cv
343.853 130.117 344.025 129.968 344.08 129.781 cv
344.09 129.734 344.096 129.68 344.096 129.625 cv
344.096 129.308 li
cp
344.89 129.986 mo
344.89 130.262 344.9 130.531 344.933 130.694 cv
344.193 130.694 li
344.145 130.4 li
344.128 130.4 li
343.955 130.634 343.686 130.76 343.372 130.76 cv
342.838 130.76 342.52 130.327 342.52 129.86 cv
342.52 129.098 343.135 128.737 344.068 128.737 cv
344.068 128.701 li
344.068 128.545 343.993 128.323 343.588 128.323 cv
343.318 128.323 343.031 128.426 342.859 128.539 cv
342.708 127.957 li
342.892 127.844 343.254 127.694 343.734 127.694 cv
344.614 127.694 344.89 128.27 344.89 128.959 cv
344.89 129.986 li
cp
f
345.543 126.434 mo
346.364 126.434 li
346.364 130.694 li
345.543 130.694 li
345.543 126.434 li
cp
f
347.941 126.961 mo
347.941 127.76 li
348.529 127.76 li
348.529 128.432 li
347.941 128.432 li
347.941 129.499 li
347.941 129.854 348.021 130.016 348.265 130.016 cv
348.378 130.016 348.432 130.01 348.508 129.991 cv
348.514 130.682 li
348.41 130.724 348.211 130.76 347.984 130.76 cv
347.719 130.76 347.498 130.657 347.363 130.508 cv
347.212 130.333 347.137 130.052 347.137 129.638 cv
347.137 128.432 li
346.785 128.432 li
346.785 127.76 li
347.137 127.76 li
347.137 127.207 li
347.941 126.961 li
cp
f
349.004 130.694 mo
349.004 127.76 li
349.825 127.76 li
349.825 130.694 li
349.004 130.694 li
cp
349.409 127.375 mo
349.134 127.375 348.955 127.159 348.955 126.89 cv
348.955 126.613 349.139 126.404 349.42 126.404 cv
349.701 126.404 349.873 126.613 349.879 126.89 cv
349.879 127.159 349.701 127.375 349.414 127.375 cv
349.409 127.375 li
cp
f
350.484 128.695 mo
350.484 128.329 350.473 128.024 350.462 127.76 cv
351.158 127.76 li
351.191 128.161 li
351.207 128.161 li
351.32 127.97 351.559 127.694 352.006 127.694 cv
352.352 127.694 352.617 127.892 352.73 128.197 cv
352.74 128.197 li
352.844 128.041 352.957 127.921 353.086 127.837 cv
353.232 127.747 353.395 127.694 353.589 127.694 cv
354.096 127.694 354.479 128.089 354.479 128.966 cv
354.479 130.694 li
353.681 130.694 li
353.681 129.104 li
353.681 128.678 353.557 128.432 353.291 128.432 cv
353.098 128.432 352.968 128.575 352.908 128.749 cv
352.893 128.816 352.881 128.905 352.881 128.978 cv
352.881 130.694 li
352.082 130.694 li
352.082 129.05 li
352.082 128.684 351.963 128.432 351.699 128.432 cv
351.488 128.432 351.363 128.612 351.315 128.755 cv
351.288 128.827 351.283 128.911 351.283 128.989 cv
351.283 130.694 li
350.484 130.694 li
350.484 128.695 li
cp
f
356.359 130.106 mo
356.684 130.106 356.883 129.751 356.883 129.224 cv
356.883 128.791 356.731 128.348 356.359 128.348 cv
355.971 128.348 355.818 128.791 355.818 129.23 cv
355.818 129.728 356.008 130.106 356.354 130.106 cv
356.359 130.106 li
cp
356.343 130.76 mo
355.57 130.76 354.977 130.195 354.977 129.247 cv
354.977 128.3 355.538 127.694 356.391 127.694 cv
357.195 127.694 357.736 128.312 357.736 129.199 cv
357.736 130.268 357.051 130.76 356.348 130.76 cv
356.343 130.76 li
cp
f
358.249 128.726 mo
358.249 128.293 358.244 128.012 358.227 127.76 cv
358.93 127.76 li
358.961 128.306 li
358.983 128.306 li
359.118 127.873 359.438 127.694 359.695 127.694 cv
359.771 127.694 359.81 127.699 359.869 127.711 cv
359.869 128.57 li
359.799 128.558 359.734 128.545 359.643 128.545 cv
359.34 128.545 359.135 128.72 359.08 129.008 cv
359.07 129.068 359.064 129.134 359.064 129.211 cv
359.064 130.694 li
358.244 130.694 li
358.249 128.726 li
cp
f
361.857 128.888 mo
361.857 128.671 361.771 128.293 361.398 128.293 cv
361.047 128.293 360.906 128.648 360.885 128.888 cv
361.857 128.888 li
cp
360.891 129.512 mo
360.918 129.896 361.252 130.075 361.636 130.075 cv
361.916 130.075 362.143 130.033 362.365 129.949 cv
362.473 130.568 li
362.203 130.694 361.873 130.753 361.517 130.753 cv
360.621 130.753 360.107 130.178 360.107 129.253 cv
360.107 128.51 360.529 127.688 361.441 127.688 cv
362.295 127.688 362.618 128.426 362.618 129.152 cv
362.618 129.308 362.602 129.445 362.592 129.518 cv
360.891 129.512 li
cp
f
365.043 128.539 mo
365.113 128.558 365.199 128.564 365.318 128.564 cv
365.756 128.564 366.025 128.318 366.025 127.909 cv
366.025 127.537 365.799 127.316 365.383 127.316 cv
365.216 127.316 365.102 127.327 365.043 127.346 cv
365.043 128.539 li
cp
364.228 126.703 mo
364.481 126.655 364.838 126.619 365.34 126.619 cv
365.848 126.619 366.215 126.728 366.457 126.949 cv
366.689 127.148 366.841 127.484 366.841 127.879 cv
366.841 128.281 366.728 128.617 366.512 128.839 cv
366.23 129.127 365.81 129.266 365.324 129.266 cv
365.216 129.266 365.119 129.26 365.043 129.241 cv
365.043 130.694 li
364.228 130.694 li
364.228 126.703 li
cp
f
367.328 130.694 mo
367.328 127.76 li
368.148 127.76 li
368.148 130.694 li
367.328 130.694 li
cp
367.732 127.375 mo
367.457 127.375 367.279 127.159 367.279 126.89 cv
367.279 126.613 367.463 126.404 367.743 126.404 cv
368.023 126.404 368.197 126.613 368.202 126.89 cv
368.202 127.159 368.023 127.375 367.738 127.375 cv
367.732 127.375 li
cp
f
369.628 129.001 mo
369.639 129.001 li
369.697 128.875 369.763 128.755 369.828 128.648 cv
370.362 127.76 li
371.35 127.76 li
370.405 128.947 li
371.485 130.694 li
370.476 130.694 li
369.833 129.487 li
369.628 129.781 li
369.628 130.694 li
368.807 130.694 li
368.807 126.434 li
369.628 126.434 li
369.628 129.001 li
cp
f
373.268 128.888 mo
373.268 128.671 373.181 128.293 372.809 128.293 cv
372.457 128.293 372.316 128.648 372.295 128.888 cv
373.268 128.888 li
cp
372.301 129.512 mo
372.328 129.896 372.662 130.075 373.046 130.075 cv
373.326 130.075 373.553 130.033 373.775 129.949 cv
373.883 130.568 li
373.613 130.694 373.283 130.753 372.927 130.753 cv
372.031 130.753 371.518 130.178 371.518 129.253 cv
371.518 128.51 371.939 127.688 372.852 127.688 cv
373.705 127.688 374.028 128.426 374.028 129.152 cv
374.028 129.308 374.012 129.445 374.002 129.518 cv
372.301 129.512 li
cp
f
294.2 138.308 mo
293.768 138.308 293.434 138.421 293.434 138.77 cv
293.434 139.003 293.574 139.117 293.757 139.117 cv
293.957 139.117 294.13 138.968 294.184 138.781 cv
294.195 138.734 294.2 138.68 294.2 138.625 cv
294.2 138.308 li
cp
294.994 138.986 mo
294.994 139.262 295.005 139.531 295.037 139.694 cv
294.297 139.694 li
294.249 139.4 li
294.232 139.4 li
294.06 139.634 293.79 139.76 293.477 139.76 cv
292.942 139.76 292.624 139.327 292.624 138.86 cv
292.624 138.098 293.239 137.737 294.173 137.737 cv
294.173 137.701 li
294.173 137.545 294.098 137.323 293.692 137.323 cv
293.422 137.323 293.136 137.426 292.963 137.539 cv
292.813 136.957 li
292.996 136.844 293.358 136.694 293.838 136.694 cv
294.719 136.694 294.994 137.27 294.994 137.959 cv
294.994 138.986 li
cp
f
295.647 137.695 mo
295.647 137.329 295.636 137.024 295.625 136.76 cv
296.322 136.76 li
296.354 137.161 li
296.371 137.161 li
296.484 136.97 296.722 136.694 297.17 136.694 cv
297.516 136.694 297.78 136.892 297.894 137.197 cv
297.904 137.197 li
298.007 137.041 298.121 136.921 298.25 136.837 cv
298.396 136.747 298.558 136.694 298.752 136.694 cv
299.26 136.694 299.643 137.089 299.643 137.966 cv
299.643 139.694 li
298.844 139.694 li
298.844 138.104 li
298.844 137.678 298.72 137.432 298.455 137.432 cv
298.261 137.432 298.131 137.575 298.072 137.749 cv
298.056 137.816 298.045 137.905 298.045 137.978 cv
298.045 139.694 li
297.246 139.694 li
297.246 138.05 li
297.246 137.684 297.127 137.432 296.862 137.432 cv
296.652 137.432 296.527 137.612 296.479 137.755 cv
296.452 137.827 296.446 137.911 296.446 137.989 cv
296.446 139.694 li
295.647 139.694 li
295.647 137.695 li
cp
f
301.89 137.888 mo
301.89 137.671 301.803 137.293 301.431 137.293 cv
301.08 137.293 300.939 137.648 300.917 137.888 cv
301.89 137.888 li
cp
300.923 138.512 mo
300.95 138.896 301.285 139.075 301.668 139.075 cv
301.949 139.075 302.176 139.033 302.397 138.949 cv
302.505 139.568 li
302.235 139.694 301.906 139.753 301.549 139.753 cv
300.653 139.753 300.14 139.178 300.14 138.253 cv
300.14 137.51 300.562 136.688 301.474 136.688 cv
302.327 136.688 302.651 137.426 302.651 138.152 cv
302.651 138.308 302.635 138.445 302.624 138.518 cv
300.923 138.512 li
cp
f
303.148 137.726 mo
303.148 137.293 303.143 137.012 303.126 136.76 cv
303.828 136.76 li
303.86 137.306 li
303.882 137.306 li
304.017 136.873 304.336 136.694 304.595 136.694 cv
304.67 136.694 304.708 136.699 304.768 136.711 cv
304.768 137.57 li
304.698 137.558 304.633 137.545 304.541 137.545 cv
304.239 137.545 304.033 137.72 303.979 138.008 cv
303.969 138.068 303.963 138.134 303.963 138.211 cv
303.963 139.694 li
303.143 139.694 li
303.148 137.726 li
cp
f
305.184 139.694 mo
305.184 136.76 li
306.005 136.76 li
306.005 139.694 li
305.184 139.694 li
cp
305.589 136.375 mo
305.313 136.375 305.135 136.159 305.135 135.89 cv
305.135 135.613 305.319 135.404 305.6 135.404 cv
305.88 135.404 306.053 135.613 306.059 135.89 cv
306.059 136.159 305.88 136.375 305.594 136.375 cv
305.589 136.375 li
cp
f
308.645 139.621 mo
308.5 139.699 308.225 139.76 307.91 139.76 cv
307.058 139.76 306.512 139.178 306.512 138.253 cv
306.512 137.396 307.041 136.694 308.023 136.694 cv
308.24 136.694 308.478 136.736 308.65 136.808 cv
308.521 137.486 li
308.424 137.438 308.277 137.396 308.063 137.396 cv
307.63 137.396 307.35 137.737 307.354 138.218 cv
307.354 138.758 307.679 139.045 308.078 139.045 cv
308.272 139.045 308.424 139.01 308.548 138.949 cv
308.645 139.621 li
cp
f
310.523 138.308 mo
310.092 138.308 309.758 138.421 309.758 138.77 cv
309.758 139.003 309.897 139.117 310.081 139.117 cv
310.281 139.117 310.453 138.968 310.508 138.781 cv
310.519 138.734 310.523 138.68 310.523 138.625 cv
310.523 138.308 li
cp
311.318 138.986 mo
311.318 139.262 311.328 139.531 311.361 139.694 cv
310.621 139.694 li
310.572 139.4 li
310.557 139.4 li
310.383 139.634 310.113 139.76 309.801 139.76 cv
309.266 139.76 308.947 139.327 308.947 138.86 cv
308.947 138.098 309.563 137.737 310.497 137.737 cv
310.497 137.701 li
310.497 137.545 310.422 137.323 310.016 137.323 cv
309.746 137.323 309.46 137.426 309.287 137.539 cv
309.137 136.957 li
309.32 136.844 309.682 136.694 310.162 136.694 cv
311.043 136.694 311.318 137.27 311.318 137.959 cv
311.318 138.986 li
cp
f
312.792 138.445 mo
312.792 138.505 312.797 138.56 312.809 138.608 cv
312.861 138.848 313.051 139.039 313.289 139.039 cv
313.64 139.039 313.855 138.739 313.855 138.211 cv
313.855 137.755 313.672 137.396 313.289 137.396 cv
313.067 137.396 312.861 137.581 312.809 137.846 cv
312.797 137.9 312.792 137.953 312.792 138.014 cv
312.792 138.445 li
cp
311.971 135.434 mo
312.792 135.434 li
312.792 137.108 li
312.803 137.108 li
312.959 136.856 313.234 136.694 313.602 136.694 cv
314.233 136.694 314.692 137.276 314.688 138.176 cv
314.688 139.232 314.088 139.76 313.482 139.76 cv
313.176 139.76 312.873 139.634 312.689 139.285 cv
312.678 139.285 li
312.646 139.694 li
311.949 139.694 li
311.96 139.501 311.971 139.148 311.971 138.818 cv
311.971 135.434 li
cp
f
316.604 138.308 mo
316.172 138.308 315.838 138.421 315.838 138.77 cv
315.838 139.003 315.978 139.117 316.161 139.117 cv
316.361 139.117 316.533 138.968 316.588 138.781 cv
316.599 138.734 316.604 138.68 316.604 138.625 cv
316.604 138.308 li
cp
317.398 138.986 mo
317.398 139.262 317.408 139.531 317.441 139.694 cv
316.701 139.694 li
316.652 139.4 li
316.637 139.4 li
316.463 139.634 316.193 139.76 315.881 139.76 cv
315.346 139.76 315.027 139.327 315.027 138.86 cv
315.027 138.098 315.643 137.737 316.577 137.737 cv
316.577 137.701 li
316.577 137.545 316.502 137.323 316.096 137.323 cv
315.826 137.323 315.54 137.426 315.367 137.539 cv
315.217 136.957 li
315.4 136.844 315.762 136.694 316.242 136.694 cv
317.123 136.694 317.398 137.27 317.398 137.959 cv
317.398 138.986 li
cp
f
318.057 137.726 mo
318.057 137.293 318.051 137.012 318.035 136.76 cv
318.736 136.76 li
318.77 137.306 li
318.791 137.306 li
318.926 136.873 319.244 136.694 319.504 136.694 cv
319.579 136.694 319.617 136.699 319.676 136.711 cv
319.676 137.57 li
319.606 137.558 319.541 137.545 319.449 137.545 cv
319.147 137.545 318.941 137.72 318.889 138.008 cv
318.877 138.068 318.872 138.134 318.872 138.211 cv
318.872 139.694 li
318.051 139.694 li
318.057 137.726 li
cp
f
321.74 137.953 mo
321.74 137.9 321.734 137.839 321.725 137.785 cv
321.664 137.545 321.508 137.384 321.281 137.384 cv
320.979 137.384 320.741 137.684 320.741 138.218 cv
320.741 138.655 320.936 138.997 321.275 138.997 cv
321.492 138.997 321.659 138.842 321.713 138.631 cv
321.734 138.56 321.74 138.463 321.74 138.386 cv
321.74 137.953 li
cp
322.561 139.268 mo
322.561 139.831 322.459 140.293 322.156 140.587 cv
321.869 140.863 321.476 140.947 321.087 140.947 cv
320.736 140.947 320.374 140.869 320.137 140.726 cv
320.299 140.029 li
320.466 140.138 320.752 140.251 321.065 140.251 cv
321.454 140.251 321.751 140.024 321.751 139.478 cv
321.751 139.291 li
321.74 139.291 li
321.584 139.531 321.33 139.669 321.027 139.669 cv
320.374 139.669 319.91 139.081 319.91 138.241 cv
319.91 137.293 320.455 136.694 321.108 136.694 cv
321.471 136.694 321.697 136.867 321.832 137.108 cv
321.843 137.108 li
321.869 136.76 li
322.582 136.76 li
322.572 136.951 322.561 137.197 322.561 137.636 cv
322.561 139.268 li
cp
f
323.226 137.726 mo
323.226 137.293 323.221 137.012 323.203 136.76 cv
323.906 136.76 li
323.938 137.306 li
323.96 137.306 li
324.095 136.873 324.414 136.694 324.672 136.694 cv
324.748 136.694 324.786 136.699 324.846 136.711 cv
324.846 137.57 li
324.775 137.558 324.711 137.545 324.619 137.545 cv
324.316 137.545 324.111 137.72 324.057 138.008 cv
324.047 138.068 324.041 138.134 324.041 138.211 cv
324.041 139.694 li
323.221 139.694 li
323.226 137.726 li
cp
f
325.262 139.694 mo
325.262 136.76 li
326.082 136.76 li
326.082 139.694 li
325.262 139.694 li
cp
325.666 136.375 mo
325.391 136.375 325.213 136.159 325.213 135.89 cv
325.213 135.613 325.396 135.404 325.678 135.404 cv
325.958 135.404 326.131 135.613 326.137 135.89 cv
326.137 136.159 325.958 136.375 325.672 136.375 cv
325.666 136.375 li
cp
f
326.741 135.434 mo
327.563 135.434 li
327.563 139.694 li
326.741 139.694 li
326.741 135.434 li
cp
f
328.221 135.434 mo
329.041 135.434 li
329.041 139.694 li
328.221 139.694 li
328.221 135.434 li
cp
f
330.115 139.76 mo
329.84 139.76 329.641 139.526 329.641 139.207 cv
329.641 138.877 329.84 138.65 330.127 138.65 cv
330.407 138.65 330.602 138.871 330.607 139.207 cv
330.607 139.526 330.412 139.76 330.121 139.76 cv
330.115 139.76 li
cp
f
333.086 139.621 mo
332.939 139.699 332.664 139.76 332.352 139.76 cv
331.498 139.76 330.953 139.178 330.953 138.253 cv
330.953 137.396 331.482 136.694 332.465 136.694 cv
332.681 136.694 332.918 136.736 333.091 136.808 cv
332.961 137.486 li
332.864 137.438 332.719 137.396 332.502 137.396 cv
332.07 137.396 331.789 137.737 331.795 138.218 cv
331.795 138.758 332.119 139.045 332.519 139.045 cv
332.713 139.045 332.864 139.01 332.988 138.949 cv
333.086 139.621 li
cp
f
334.711 139.106 mo
335.035 139.106 335.234 138.751 335.234 138.224 cv
335.234 137.791 335.084 137.348 334.711 137.348 cv
334.322 137.348 334.171 137.791 334.171 138.23 cv
334.171 138.728 334.359 139.106 334.705 139.106 cv
334.711 139.106 li
cp
334.695 139.76 mo
333.922 139.76 333.328 139.195 333.328 138.247 cv
333.328 137.3 333.891 136.694 334.743 136.694 cv
335.548 136.694 336.088 137.312 336.088 138.199 cv
336.088 139.268 335.402 139.76 334.7 139.76 cv
334.695 139.76 li
cp
f
336.596 137.695 mo
336.596 137.329 336.584 137.024 336.574 136.76 cv
337.271 136.76 li
337.303 137.161 li
337.318 137.161 li
337.433 136.97 337.67 136.694 338.118 136.694 cv
338.464 136.694 338.729 136.892 338.842 137.197 cv
338.853 137.197 li
338.955 137.041 339.068 136.921 339.198 136.837 cv
339.344 136.747 339.506 136.694 339.701 136.694 cv
340.208 136.694 340.592 137.089 340.592 137.966 cv
340.592 139.694 li
339.793 139.694 li
339.793 138.104 li
339.793 137.678 339.668 137.432 339.403 137.432 cv
339.209 137.432 339.08 137.575 339.02 137.749 cv
339.004 137.816 338.993 137.905 338.993 137.978 cv
338.993 139.694 li
338.193 139.694 li
338.193 138.05 li
338.193 137.684 338.075 137.432 337.811 137.432 cv
337.6 137.432 337.476 137.612 337.428 137.755 cv
337.4 137.827 337.395 137.911 337.395 137.989 cv
337.395 139.694 li
336.596 139.694 li
336.596 137.695 li
cp
f
330.933 45.2101 mo
331.168 44.9372 331.424 44.6843 331.701 44.4562 cv
317.137 32.0676 li
330.933 45.2101 li
cp
330.25 46.1828 mo
330.426 45.8703 330.626 45.5724 330.854 45.2975 cv
314.103 36.2438 li
330.25 46.1828 li
cp
331.779 44.3996 mo
332.062 44.1769 332.36 43.9758 332.681 43.8068 cv
320.975 28.6115 li
331.779 44.3996 li
cp
329.488 48.6955 mo
310.928 51.1769 li
329.496 49.7512 li
329.478 49.5558 329.468 49.3566 329.468 49.1559 cv
329.468 49.0002 329.479 48.8478 329.488 48.6955 cv
cp
341.587 49.1559 mo
341.587 49.3586 341.578 49.5588 341.558 49.757 cv
360.057 51.1769 li
341.564 48.7048 li
341.576 48.8542 341.587 49.0041 341.587 49.1559 cv
cp
332.754 43.7712 mo
333.073 43.6061 333.405 43.466 333.754 43.3605 cv
325.445 26.0295 li
332.754 43.7712 li
cp
329.763 47.2897 mo
329.872 46.9479 330.013 46.6198 330.179 46.3073 cv
312.001 40.9616 li
329.763 47.2897 li
cp
329.505 48.4948 mo
329.544 48.1374 329.614 47.7902 329.713 47.4543 cv
310.928 46.0134 li
329.505 48.4948 li
cp
333.824 43.343 mo
334.165 43.2424 334.521 43.1682 334.883 43.1301 cv
330.355 24.4338 li
333.824 43.343 li
cp
340.866 46.2892 mo
341.033 46.5998 341.172 46.9279 341.282 47.2673 cv
358.984 40.9616 li
340.866 46.2892 li
cp
340.178 45.2731 mo
340.405 45.5466 340.607 45.841 340.787 46.1525 cv
356.883 36.2438 li
340.178 45.2731 li
cp
341.339 47.4489 mo
341.437 47.7834 341.51 48.1301 341.549 48.4855 cv
360.057 46.0134 li
341.339 47.4489 li
cp
339.315 44.4304 mo
339.596 44.6545 339.853 44.905 340.089 45.1745 cv
353.85 32.0676 li
339.315 44.4304 li
cp
336.103 43.1242 mo
336.467 43.1589 336.822 43.2287 337.164 43.3259 cv
340.629 24.4338 li
336.103 43.1242 li
cp
338.323 43.7819 mo
338.644 43.9499 338.945 44.1452 339.229 44.3649 cv
350.011 28.6115 li
338.323 43.7819 li
cp
334.95 43.1242 mo
335.141 43.1066 335.334 43.0954 335.526 43.0954 cv
335.698 43.0954 335.867 43.1066 336.035 43.1203 cv
335.491 23.8932 li
334.95 43.1242 li
cp
337.238 43.3439 mo
337.586 43.4474 337.922 43.5822 338.242 43.7424 cv
345.539 26.0295 li
337.238 43.3439 li
cp
f
276.952 73.3908 mo
276.952 74.8718 li
280.048 74.8718 li
280.511 74.8718 280.704 74.7809 280.704 74.3527 cv
280.704 73.9103 li
280.704 73.4816 280.511 73.3908 280.048 73.3908 cv
276.952 73.3908 li
cp
276.952 71.0417 mo
276.952 72.4313 li
280.048 72.4313 li
280.466 72.4313 280.669 72.3517 280.669 72.0129 cv
280.669 71.4601 li
280.669 71.1203 280.466 71.0417 280.048 71.0417 cv
276.952 71.0417 li
cp
275.62 70.092 mo
280.613 70.092 li
281.505 70.092 281.924 70.4084 281.924 71.2219 cv
281.924 71.9333 li
281.924 72.4992 281.562 72.8381 280.917 72.9167 cv
281.595 73.0075 281.969 73.4142 281.969 74.0358 cv
281.969 74.7809 li
281.969 75.5602 281.392 75.9221 280.252 75.9221 cv
275.62 75.9221 li
275.62 70.092 li
cp
f
289.087 73.5944 mo
287.833 71.2219 li
286.533 73.5944 li
289.087 73.5944 li
cp
287.222 70.092 mo
288.534 70.092 li
291.877 75.9221 li
290.353 75.9221 li
289.651 74.6452 li
285.958 74.6452 li
285.28 75.9221 li
283.923 75.9221 li
287.222 70.092 li
cp
f
295.539 71.0974 mo
295.539 72.7243 li
298.59 72.7243 li
299.007 72.7243 299.2 72.6447 299.2 72.2614 cv
299.2 71.5598 li
299.2 71.176 299.007 71.0974 298.59 71.0974 cv
295.539 71.0974 li
cp
294.205 70.092 mo
299.2 70.092 li
300.093 70.092 300.512 70.4084 300.512 71.2219 cv
300.512 72.5886 li
300.512 73.403 300.093 73.7189 299.2 73.7189 cv
298.432 73.7189 li
301.121 75.9221 li
299.178 75.9221 li
296.827 73.7189 li
295.539 73.7189 li
295.539 75.9221 li
294.205 75.9221 li
294.205 70.092 li
cp
f
310.556 74.9055 mo
311.098 74.4426 li
309.347 72.9846 li
307.854 73.9103 li
307.854 74.9055 li
310.556 74.9055 li
cp
306.715 74.5441 mo
306.715 74.1603 li
306.715 73.5607 306.929 73.3806 307.438 73.0749 cv
308.624 72.3635 li
308.283 72.0807 308.125 71.82 308.125 71.4816 cv
308.125 71.155 li
308.125 70.3181 308.578 70.092 309.572 70.092 cv
310.747 70.092 li
311.799 70.092 312.193 70.3181 312.193 71.2668 cv
312.193 71.6174 li
311.143 71.7985 li
311.143 71.0187 li
309.233 71.0187 li
309.233 71.4362 li
311.979 73.7189 li
313.334 72.5886 li
314.103 73.2565 li
312.759 74.3742 li
314.601 75.9221 li
312.826 75.9221 li
311.866 75.1091 li
311.347 75.572 li
310.973 75.8991 310.736 75.9221 310.25 75.9221 cv
308.172 75.9221 li
307.075 75.9221 306.715 75.6408 306.715 74.5441 cv
cp
f
321.956 71.131 mo
321.956 74.8259 li
326.193 74.8259 li
326.193 73.5266 li
323.977 73.5266 li
323.977 72.5334 li
327.516 72.5334 li
327.516 74.5441 li
327.516 75.6408 327.164 75.9221 326.069 75.9221 cv
322.047 75.9221 li
320.949 75.9221 320.6 75.6408 320.6 74.5441 cv
320.6 71.4709 li
320.6 70.3737 320.949 70.092 322.047 70.092 cv
326.069 70.092 li
327.131 70.092 327.516 70.364 327.516 71.4133 cv
327.516 71.4601 327.516 71.5041 327.516 71.55 cv
326.193 71.7868 li
326.193 71.131 li
321.956 71.131 li
cp
f
332.17 71.0974 mo
332.17 72.7243 li
335.221 72.7243 li
335.639 72.7243 335.831 72.6447 335.831 72.2614 cv
335.831 71.5598 li
335.831 71.176 335.639 71.0974 335.221 71.0974 cv
332.17 71.0974 li
cp
330.836 70.092 mo
335.831 70.092 li
336.725 70.092 337.142 70.4084 337.142 71.2219 cv
337.142 72.5886 li
337.142 73.403 336.725 73.7189 335.831 73.7189 cv
335.063 73.7189 li
337.753 75.9221 li
335.809 75.9221 li
333.458 73.7189 li
332.17 73.7189 li
332.17 75.9221 li
330.836 75.9221 li
330.836 70.092 li
cp
f
340.351 70.092 mo
341.705 70.092 li
341.705 75.9221 li
340.351 75.9221 li
340.351 70.092 li
cp
f
345.142 70.092 mo
346.497 70.092 li
346.497 74.8259 li
350.87 74.8259 li
350.87 75.9221 li
345.142 75.9221 li
345.142 70.092 li
cp
f
353.31 70.092 mo
354.665 70.092 li
354.665 74.8259 li
359.04 74.8259 li
359.04 75.9221 li
353.31 75.9221 li
353.31 70.092 li
cp
f
280.357 59.1647 mo
281.642 62.8264 li
279.596 62.8264 li
279.596 63.4201 li
286.707 63.4201 li
286.707 62.8264 li
285.018 62.8264 li
279.596 47.5627 li
278.835 47.5627 li
273.868 61.4709 li
273.392 62.778 273.344 62.8264 272.203 62.8264 cv
271.396 62.8264 li
271.396 63.4201 li
276.292 63.4201 li
276.292 62.8264 li
275.033 62.8264 li
274.415 62.8264 274.224 62.7551 274.224 62.4689 cv
274.224 62.3742 274.271 62.2316 274.415 61.8268 cv
275.366 59.1647 li
280.357 59.1647 li
cp
280.121 58.5705 mo
275.58 58.5705 li
277.836 52.2692 li
280.121 58.5705 li
cp
f
290.121 54.6701 mo
288.528 54.6701 li
288.528 54.0759 li
289.265 54.0759 li
291.071 54.0759 291.833 54.029 292.975 53.8151 cv
292.975 55.5031 li
293.878 54.4099 295.065 53.8386 296.397 53.8386 cv
297.824 53.8386 298.918 54.528 299.346 55.6935 cv
300.225 54.4333 301.318 53.8386 302.792 53.8386 cv
303.696 53.8386 304.576 54.1476 305.075 54.6247 cv
305.597 55.1462 305.717 55.5988 305.717 57.0246 cv
305.717 62.8264 li
307.31 62.8264 li
307.31 63.4201 li
301.604 63.4201 li
301.604 62.8264 li
302.864 62.8264 li
302.864 57.0246 li
302.864 55.5505 302.864 55.4802 302.673 55.2175 cv
302.484 54.9557 302.151 54.7897 301.771 54.7897 cv
301.081 54.7897 300.392 55.1706 299.917 55.8361 cv
299.487 56.4308 299.346 57.049 299.346 58.2609 cv
299.346 62.8264 li
300.629 62.8264 li
300.629 63.4201 li
295.232 63.4201 li
295.232 62.8264 li
296.491 62.8264 li
296.491 57.0246 li
296.491 55.7175 296.469 55.527 296.207 55.195 cv
295.993 54.9323 295.684 54.7897 295.305 54.7897 cv
294.566 54.7897 293.757 55.3127 293.354 56.0739 cv
293.045 56.6428 292.975 57.0246 292.975 58.2609 cv
292.975 62.8264 li
294.233 62.8264 li
294.233 63.4201 li
288.528 63.4201 li
288.528 62.8264 li
290.121 62.8264 li
290.121 54.6701 li
cp
f
318.761 58.1652 mo
318.761 57.8571 li
318.761 55.6472 316.834 53.8386 314.456 53.8386 cv
311.674 53.8386 309.606 55.9313 309.606 58.7131 cv
309.606 61.4709 311.793 63.6579 314.577 63.6579 cv
316.383 63.6579 317.737 62.7302 318.761 60.8044 cv
318.214 60.5436 li
317.334 62.1364 316.24 62.945 314.956 62.945 cv
313.555 62.945 312.864 62.1364 312.839 60.3766 cv
312.839 58.6906 li
312.839 58.1652 li
318.761 58.1652 li
cp
312.839 57.5715 mo
312.839 56.9059 li
312.839 54.9084 313.101 54.4807 314.362 54.4807 cv
315.598 54.4807 315.861 54.9084 315.861 56.9059 cv
315.861 57.5715 li
312.839 57.5715 li
cp
f
322.772 54.6701 mo
321.177 54.6701 li
321.177 54.0759 li
321.82 54.0759 li
323.699 54.0759 324.507 54.029 325.626 53.8151 cv
325.626 55.8605 li
326.243 54.5983 327.288 53.8386 328.406 53.8386 cv
329.5 53.8386 330.331 54.6247 330.331 55.6701 cv
330.331 56.5978 329.715 57.216 328.811 57.216 cv
328.05 57.216 327.455 56.6218 327.455 55.8605 cv
327.455 55.5505 327.551 55.3366 327.765 55.0519 cv
327.813 55.0041 327.835 54.9557 327.835 54.8849 cv
327.835 54.7663 327.765 54.695 327.646 54.695 cv
327.431 54.695 326.933 55.0519 326.625 55.4328 cv
325.91 56.3347 325.626 57.216 325.626 58.6647 cv
325.626 62.8264 li
327.455 62.8264 li
327.455 63.4201 li
321.177 63.4201 li
321.177 62.8264 li
322.772 62.8264 li
322.772 54.6701 li
cp
f
334.391 54.6701 mo
332.799 54.6701 li
332.799 54.0759 li
333.535 54.0759 li
335.342 54.0759 336.127 54.029 337.245 53.8151 cv
337.245 62.8264 li
338.815 62.8264 li
338.815 63.4201 li
332.799 63.4201 li
332.799 62.8264 li
334.391 62.8264 li
334.391 54.6701 li
cp
f
350.455 60.9001 mo
349.575 62.7302 348.172 63.6579 346.247 63.6579 cv
343.465 63.6579 341.206 61.5182 341.206 58.8557 cv
341.206 56.0739 343.562 53.8386 346.508 53.8386 cv
348.53 53.8386 350.146 54.9802 350.146 56.4064 cv
350.146 57.2385 349.455 57.9279 348.647 57.9279 cv
347.769 57.9279 347.149 57.3107 347.149 56.4553 cv
347.149 55.9069 347.483 55.3366 348.03 54.9802 cv
347.602 54.5983 347.27 54.4807 346.65 54.4807 cv
344.868 54.4807 344.298 55.5505 344.298 58.8557 cv
344.298 61.8981 344.915 62.945 346.724 62.945 cv
348.004 62.945 349.124 62.112 349.886 60.6149 cv
350.455 60.9001 li
cp
f
362.573 62.0895 mo
362.334 62.3503 362.145 62.4689 361.931 62.4689 cv
361.526 62.4689 361.432 62.2546 361.432 61.4958 cv
361.432 57.1672 li
361.432 55.7175 361.335 55.361 360.885 54.8849 cv
360.266 54.2199 359.031 53.8386 357.58 53.8386 cv
355.369 53.8386 353.68 54.8849 353.68 56.2643 cv
353.68 56.9543 354.179 57.5007 354.845 57.5007 cv
355.583 57.5007 356.177 56.9543 356.177 56.2873 cv
356.177 56.0031 356.106 55.8127 355.892 55.5031 cv
355.774 55.2897 355.725 55.195 355.725 55.0998 cv
355.725 54.7189 356.317 54.4807 357.248 54.4807 cv
357.912 54.4807 358.365 54.6701 358.579 55.028 cv
358.745 55.361 358.745 55.3127 358.768 57.2878 cv
358.768 57.8796 li
354.965 58.1896 352.896 59.4255 352.896 61.424 cv
352.896 62.7551 353.941 63.6579 355.489 63.6579 cv
356.771 63.6579 357.912 63.111 358.768 62.0895 cv
359.243 63.0397 359.98 63.5388 360.86 63.5388 cv
361.598 63.5388 362.382 63.1345 362.953 62.4689 cv
362.573 62.0895 li
cp
358.768 59.7111 mo
358.768 61.6608 358.316 62.4211 357.175 62.4211 cv
356.225 62.4211 355.559 61.6848 355.559 60.6384 cv
355.559 59.2595 356.677 58.5471 358.768 58.5217 cv
358.768 59.7111 li
cp
f
367.35 67.423 mo
266.048 67.423 li
266.048 66.195 li
367.35 66.195 li
367.35 67.423 li
cp
f
335.599 45.5329 mo
336.433 47.5427 li
338.601 47.7131 li
336.946 49.1257 li
337.453 51.2419 li
335.599 50.1047 li
333.745 51.2419 li
334.252 49.1257 li
332.598 47.7131 li
334.768 47.5427 li
335.599 45.5329 li
cp
f
288.916 33.6286 mo
289.917 39.2062 283.577 45.0124 274.757 46.5969 cv
265.936 48.1799 257.973 44.9421 256.971 39.364 cv
255.969 33.7863 262.309 27.9802 271.13 26.3957 cv
279.95 24.8127 287.913 28.0505 288.916 33.6286 cv
cp
f
268.378 30.1701 mo
268.643 30.1232 269.121 30.2307 269.196 30.653 cv
269.247 30.9401 269.668 34.2697 269.775 34.8605 cv
269.824 35.1398 269.194 35.8288 268.944 35.8737 cv
268.867 35.8879 268.783 35.8679 268.714 35.801 cv
268.649 35.7443 265.881 33.5266 265.491 33.2297 cv
265.526 33.6071 265.783 35.3503 265.921 36.1198 cv
265.959 36.3312 265.949 36.4113 265.771 36.444 cv
265.499 36.4929 265.021 36.3854 264.945 35.9631 cv
264.894 35.676 264.473 32.3469 264.367 31.7551 cv
264.317 31.4767 264.948 30.7868 265.197 30.7419 cv
265.274 30.7282 265.357 30.7482 265.427 30.8151 cv
265.493 30.8718 268.262 33.0993 268.647 33.3693 cv
268.615 33.009 268.358 31.2658 268.22 30.4958 cv
268.182 30.2849 268.192 30.2048 268.371 30.1721 cv
268.378 30.1701 li
cp
0 0 0 1 cmyk
f
272.384 31.6428 mo
272.335 31.3635 272.187 31.216 272.039 31.2419 cv
271.806 31.2834 271.633 31.5676 271.8 32.7248 cv
271.824 32.7204 271.885 32.7101 272 32.6711 cv
272.271 32.5793 272.515 32.3698 272.385 31.6506 cv
272.384 31.6428 li
cp
273.612 31.5007 mo
273.774 32.4055 272.902 32.9636 272.102 33.1076 cv
272.023 33.1213 271.946 33.1359 271.869 33.1491 cv
271.886 33.2424 271.901 33.3351 271.917 33.4206 cv
272.075 34.2985 272.371 34.3859 272.846 34.3 cv
273.063 34.2609 273.333 34.0646 273.505 33.9025 cv
273.574 33.8386 273.622 33.7941 273.653 33.7883 cv
273.723 33.7766 273.782 33.923 273.817 34.1174 cv
273.826 34.1691 273.818 34.256 273.742 34.3752 cv
273.468 34.8083 272.958 35.1535 272.485 35.238 cv
271.589 35.3986 270.655 35.4274 270.327 33.6008 cv
269.99 31.7233 270.619 30.8869 271.739 30.6843 cv
272.906 30.4758 273.468 30.6974 273.61 31.4919 cv
273.612 31.5007 li
cp
f
280.037 30.3029 mo
280.201 31.216 279.849 32.8254 279.368 33.8185 cv
279.28 34.0007 279.236 34.0256 279.003 34.0681 cv
278.615 34.1379 277.766 34.1501 277.621 33.6608 cv
277.462 33.1315 277.246 32.4196 277.103 32.0778 cv
276.98 32.9992 276.603 33.9401 276.335 34.3283 cv
276.202 34.527 276.139 34.5812 275.931 34.6203 cv
275.572 34.6833 274.709 34.7077 274.577 34.1896 cv
274.272 33.0314 273.612 30.6979 273.592 30.5871 cv
273.563 30.4274 273.605 30.3503 273.924 30.2912 cv
274.353 30.215 275.349 30.176 275.462 30.8107 cv
275.486 30.9372 275.883 32.4807 276.058 33.0515 cv
276.098 33.1848 276.13 33.2307 276.185 33.2219 cv
276.302 33.2004 276.493 32.7468 276.495 31.9958 cv
276.497 31.3835 276.355 30.7722 276.248 30.1716 cv
276.209 29.9611 276.234 29.8781 276.592 29.8137 cv
276.897 29.759 277.61 29.7092 277.944 29.9631 cv
278.074 30.0622 278.133 30.1657 278.208 30.3176 cv
278.271 30.4367 278.771 31.9704 278.977 32.5358 cv
279.028 32.6843 279.04 32.7092 279.109 32.6955 cv
279.319 32.6574 279.411 31.6901 279.309 31.1237 cv
279.152 30.2448 278.84 29.7155 278.817 29.5881 cv
278.794 29.4616 278.887 29.4011 279.145 29.3547 cv
279.37 29.3141 279.538 29.3542 279.669 29.4621 cv
279.858 29.6198 279.966 29.905 280.036 30.2941 cv
280.037 30.3029 li
cp
f
266.222 37.3464 mo
266.797 37.2443 267.811 37.2541 267.889 37.6848 cv
267.979 38.1926 268.843 42.1911 268.885 42.4294 cv
268.918 42.6144 268.819 42.6852 268.539 42.7355 cv
267.963 42.8395 267.147 42.7668 267.073 42.3527 cv
267.04 42.1672 266.911 41.4479 266.753 40.6208 cv
266.649 40.0368 266.52 39.4055 266.407 38.8674 cv
266.152 40.0925 265.701 42.006 265.589 43.0295 cv
265.567 43.2258 265.513 43.2785 265.217 43.3327 cv
264.525 43.4567 263.833 43.3185 263.715 42.9724 cv
263.545 42.4797 262.666 40.3513 262.353 39.6306 cv
262.332 40.1398 262.533 43.0983 262.57 43.6584 cv
262.579 43.7526 262.541 43.8127 262.41 43.8361 cv
262.16 43.8806 261.707 43.7697 261.63 43.3478 cv
261.55 42.8996 261.485 38.9138 261.458 38.4992 cv
261.443 38.2399 261.469 38.2004 261.889 38.1247 cv
262.549 38.006 263.497 38.0461 263.653 38.4284 cv
263.855 38.9245 264.705 40.9714 264.95 41.4865 cv
265.104 40.8732 265.732 38.1506 265.806 37.5788 cv
265.824 37.4533 265.918 37.4011 266.213 37.3478 cv
266.222 37.3464 li
cp
f
271.356 38.6164 mo
271.306 38.3361 271.158 38.1887 271.01 38.2155 cv
270.778 38.257 270.604 38.5412 270.772 39.6984 cv
270.795 39.694 270.857 39.6838 270.97 39.6447 cv
271.244 39.5529 271.487 39.3434 271.358 38.6242 cv
271.356 38.6164 li
cp
272.583 38.4743 mo
272.746 39.3791 271.874 39.9362 271.073 40.0803 cv
270.994 40.0949 270.918 40.1086 270.839 40.1227 cv
270.856 40.216 270.874 40.3078 270.888 40.3932 cv
271.046 41.2722 271.343 41.3586 271.817 41.2736 cv
272.035 41.2346 272.305 41.0378 272.477 40.8762 cv
272.546 40.8122 272.593 40.7678 272.625 40.7629 cv
272.695 40.7502 272.753 40.8967 272.789 41.091 cv
272.797 41.1418 272.79 41.2307 272.714 41.3478 cv
272.438 41.7819 271.931 42.1271 271.456 42.2111 cv
270.562 42.3723 269.627 42.4011 269.299 40.5734 cv
268.961 38.697 269.59 37.8605 270.71 37.6579 cv
271.877 37.4494 272.439 37.6711 272.582 38.4655 cv
272.583 38.4743 li
cp
f
278.223 39.4255 mo
278.238 39.5099 278.222 39.6003 278.184 39.6945 cv
278.063 40.0041 277.485 41.1291 277.143 41.1906 cv
277.002 41.2155 276.155 41.0974 276.021 40.676 cv
275.984 40.5519 275.956 40.4431 275.933 40.3166 cv
275.921 40.2482 275.769 38.9494 275.749 38.8395 cv
275.667 38.3918 275.637 38.3537 275.575 38.3644 cv
275.442 38.3889 275.127 39.134 275.04 39.9011 cv
274.984 40.4343 275.053 40.7795 275.149 41.3127 cv
275.177 41.4733 275.136 41.551 274.934 41.5881 cv
274.304 41.7004 273.455 41.5817 273.365 41.0749 cv
273.218 40.2629 272.899 37.5964 272.882 37.5041 cv
272.854 37.3434 272.897 37.2658 273.1 37.2297 cv
273.729 37.1174 274.576 37.2258 274.667 37.7419 cv
274.686 37.8425 274.745 38.5754 274.792 39.0988 cv
274.747 38.5392 275.666 36.7692 276.079 36.695 cv
276.219 36.6701 277.066 36.7883 277.198 37.2082 cv
277.237 37.3322 277.265 37.4411 277.287 37.5685 cv
277.306 37.6706 277.447 38.9016 277.472 39.0446 cv
277.553 39.4933 277.584 39.5314 277.646 39.5207 cv
277.708 39.509 277.819 39.2795 277.86 39.1935 cv
277.895 39.1179 277.907 39.0978 277.938 39.0925 cv
278.024 39.0773 278.191 39.256 278.221 39.4167 cv
278.223 39.4255 li
cp
f
283.567 38.466 mo
283.582 38.55 283.566 38.6408 283.527 38.7346 cv
283.406 39.0451 282.829 40.1696 282.487 40.2307 cv
282.347 40.2565 281.498 40.1379 281.367 39.716 cv
281.328 39.5925 281.301 39.4826 281.278 39.3566 cv
281.229 39.0866 281.167 38.6091 281.147 38.4025 cv
281.12 38.9665 280.278 40.6276 279.866 40.7018 cv
279.726 40.7277 278.877 40.6086 278.745 40.1872 cv
278.706 40.0637 278.68 39.9543 278.657 39.8283 cv
278.459 38.7375 278.25 36.6359 278.235 36.5427 cv
278.207 36.383 278.249 36.3044 278.451 36.2682 cv
279.081 36.1555 279.928 36.2648 280.02 36.7809 cv
280.038 36.882 280.128 38.1848 280.195 38.5558 cv
280.275 39.0051 280.306 39.0427 280.368 39.0309 cv
280.492 39.009 280.832 38.258 280.911 37.4938 cv
280.968 36.9597 280.897 36.6135 280.802 36.0812 cv
280.773 35.9206 280.816 35.8444 281.018 35.8078 cv
281.647 35.6945 282.487 35.8054 282.58 36.321 cv
282.594 36.3981 282.761 37.7726 282.817 38.0851 cv
282.896 38.5339 282.927 38.5715 282.989 38.5598 cv
283.052 38.5495 283.163 38.32 283.204 38.2336 cv
283.238 38.1584 283.251 38.1379 283.283 38.1325 cv
283.368 38.1174 283.537 38.2966 283.565 38.4562 cv
283.567 38.466 li
cp
f
285.679 38.7326 mo
285.785 39.3249 285.378 39.6066 284.936 39.6857 cv
284.569 39.7521 284.177 39.6218 284.075 39.0554 cv
283.986 38.5646 284.426 38.1105 284.823 38.0392 cv
285.251 37.9621 285.613 38.3693 285.677 38.7228 cv
285.679 38.7326 li
cp
285.359 34.7136 mo
285.453 35.238 285.275 36.8845 285.274 37.0163 cv
285.27 37.2614 284.918 37.4543 284.352 37.5563 cv
284.227 37.5793 284.05 37.5754 284.036 37.4997 cv
283.967 37.1105 283.535 34.9279 283.456 34.4885 cv
283.426 34.3278 283.531 34.238 283.779 34.1935 cv
284.34 34.0934 285.244 34.071 285.357 34.7048 cv
285.359 34.7136 li
cp
f
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
